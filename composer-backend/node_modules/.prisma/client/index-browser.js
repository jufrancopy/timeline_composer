
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ComposerScalarFieldEnum = {
  id: 'id',
  bio: 'bio',
  birth_day: 'birth_day',
  birth_month: 'birth_month',
  birth_year: 'birth_year',
  created_at: 'created_at',
  death_day: 'death_day',
  death_month: 'death_month',
  death_year: 'death_year',
  email: 'email',
  first_name: 'first_name',
  ip_address: 'ip_address',
  last_name: 'last_name',
  notable_works: 'notable_works',
  photo_url: 'photo_url',
  quality: 'quality',
  references: 'references',
  status: 'status',
  updated_at: 'updated_at',
  youtube_link: 'youtube_link',
  period: 'period',
  mainRole: 'mainRole',
  completeness_score: 'completeness_score',
  rejection_reason: 'rejection_reason',
  is_student_contribution: 'is_student_contribution',
  student_first_name: 'student_first_name',
  student_last_name: 'student_last_name',
  suggestion_reason: 'suggestion_reason'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  text: 'text',
  composerId: 'composerId',
  created_at: 'created_at',
  ip_address: 'ip_address',
  name: 'name'
};

exports.Prisma.RatingScalarFieldEnum = {
  id: 'id',
  rating_value: 'rating_value',
  ip_address: 'ip_address',
  created_at: 'created_at',
  composerId: 'composerId'
};

exports.Prisma.OtpScalarFieldEnum = {
  id: 'id',
  email: 'email',
  code: 'code',
  expiresAt: 'expiresAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password'
};

exports.Prisma.AlumnoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  telefono: 'telefono',
  direccion: 'direccion',
  instrumento: 'instrumento',
  detalles_adicionales: 'detalles_adicionales',
  created_at: 'created_at',
  updated_at: 'updated_at',
  nombre_tutor: 'nombre_tutor',
  telefono_tutor: 'telefono_tutor',
  vive_con_padres: 'vive_con_padres'
};

exports.Prisma.AsistenciaScalarFieldEnum = {
  id: 'id',
  presente: 'presente',
  created_at: 'created_at',
  alumnoId: 'alumnoId',
  diaClaseId: 'diaClaseId'
};

exports.Prisma.CalificacionEvaluacionScalarFieldEnum = {
  id: 'id',
  puntos: 'puntos',
  created_at: 'created_at',
  alumnoId: 'alumnoId',
  evaluacionAsignacionId: 'evaluacionAsignacionId'
};

exports.Prisma.CatedraScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  anio: 'anio',
  institucion: 'institucion',
  turno: 'turno',
  aula: 'aula',
  dias: 'dias',
  created_at: 'created_at',
  updated_at: 'updated_at',
  docenteId: 'docenteId',
  modalidad_pago: 'modalidad_pago'
};

exports.Prisma.CatedraAlumnoScalarFieldEnum = {
  catedraId: 'catedraId',
  alumnoId: 'alumnoId',
  assignedAt: 'assignedAt',
  assignedBy: 'assignedBy',
  composerId: 'composerId',
  id: 'id',
  dia_cobro: 'dia_cobro',
  fecha_inscripcion: 'fecha_inscripcion'
};

exports.Prisma.CatedraDiaHorarioScalarFieldEnum = {
  id: 'id',
  dia_semana: 'dia_semana',
  hora_inicio: 'hora_inicio',
  hora_fin: 'hora_fin',
  catedraId: 'catedraId',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ComentarioPublicacionScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  publicacionId: 'publicacionId',
  autorAlumnoId: 'autorAlumnoId',
  autorDocenteId: 'autorDocenteId',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CostoCatedraScalarFieldEnum = {
  id: 'id',
  catedraId: 'catedraId',
  monto_matricula: 'monto_matricula',
  monto_cuota: 'monto_cuota',
  es_gratuita: 'es_gratuita',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DiaClaseScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  dia_semana: 'dia_semana',
  created_at: 'created_at',
  updated_at: 'updated_at',
  catedraId: 'catedraId'
};

exports.Prisma.DocenteScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  otpSecret: 'otpSecret',
  otpEnabled: 'otpEnabled',
  created_at: 'created_at',
  updated_at: 'updated_at',
  direccion: 'direccion',
  telefono: 'telefono'
};

exports.Prisma.EditSuggestionScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  birth_year: 'birth_year',
  birth_month: 'birth_month',
  birth_day: 'birth_day',
  death_year: 'death_year',
  death_month: 'death_month',
  death_day: 'death_day',
  bio: 'bio',
  notable_works: 'notable_works',
  period: 'period',
  references: 'references',
  youtube_link: 'youtube_link',
  photo_url: 'photo_url',
  mainRole: 'mainRole',
  reason: 'reason',
  status: 'status',
  suggester_email: 'suggester_email',
  suggester_ip: 'suggester_ip',
  created_at: 'created_at',
  updated_at: 'updated_at',
  composerId: 'composerId',
  is_student_contribution: 'is_student_contribution',
  student_first_name: 'student_first_name',
  student_last_name: 'student_last_name',
  points: 'points'
};

exports.Prisma.EvaluacionScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  created_at: 'created_at',
  catedraId: 'catedraId',
  fecha_limite: 'fecha_limite',
  isMaster: 'isMaster',
  unidadPlanId: 'unidadPlanId'
};

exports.Prisma.EvaluacionAsignacionScalarFieldEnum = {
  id: 'id',
  estado: 'estado',
  fecha_entrega: 'fecha_entrega',
  created_at: 'created_at',
  updated_at: 'updated_at',
  alumnoId: 'alumnoId',
  evaluacionId: 'evaluacionId',
  publicacionId: 'publicacionId'
};

exports.Prisma.OpcionScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  es_correcta: 'es_correcta',
  preguntaId: 'preguntaId'
};

exports.Prisma.PagoScalarFieldEnum = {
  id: 'id',
  catedraAlumnoId: 'catedraAlumnoId',
  fecha_pago: 'fecha_pago',
  monto_pagado: 'monto_pagado',
  tipo_pago: 'tipo_pago',
  periodo_cubierto: 'periodo_cubierto',
  confirmadoPorId: 'confirmadoPorId',
  created_at: 'created_at'
};

exports.Prisma.PlanDeClasesScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  tipoOrganizacion: 'tipoOrganizacion',
  docenteId: 'docenteId',
  catedraId: 'catedraId',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PreguntaScalarFieldEnum = {
  id: 'id',
  texto: 'texto',
  evaluacionId: 'evaluacionId'
};

exports.Prisma.PublicacionScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  contenido: 'contenido',
  tipo: 'tipo',
  catedraId: 'catedraId',
  autorAlumnoId: 'autorAlumnoId',
  autorDocenteId: 'autorDocenteId',
  created_at: 'created_at',
  updated_at: 'updated_at',
  tareaMaestraId: 'tareaMaestraId',
  visibleToStudents: 'visibleToStudents',
  evaluacionAsignacionId: 'evaluacionAsignacionId',
  evaluacionMaestraId: 'evaluacionMaestraId'
};

exports.Prisma.PublicacionInteraccionScalarFieldEnum = {
  id: 'id',
  publicacionId: 'publicacionId',
  alumnoId: 'alumnoId',
  docenteId: 'docenteId',
  tipo: 'tipo',
  created_at: 'created_at'
};

exports.Prisma.PuntuacionScalarFieldEnum = {
  id: 'id',
  puntos: 'puntos',
  motivo: 'motivo',
  created_at: 'created_at',
  alumnoId: 'alumnoId',
  catedraId: 'catedraId',
  tipo: 'tipo'
};

exports.Prisma.RespuestaAlumnoScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  alumnoId: 'alumnoId',
  preguntaId: 'preguntaId',
  opcionElegidaId: 'opcionElegidaId'
};

exports.Prisma.TareaAsignacionScalarFieldEnum = {
  id: 'id',
  estado: 'estado',
  submission_path: 'submission_path',
  submission_date: 'submission_date',
  puntos_obtenidos: 'puntos_obtenidos',
  created_at: 'created_at',
  updated_at: 'updated_at',
  alumnoId: 'alumnoId',
  tareaMaestraId: 'tareaMaestraId'
};

exports.Prisma.TareaMaestraScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  fecha_entrega: 'fecha_entrega',
  puntos_posibles: 'puntos_posibles',
  recursos: 'recursos',
  multimedia_path: 'multimedia_path',
  created_at: 'created_at',
  updated_at: 'updated_at',
  catedraId: 'catedraId',
  publicacionId: 'publicacionId',
  unidadPlanId: 'unidadPlanId'
};

exports.Prisma.UnidadPlanScalarFieldEnum = {
  id: 'id',
  planDeClasesId: 'planDeClasesId',
  periodo: 'periodo',
  contenido: 'contenido',
  capacidades: 'capacidades',
  horasTeoricas: 'horasTeoricas',
  horasPracticas: 'horasPracticas',
  estrategiasMetodologicas: 'estrategiasMetodologicas',
  mediosVerificacionEvaluacion: 'mediosVerificacionEvaluacion',
  recursos: 'recursos',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.RoleType = exports.$Enums.RoleType = {
  COMPOSER: 'COMPOSER',
  POET: 'POET',
  CONDUCTOR: 'CONDUCTOR',
  ARRANGER: 'ARRANGER',
  PERFORMER: 'PERFORMER',
  ENSEMBLE_ORCHESTRA: 'ENSEMBLE_ORCHESTRA',
  STUDENT: 'STUDENT'
};

exports.ModalidadPago = exports.$Enums.ModalidadPago = {
  PARTICULAR: 'PARTICULAR',
  INSTITUCIONAL: 'INSTITUCIONAL'
};

exports.EstadoEvaluacionAsignacion = exports.$Enums.EstadoEvaluacionAsignacion = {
  PENDIENTE: 'PENDIENTE',
  REALIZADA: 'REALIZADA',
  CALIFICADA: 'CALIFICADA',
  VENCIDA: 'VENCIDA'
};

exports.TipoPago = exports.$Enums.TipoPago = {
  MATRICULA: 'MATRICULA',
  CUOTA: 'CUOTA',
  OTRO: 'OTRO'
};

exports.TipoOrganizacionPlan = exports.$Enums.TipoOrganizacionPlan = {
  MES: 'MES',
  MODULO: 'MODULO'
};

exports.TipoPublicacion = exports.$Enums.TipoPublicacion = {
  ANUNCIO: 'ANUNCIO',
  TAREA: 'TAREA',
  EVALUACION: 'EVALUACION',
  OTRO: 'OTRO',
  TAREA_ASIGNADA: 'TAREA_ASIGNADA'
};

exports.TipoInteraccionPublicacion = exports.$Enums.TipoInteraccionPublicacion = {
  ME_GUSTA: 'ME_GUSTA'
};

exports.TipoPuntuacion = exports.$Enums.TipoPuntuacion = {
  TAREA: 'TAREA',
  EVALUACION: 'EVALUACION',
  APORTE: 'APORTE'
};

exports.EstadoTarea = exports.$Enums.EstadoTarea = {
  ASIGNADA: 'ASIGNADA',
  ENTREGADA: 'ENTREGADA',
  CALIFICADA: 'CALIFICADA',
  VENCIDA: 'VENCIDA'
};

exports.Prisma.ModelName = {
  Composer: 'Composer',
  Comment: 'Comment',
  Rating: 'Rating',
  Otp: 'Otp',
  User: 'User',
  Alumno: 'Alumno',
  Asistencia: 'Asistencia',
  CalificacionEvaluacion: 'CalificacionEvaluacion',
  Catedra: 'Catedra',
  CatedraAlumno: 'CatedraAlumno',
  CatedraDiaHorario: 'CatedraDiaHorario',
  ComentarioPublicacion: 'ComentarioPublicacion',
  CostoCatedra: 'CostoCatedra',
  DiaClase: 'DiaClase',
  Docente: 'Docente',
  EditSuggestion: 'EditSuggestion',
  Evaluacion: 'Evaluacion',
  EvaluacionAsignacion: 'EvaluacionAsignacion',
  Opcion: 'Opcion',
  Pago: 'Pago',
  PlanDeClases: 'PlanDeClases',
  Pregunta: 'Pregunta',
  Publicacion: 'Publicacion',
  PublicacionInteraccion: 'PublicacionInteraccion',
  Puntuacion: 'Puntuacion',
  RespuestaAlumno: 'RespuestaAlumno',
  TareaAsignacion: 'TareaAsignacion',
  TareaMaestra: 'TareaMaestra',
  UnidadPlan: 'UnidadPlan'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
