
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Composer
 * 
 */
export type Composer = $Result.DefaultSelection<Prisma.$ComposerPayload>
/**
 * Model Comment
 * 
 */
export type Comment = $Result.DefaultSelection<Prisma.$CommentPayload>
/**
 * Model Rating
 * 
 */
export type Rating = $Result.DefaultSelection<Prisma.$RatingPayload>
/**
 * Model Otp
 * 
 */
export type Otp = $Result.DefaultSelection<Prisma.$OtpPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Alumno
 * 
 */
export type Alumno = $Result.DefaultSelection<Prisma.$AlumnoPayload>
/**
 * Model Asistencia
 * 
 */
export type Asistencia = $Result.DefaultSelection<Prisma.$AsistenciaPayload>
/**
 * Model CalificacionEvaluacion
 * 
 */
export type CalificacionEvaluacion = $Result.DefaultSelection<Prisma.$CalificacionEvaluacionPayload>
/**
 * Model Catedra
 * 
 */
export type Catedra = $Result.DefaultSelection<Prisma.$CatedraPayload>
/**
 * Model CatedraAlumno
 * 
 */
export type CatedraAlumno = $Result.DefaultSelection<Prisma.$CatedraAlumnoPayload>
/**
 * Model CatedraDiaHorario
 * 
 */
export type CatedraDiaHorario = $Result.DefaultSelection<Prisma.$CatedraDiaHorarioPayload>
/**
 * Model ComentarioPublicacion
 * 
 */
export type ComentarioPublicacion = $Result.DefaultSelection<Prisma.$ComentarioPublicacionPayload>
/**
 * Model CostoCatedra
 * 
 */
export type CostoCatedra = $Result.DefaultSelection<Prisma.$CostoCatedraPayload>
/**
 * Model DiaClase
 * 
 */
export type DiaClase = $Result.DefaultSelection<Prisma.$DiaClasePayload>
/**
 * Model Docente
 * 
 */
export type Docente = $Result.DefaultSelection<Prisma.$DocentePayload>
/**
 * Model EditSuggestion
 * 
 */
export type EditSuggestion = $Result.DefaultSelection<Prisma.$EditSuggestionPayload>
/**
 * Model Evaluacion
 * 
 */
export type Evaluacion = $Result.DefaultSelection<Prisma.$EvaluacionPayload>
/**
 * Model EvaluacionAsignacion
 * 
 */
export type EvaluacionAsignacion = $Result.DefaultSelection<Prisma.$EvaluacionAsignacionPayload>
/**
 * Model Opcion
 * 
 */
export type Opcion = $Result.DefaultSelection<Prisma.$OpcionPayload>
/**
 * Model Pago
 * 
 */
export type Pago = $Result.DefaultSelection<Prisma.$PagoPayload>
/**
 * Model PlanDeClases
 * 
 */
export type PlanDeClases = $Result.DefaultSelection<Prisma.$PlanDeClasesPayload>
/**
 * Model Pregunta
 * 
 */
export type Pregunta = $Result.DefaultSelection<Prisma.$PreguntaPayload>
/**
 * Model Publicacion
 * 
 */
export type Publicacion = $Result.DefaultSelection<Prisma.$PublicacionPayload>
/**
 * Model PublicacionInteraccion
 * 
 */
export type PublicacionInteraccion = $Result.DefaultSelection<Prisma.$PublicacionInteraccionPayload>
/**
 * Model Puntuacion
 * 
 */
export type Puntuacion = $Result.DefaultSelection<Prisma.$PuntuacionPayload>
/**
 * Model RespuestaAlumno
 * 
 */
export type RespuestaAlumno = $Result.DefaultSelection<Prisma.$RespuestaAlumnoPayload>
/**
 * Model TareaAsignacion
 * 
 */
export type TareaAsignacion = $Result.DefaultSelection<Prisma.$TareaAsignacionPayload>
/**
 * Model TareaMaestra
 * 
 */
export type TareaMaestra = $Result.DefaultSelection<Prisma.$TareaMaestraPayload>
/**
 * Model UnidadPlan
 * 
 */
export type UnidadPlan = $Result.DefaultSelection<Prisma.$UnidadPlanPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const RoleType: {
  COMPOSER: 'COMPOSER',
  POET: 'POET',
  CONDUCTOR: 'CONDUCTOR',
  ARRANGER: 'ARRANGER',
  PERFORMER: 'PERFORMER',
  ENSEMBLE_ORCHESTRA: 'ENSEMBLE_ORCHESTRA',
  STUDENT: 'STUDENT'
};

export type RoleType = (typeof RoleType)[keyof typeof RoleType]


export const EstadoEvaluacionAsignacion: {
  PENDIENTE: 'PENDIENTE',
  REALIZADA: 'REALIZADA',
  CALIFICADA: 'CALIFICADA',
  VENCIDA: 'VENCIDA'
};

export type EstadoEvaluacionAsignacion = (typeof EstadoEvaluacionAsignacion)[keyof typeof EstadoEvaluacionAsignacion]


export const EstadoTarea: {
  ASIGNADA: 'ASIGNADA',
  ENTREGADA: 'ENTREGADA',
  CALIFICADA: 'CALIFICADA',
  VENCIDA: 'VENCIDA'
};

export type EstadoTarea = (typeof EstadoTarea)[keyof typeof EstadoTarea]


export const ModalidadPago: {
  PARTICULAR: 'PARTICULAR',
  INSTITUCIONAL: 'INSTITUCIONAL'
};

export type ModalidadPago = (typeof ModalidadPago)[keyof typeof ModalidadPago]


export const TipoInteraccionPublicacion: {
  ME_GUSTA: 'ME_GUSTA'
};

export type TipoInteraccionPublicacion = (typeof TipoInteraccionPublicacion)[keyof typeof TipoInteraccionPublicacion]


export const TipoOrganizacionPlan: {
  MES: 'MES',
  MODULO: 'MODULO'
};

export type TipoOrganizacionPlan = (typeof TipoOrganizacionPlan)[keyof typeof TipoOrganizacionPlan]


export const TipoPago: {
  MATRICULA: 'MATRICULA',
  CUOTA: 'CUOTA',
  OTRO: 'OTRO'
};

export type TipoPago = (typeof TipoPago)[keyof typeof TipoPago]


export const TipoPublicacion: {
  ANUNCIO: 'ANUNCIO',
  TAREA: 'TAREA',
  EVALUACION: 'EVALUACION',
  OTRO: 'OTRO'
};

export type TipoPublicacion = (typeof TipoPublicacion)[keyof typeof TipoPublicacion]


export const TipoPuntuacion: {
  TAREA: 'TAREA',
  EVALUACION: 'EVALUACION',
  APORTE: 'APORTE'
};

export type TipoPuntuacion = (typeof TipoPuntuacion)[keyof typeof TipoPuntuacion]

}

export type RoleType = $Enums.RoleType

export const RoleType: typeof $Enums.RoleType

export type EstadoEvaluacionAsignacion = $Enums.EstadoEvaluacionAsignacion

export const EstadoEvaluacionAsignacion: typeof $Enums.EstadoEvaluacionAsignacion

export type EstadoTarea = $Enums.EstadoTarea

export const EstadoTarea: typeof $Enums.EstadoTarea

export type ModalidadPago = $Enums.ModalidadPago

export const ModalidadPago: typeof $Enums.ModalidadPago

export type TipoInteraccionPublicacion = $Enums.TipoInteraccionPublicacion

export const TipoInteraccionPublicacion: typeof $Enums.TipoInteraccionPublicacion

export type TipoOrganizacionPlan = $Enums.TipoOrganizacionPlan

export const TipoOrganizacionPlan: typeof $Enums.TipoOrganizacionPlan

export type TipoPago = $Enums.TipoPago

export const TipoPago: typeof $Enums.TipoPago

export type TipoPublicacion = $Enums.TipoPublicacion

export const TipoPublicacion: typeof $Enums.TipoPublicacion

export type TipoPuntuacion = $Enums.TipoPuntuacion

export const TipoPuntuacion: typeof $Enums.TipoPuntuacion

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Composers
 * const composers = await prisma.composer.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Composers
   * const composers = await prisma.composer.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.composer`: Exposes CRUD operations for the **Composer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Composers
    * const composers = await prisma.composer.findMany()
    * ```
    */
  get composer(): Prisma.ComposerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comment`: Exposes CRUD operations for the **Comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comment.findMany()
    * ```
    */
  get comment(): Prisma.CommentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rating`: Exposes CRUD operations for the **Rating** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ratings
    * const ratings = await prisma.rating.findMany()
    * ```
    */
  get rating(): Prisma.RatingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.otp`: Exposes CRUD operations for the **Otp** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Otps
    * const otps = await prisma.otp.findMany()
    * ```
    */
  get otp(): Prisma.OtpDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alumno`: Exposes CRUD operations for the **Alumno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alumnos
    * const alumnos = await prisma.alumno.findMany()
    * ```
    */
  get alumno(): Prisma.AlumnoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asistencia`: Exposes CRUD operations for the **Asistencia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Asistencias
    * const asistencias = await prisma.asistencia.findMany()
    * ```
    */
  get asistencia(): Prisma.AsistenciaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calificacionEvaluacion`: Exposes CRUD operations for the **CalificacionEvaluacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CalificacionEvaluacions
    * const calificacionEvaluacions = await prisma.calificacionEvaluacion.findMany()
    * ```
    */
  get calificacionEvaluacion(): Prisma.CalificacionEvaluacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.catedra`: Exposes CRUD operations for the **Catedra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Catedras
    * const catedras = await prisma.catedra.findMany()
    * ```
    */
  get catedra(): Prisma.CatedraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.catedraAlumno`: Exposes CRUD operations for the **CatedraAlumno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CatedraAlumnos
    * const catedraAlumnos = await prisma.catedraAlumno.findMany()
    * ```
    */
  get catedraAlumno(): Prisma.CatedraAlumnoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.catedraDiaHorario`: Exposes CRUD operations for the **CatedraDiaHorario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CatedraDiaHorarios
    * const catedraDiaHorarios = await prisma.catedraDiaHorario.findMany()
    * ```
    */
  get catedraDiaHorario(): Prisma.CatedraDiaHorarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comentarioPublicacion`: Exposes CRUD operations for the **ComentarioPublicacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComentarioPublicacions
    * const comentarioPublicacions = await prisma.comentarioPublicacion.findMany()
    * ```
    */
  get comentarioPublicacion(): Prisma.ComentarioPublicacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.costoCatedra`: Exposes CRUD operations for the **CostoCatedra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CostoCatedras
    * const costoCatedras = await prisma.costoCatedra.findMany()
    * ```
    */
  get costoCatedra(): Prisma.CostoCatedraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.diaClase`: Exposes CRUD operations for the **DiaClase** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DiaClases
    * const diaClases = await prisma.diaClase.findMany()
    * ```
    */
  get diaClase(): Prisma.DiaClaseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.docente`: Exposes CRUD operations for the **Docente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Docentes
    * const docentes = await prisma.docente.findMany()
    * ```
    */
  get docente(): Prisma.DocenteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.editSuggestion`: Exposes CRUD operations for the **EditSuggestion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EditSuggestions
    * const editSuggestions = await prisma.editSuggestion.findMany()
    * ```
    */
  get editSuggestion(): Prisma.EditSuggestionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evaluacion`: Exposes CRUD operations for the **Evaluacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Evaluacions
    * const evaluacions = await prisma.evaluacion.findMany()
    * ```
    */
  get evaluacion(): Prisma.EvaluacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evaluacionAsignacion`: Exposes CRUD operations for the **EvaluacionAsignacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EvaluacionAsignacions
    * const evaluacionAsignacions = await prisma.evaluacionAsignacion.findMany()
    * ```
    */
  get evaluacionAsignacion(): Prisma.EvaluacionAsignacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.opcion`: Exposes CRUD operations for the **Opcion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Opcions
    * const opcions = await prisma.opcion.findMany()
    * ```
    */
  get opcion(): Prisma.OpcionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pago`: Exposes CRUD operations for the **Pago** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagos
    * const pagos = await prisma.pago.findMany()
    * ```
    */
  get pago(): Prisma.PagoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.planDeClases`: Exposes CRUD operations for the **PlanDeClases** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PlanDeClases
    * const planDeClases = await prisma.planDeClases.findMany()
    * ```
    */
  get planDeClases(): Prisma.PlanDeClasesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pregunta`: Exposes CRUD operations for the **Pregunta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Preguntas
    * const preguntas = await prisma.pregunta.findMany()
    * ```
    */
  get pregunta(): Prisma.PreguntaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.publicacion`: Exposes CRUD operations for the **Publicacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Publicacions
    * const publicacions = await prisma.publicacion.findMany()
    * ```
    */
  get publicacion(): Prisma.PublicacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.publicacionInteraccion`: Exposes CRUD operations for the **PublicacionInteraccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PublicacionInteraccions
    * const publicacionInteraccions = await prisma.publicacionInteraccion.findMany()
    * ```
    */
  get publicacionInteraccion(): Prisma.PublicacionInteraccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.puntuacion`: Exposes CRUD operations for the **Puntuacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Puntuacions
    * const puntuacions = await prisma.puntuacion.findMany()
    * ```
    */
  get puntuacion(): Prisma.PuntuacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.respuestaAlumno`: Exposes CRUD operations for the **RespuestaAlumno** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RespuestaAlumnos
    * const respuestaAlumnos = await prisma.respuestaAlumno.findMany()
    * ```
    */
  get respuestaAlumno(): Prisma.RespuestaAlumnoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tareaAsignacion`: Exposes CRUD operations for the **TareaAsignacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TareaAsignacions
    * const tareaAsignacions = await prisma.tareaAsignacion.findMany()
    * ```
    */
  get tareaAsignacion(): Prisma.TareaAsignacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tareaMaestra`: Exposes CRUD operations for the **TareaMaestra** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TareaMaestras
    * const tareaMaestras = await prisma.tareaMaestra.findMany()
    * ```
    */
  get tareaMaestra(): Prisma.TareaMaestraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.unidadPlan`: Exposes CRUD operations for the **UnidadPlan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UnidadPlans
    * const unidadPlans = await prisma.unidadPlan.findMany()
    * ```
    */
  get unidadPlan(): Prisma.UnidadPlanDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.10.1
   * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Composer: 'Composer',
    Comment: 'Comment',
    Rating: 'Rating',
    Otp: 'Otp',
    User: 'User',
    Alumno: 'Alumno',
    Asistencia: 'Asistencia',
    CalificacionEvaluacion: 'CalificacionEvaluacion',
    Catedra: 'Catedra',
    CatedraAlumno: 'CatedraAlumno',
    CatedraDiaHorario: 'CatedraDiaHorario',
    ComentarioPublicacion: 'ComentarioPublicacion',
    CostoCatedra: 'CostoCatedra',
    DiaClase: 'DiaClase',
    Docente: 'Docente',
    EditSuggestion: 'EditSuggestion',
    Evaluacion: 'Evaluacion',
    EvaluacionAsignacion: 'EvaluacionAsignacion',
    Opcion: 'Opcion',
    Pago: 'Pago',
    PlanDeClases: 'PlanDeClases',
    Pregunta: 'Pregunta',
    Publicacion: 'Publicacion',
    PublicacionInteraccion: 'PublicacionInteraccion',
    Puntuacion: 'Puntuacion',
    RespuestaAlumno: 'RespuestaAlumno',
    TareaAsignacion: 'TareaAsignacion',
    TareaMaestra: 'TareaMaestra',
    UnidadPlan: 'UnidadPlan'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "composer" | "comment" | "rating" | "otp" | "user" | "alumno" | "asistencia" | "calificacionEvaluacion" | "catedra" | "catedraAlumno" | "catedraDiaHorario" | "comentarioPublicacion" | "costoCatedra" | "diaClase" | "docente" | "editSuggestion" | "evaluacion" | "evaluacionAsignacion" | "opcion" | "pago" | "planDeClases" | "pregunta" | "publicacion" | "publicacionInteraccion" | "puntuacion" | "respuestaAlumno" | "tareaAsignacion" | "tareaMaestra" | "unidadPlan"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Composer: {
        payload: Prisma.$ComposerPayload<ExtArgs>
        fields: Prisma.ComposerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComposerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComposerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>
          }
          findFirst: {
            args: Prisma.ComposerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComposerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>
          }
          findMany: {
            args: Prisma.ComposerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>[]
          }
          create: {
            args: Prisma.ComposerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>
          }
          createMany: {
            args: Prisma.ComposerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComposerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>[]
          }
          delete: {
            args: Prisma.ComposerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>
          }
          update: {
            args: Prisma.ComposerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>
          }
          deleteMany: {
            args: Prisma.ComposerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComposerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ComposerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>[]
          }
          upsert: {
            args: Prisma.ComposerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComposerPayload>
          }
          aggregate: {
            args: Prisma.ComposerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComposer>
          }
          groupBy: {
            args: Prisma.ComposerGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComposerGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComposerCountArgs<ExtArgs>
            result: $Utils.Optional<ComposerCountAggregateOutputType> | number
          }
        }
      }
      Comment: {
        payload: Prisma.$CommentPayload<ExtArgs>
        fields: Prisma.CommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findFirst: {
            args: Prisma.CommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findMany: {
            args: Prisma.CommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          create: {
            args: Prisma.CommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          createMany: {
            args: Prisma.CommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          delete: {
            args: Prisma.CommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          update: {
            args: Prisma.CommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          deleteMany: {
            args: Prisma.CommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          upsert: {
            args: Prisma.CommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          aggregate: {
            args: Prisma.CommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment>
          }
          groupBy: {
            args: Prisma.CommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCountAggregateOutputType> | number
          }
        }
      }
      Rating: {
        payload: Prisma.$RatingPayload<ExtArgs>
        fields: Prisma.RatingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RatingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RatingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          findFirst: {
            args: Prisma.RatingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RatingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          findMany: {
            args: Prisma.RatingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>[]
          }
          create: {
            args: Prisma.RatingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          createMany: {
            args: Prisma.RatingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RatingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>[]
          }
          delete: {
            args: Prisma.RatingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          update: {
            args: Prisma.RatingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          deleteMany: {
            args: Prisma.RatingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RatingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RatingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>[]
          }
          upsert: {
            args: Prisma.RatingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RatingPayload>
          }
          aggregate: {
            args: Prisma.RatingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRating>
          }
          groupBy: {
            args: Prisma.RatingGroupByArgs<ExtArgs>
            result: $Utils.Optional<RatingGroupByOutputType>[]
          }
          count: {
            args: Prisma.RatingCountArgs<ExtArgs>
            result: $Utils.Optional<RatingCountAggregateOutputType> | number
          }
        }
      }
      Otp: {
        payload: Prisma.$OtpPayload<ExtArgs>
        fields: Prisma.OtpFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OtpFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OtpFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>
          }
          findFirst: {
            args: Prisma.OtpFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OtpFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>
          }
          findMany: {
            args: Prisma.OtpFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>[]
          }
          create: {
            args: Prisma.OtpCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>
          }
          createMany: {
            args: Prisma.OtpCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OtpCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>[]
          }
          delete: {
            args: Prisma.OtpDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>
          }
          update: {
            args: Prisma.OtpUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>
          }
          deleteMany: {
            args: Prisma.OtpDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OtpUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OtpUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>[]
          }
          upsert: {
            args: Prisma.OtpUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OtpPayload>
          }
          aggregate: {
            args: Prisma.OtpAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOtp>
          }
          groupBy: {
            args: Prisma.OtpGroupByArgs<ExtArgs>
            result: $Utils.Optional<OtpGroupByOutputType>[]
          }
          count: {
            args: Prisma.OtpCountArgs<ExtArgs>
            result: $Utils.Optional<OtpCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Alumno: {
        payload: Prisma.$AlumnoPayload<ExtArgs>
        fields: Prisma.AlumnoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlumnoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlumnoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>
          }
          findFirst: {
            args: Prisma.AlumnoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlumnoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>
          }
          findMany: {
            args: Prisma.AlumnoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>[]
          }
          create: {
            args: Prisma.AlumnoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>
          }
          createMany: {
            args: Prisma.AlumnoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AlumnoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>[]
          }
          delete: {
            args: Prisma.AlumnoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>
          }
          update: {
            args: Prisma.AlumnoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>
          }
          deleteMany: {
            args: Prisma.AlumnoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlumnoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AlumnoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>[]
          }
          upsert: {
            args: Prisma.AlumnoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlumnoPayload>
          }
          aggregate: {
            args: Prisma.AlumnoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlumno>
          }
          groupBy: {
            args: Prisma.AlumnoGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlumnoGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlumnoCountArgs<ExtArgs>
            result: $Utils.Optional<AlumnoCountAggregateOutputType> | number
          }
        }
      }
      Asistencia: {
        payload: Prisma.$AsistenciaPayload<ExtArgs>
        fields: Prisma.AsistenciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AsistenciaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AsistenciaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>
          }
          findFirst: {
            args: Prisma.AsistenciaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AsistenciaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>
          }
          findMany: {
            args: Prisma.AsistenciaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>[]
          }
          create: {
            args: Prisma.AsistenciaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>
          }
          createMany: {
            args: Prisma.AsistenciaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AsistenciaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>[]
          }
          delete: {
            args: Prisma.AsistenciaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>
          }
          update: {
            args: Prisma.AsistenciaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>
          }
          deleteMany: {
            args: Prisma.AsistenciaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AsistenciaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AsistenciaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>[]
          }
          upsert: {
            args: Prisma.AsistenciaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AsistenciaPayload>
          }
          aggregate: {
            args: Prisma.AsistenciaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsistencia>
          }
          groupBy: {
            args: Prisma.AsistenciaGroupByArgs<ExtArgs>
            result: $Utils.Optional<AsistenciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.AsistenciaCountArgs<ExtArgs>
            result: $Utils.Optional<AsistenciaCountAggregateOutputType> | number
          }
        }
      }
      CalificacionEvaluacion: {
        payload: Prisma.$CalificacionEvaluacionPayload<ExtArgs>
        fields: Prisma.CalificacionEvaluacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CalificacionEvaluacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CalificacionEvaluacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>
          }
          findFirst: {
            args: Prisma.CalificacionEvaluacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CalificacionEvaluacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>
          }
          findMany: {
            args: Prisma.CalificacionEvaluacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>[]
          }
          create: {
            args: Prisma.CalificacionEvaluacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>
          }
          createMany: {
            args: Prisma.CalificacionEvaluacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CalificacionEvaluacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>[]
          }
          delete: {
            args: Prisma.CalificacionEvaluacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>
          }
          update: {
            args: Prisma.CalificacionEvaluacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>
          }
          deleteMany: {
            args: Prisma.CalificacionEvaluacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CalificacionEvaluacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CalificacionEvaluacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>[]
          }
          upsert: {
            args: Prisma.CalificacionEvaluacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionEvaluacionPayload>
          }
          aggregate: {
            args: Prisma.CalificacionEvaluacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalificacionEvaluacion>
          }
          groupBy: {
            args: Prisma.CalificacionEvaluacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalificacionEvaluacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CalificacionEvaluacionCountArgs<ExtArgs>
            result: $Utils.Optional<CalificacionEvaluacionCountAggregateOutputType> | number
          }
        }
      }
      Catedra: {
        payload: Prisma.$CatedraPayload<ExtArgs>
        fields: Prisma.CatedraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CatedraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CatedraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>
          }
          findFirst: {
            args: Prisma.CatedraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CatedraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>
          }
          findMany: {
            args: Prisma.CatedraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>[]
          }
          create: {
            args: Prisma.CatedraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>
          }
          createMany: {
            args: Prisma.CatedraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CatedraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>[]
          }
          delete: {
            args: Prisma.CatedraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>
          }
          update: {
            args: Prisma.CatedraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>
          }
          deleteMany: {
            args: Prisma.CatedraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CatedraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CatedraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>[]
          }
          upsert: {
            args: Prisma.CatedraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraPayload>
          }
          aggregate: {
            args: Prisma.CatedraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCatedra>
          }
          groupBy: {
            args: Prisma.CatedraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CatedraGroupByOutputType>[]
          }
          count: {
            args: Prisma.CatedraCountArgs<ExtArgs>
            result: $Utils.Optional<CatedraCountAggregateOutputType> | number
          }
        }
      }
      CatedraAlumno: {
        payload: Prisma.$CatedraAlumnoPayload<ExtArgs>
        fields: Prisma.CatedraAlumnoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CatedraAlumnoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CatedraAlumnoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>
          }
          findFirst: {
            args: Prisma.CatedraAlumnoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CatedraAlumnoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>
          }
          findMany: {
            args: Prisma.CatedraAlumnoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>[]
          }
          create: {
            args: Prisma.CatedraAlumnoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>
          }
          createMany: {
            args: Prisma.CatedraAlumnoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CatedraAlumnoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>[]
          }
          delete: {
            args: Prisma.CatedraAlumnoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>
          }
          update: {
            args: Prisma.CatedraAlumnoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>
          }
          deleteMany: {
            args: Prisma.CatedraAlumnoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CatedraAlumnoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CatedraAlumnoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>[]
          }
          upsert: {
            args: Prisma.CatedraAlumnoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraAlumnoPayload>
          }
          aggregate: {
            args: Prisma.CatedraAlumnoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCatedraAlumno>
          }
          groupBy: {
            args: Prisma.CatedraAlumnoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CatedraAlumnoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CatedraAlumnoCountArgs<ExtArgs>
            result: $Utils.Optional<CatedraAlumnoCountAggregateOutputType> | number
          }
        }
      }
      CatedraDiaHorario: {
        payload: Prisma.$CatedraDiaHorarioPayload<ExtArgs>
        fields: Prisma.CatedraDiaHorarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CatedraDiaHorarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CatedraDiaHorarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>
          }
          findFirst: {
            args: Prisma.CatedraDiaHorarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CatedraDiaHorarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>
          }
          findMany: {
            args: Prisma.CatedraDiaHorarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>[]
          }
          create: {
            args: Prisma.CatedraDiaHorarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>
          }
          createMany: {
            args: Prisma.CatedraDiaHorarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CatedraDiaHorarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>[]
          }
          delete: {
            args: Prisma.CatedraDiaHorarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>
          }
          update: {
            args: Prisma.CatedraDiaHorarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>
          }
          deleteMany: {
            args: Prisma.CatedraDiaHorarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CatedraDiaHorarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CatedraDiaHorarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>[]
          }
          upsert: {
            args: Prisma.CatedraDiaHorarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CatedraDiaHorarioPayload>
          }
          aggregate: {
            args: Prisma.CatedraDiaHorarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCatedraDiaHorario>
          }
          groupBy: {
            args: Prisma.CatedraDiaHorarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<CatedraDiaHorarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.CatedraDiaHorarioCountArgs<ExtArgs>
            result: $Utils.Optional<CatedraDiaHorarioCountAggregateOutputType> | number
          }
        }
      }
      ComentarioPublicacion: {
        payload: Prisma.$ComentarioPublicacionPayload<ExtArgs>
        fields: Prisma.ComentarioPublicacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComentarioPublicacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComentarioPublicacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>
          }
          findFirst: {
            args: Prisma.ComentarioPublicacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComentarioPublicacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>
          }
          findMany: {
            args: Prisma.ComentarioPublicacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>[]
          }
          create: {
            args: Prisma.ComentarioPublicacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>
          }
          createMany: {
            args: Prisma.ComentarioPublicacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComentarioPublicacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>[]
          }
          delete: {
            args: Prisma.ComentarioPublicacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>
          }
          update: {
            args: Prisma.ComentarioPublicacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>
          }
          deleteMany: {
            args: Prisma.ComentarioPublicacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComentarioPublicacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ComentarioPublicacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>[]
          }
          upsert: {
            args: Prisma.ComentarioPublicacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentarioPublicacionPayload>
          }
          aggregate: {
            args: Prisma.ComentarioPublicacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComentarioPublicacion>
          }
          groupBy: {
            args: Prisma.ComentarioPublicacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComentarioPublicacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComentarioPublicacionCountArgs<ExtArgs>
            result: $Utils.Optional<ComentarioPublicacionCountAggregateOutputType> | number
          }
        }
      }
      CostoCatedra: {
        payload: Prisma.$CostoCatedraPayload<ExtArgs>
        fields: Prisma.CostoCatedraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CostoCatedraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CostoCatedraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>
          }
          findFirst: {
            args: Prisma.CostoCatedraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CostoCatedraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>
          }
          findMany: {
            args: Prisma.CostoCatedraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>[]
          }
          create: {
            args: Prisma.CostoCatedraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>
          }
          createMany: {
            args: Prisma.CostoCatedraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CostoCatedraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>[]
          }
          delete: {
            args: Prisma.CostoCatedraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>
          }
          update: {
            args: Prisma.CostoCatedraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>
          }
          deleteMany: {
            args: Prisma.CostoCatedraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CostoCatedraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CostoCatedraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>[]
          }
          upsert: {
            args: Prisma.CostoCatedraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CostoCatedraPayload>
          }
          aggregate: {
            args: Prisma.CostoCatedraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCostoCatedra>
          }
          groupBy: {
            args: Prisma.CostoCatedraGroupByArgs<ExtArgs>
            result: $Utils.Optional<CostoCatedraGroupByOutputType>[]
          }
          count: {
            args: Prisma.CostoCatedraCountArgs<ExtArgs>
            result: $Utils.Optional<CostoCatedraCountAggregateOutputType> | number
          }
        }
      }
      DiaClase: {
        payload: Prisma.$DiaClasePayload<ExtArgs>
        fields: Prisma.DiaClaseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DiaClaseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DiaClaseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>
          }
          findFirst: {
            args: Prisma.DiaClaseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DiaClaseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>
          }
          findMany: {
            args: Prisma.DiaClaseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>[]
          }
          create: {
            args: Prisma.DiaClaseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>
          }
          createMany: {
            args: Prisma.DiaClaseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DiaClaseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>[]
          }
          delete: {
            args: Prisma.DiaClaseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>
          }
          update: {
            args: Prisma.DiaClaseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>
          }
          deleteMany: {
            args: Prisma.DiaClaseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DiaClaseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DiaClaseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>[]
          }
          upsert: {
            args: Prisma.DiaClaseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DiaClasePayload>
          }
          aggregate: {
            args: Prisma.DiaClaseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiaClase>
          }
          groupBy: {
            args: Prisma.DiaClaseGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiaClaseGroupByOutputType>[]
          }
          count: {
            args: Prisma.DiaClaseCountArgs<ExtArgs>
            result: $Utils.Optional<DiaClaseCountAggregateOutputType> | number
          }
        }
      }
      Docente: {
        payload: Prisma.$DocentePayload<ExtArgs>
        fields: Prisma.DocenteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocenteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocenteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>
          }
          findFirst: {
            args: Prisma.DocenteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocenteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>
          }
          findMany: {
            args: Prisma.DocenteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>[]
          }
          create: {
            args: Prisma.DocenteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>
          }
          createMany: {
            args: Prisma.DocenteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocenteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>[]
          }
          delete: {
            args: Prisma.DocenteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>
          }
          update: {
            args: Prisma.DocenteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>
          }
          deleteMany: {
            args: Prisma.DocenteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocenteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DocenteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>[]
          }
          upsert: {
            args: Prisma.DocenteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocentePayload>
          }
          aggregate: {
            args: Prisma.DocenteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocente>
          }
          groupBy: {
            args: Prisma.DocenteGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocenteGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocenteCountArgs<ExtArgs>
            result: $Utils.Optional<DocenteCountAggregateOutputType> | number
          }
        }
      }
      EditSuggestion: {
        payload: Prisma.$EditSuggestionPayload<ExtArgs>
        fields: Prisma.EditSuggestionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EditSuggestionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EditSuggestionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>
          }
          findFirst: {
            args: Prisma.EditSuggestionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EditSuggestionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>
          }
          findMany: {
            args: Prisma.EditSuggestionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>[]
          }
          create: {
            args: Prisma.EditSuggestionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>
          }
          createMany: {
            args: Prisma.EditSuggestionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EditSuggestionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>[]
          }
          delete: {
            args: Prisma.EditSuggestionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>
          }
          update: {
            args: Prisma.EditSuggestionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>
          }
          deleteMany: {
            args: Prisma.EditSuggestionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EditSuggestionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EditSuggestionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>[]
          }
          upsert: {
            args: Prisma.EditSuggestionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EditSuggestionPayload>
          }
          aggregate: {
            args: Prisma.EditSuggestionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEditSuggestion>
          }
          groupBy: {
            args: Prisma.EditSuggestionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EditSuggestionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EditSuggestionCountArgs<ExtArgs>
            result: $Utils.Optional<EditSuggestionCountAggregateOutputType> | number
          }
        }
      }
      Evaluacion: {
        payload: Prisma.$EvaluacionPayload<ExtArgs>
        fields: Prisma.EvaluacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EvaluacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EvaluacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          findFirst: {
            args: Prisma.EvaluacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EvaluacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          findMany: {
            args: Prisma.EvaluacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>[]
          }
          create: {
            args: Prisma.EvaluacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          createMany: {
            args: Prisma.EvaluacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EvaluacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>[]
          }
          delete: {
            args: Prisma.EvaluacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          update: {
            args: Prisma.EvaluacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          deleteMany: {
            args: Prisma.EvaluacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EvaluacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EvaluacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>[]
          }
          upsert: {
            args: Prisma.EvaluacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          aggregate: {
            args: Prisma.EvaluacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvaluacion>
          }
          groupBy: {
            args: Prisma.EvaluacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EvaluacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EvaluacionCountArgs<ExtArgs>
            result: $Utils.Optional<EvaluacionCountAggregateOutputType> | number
          }
        }
      }
      EvaluacionAsignacion: {
        payload: Prisma.$EvaluacionAsignacionPayload<ExtArgs>
        fields: Prisma.EvaluacionAsignacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EvaluacionAsignacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EvaluacionAsignacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>
          }
          findFirst: {
            args: Prisma.EvaluacionAsignacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EvaluacionAsignacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>
          }
          findMany: {
            args: Prisma.EvaluacionAsignacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>[]
          }
          create: {
            args: Prisma.EvaluacionAsignacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>
          }
          createMany: {
            args: Prisma.EvaluacionAsignacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EvaluacionAsignacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>[]
          }
          delete: {
            args: Prisma.EvaluacionAsignacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>
          }
          update: {
            args: Prisma.EvaluacionAsignacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>
          }
          deleteMany: {
            args: Prisma.EvaluacionAsignacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EvaluacionAsignacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EvaluacionAsignacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>[]
          }
          upsert: {
            args: Prisma.EvaluacionAsignacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionAsignacionPayload>
          }
          aggregate: {
            args: Prisma.EvaluacionAsignacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvaluacionAsignacion>
          }
          groupBy: {
            args: Prisma.EvaluacionAsignacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EvaluacionAsignacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EvaluacionAsignacionCountArgs<ExtArgs>
            result: $Utils.Optional<EvaluacionAsignacionCountAggregateOutputType> | number
          }
        }
      }
      Opcion: {
        payload: Prisma.$OpcionPayload<ExtArgs>
        fields: Prisma.OpcionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OpcionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OpcionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>
          }
          findFirst: {
            args: Prisma.OpcionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OpcionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>
          }
          findMany: {
            args: Prisma.OpcionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>[]
          }
          create: {
            args: Prisma.OpcionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>
          }
          createMany: {
            args: Prisma.OpcionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OpcionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>[]
          }
          delete: {
            args: Prisma.OpcionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>
          }
          update: {
            args: Prisma.OpcionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>
          }
          deleteMany: {
            args: Prisma.OpcionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OpcionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OpcionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>[]
          }
          upsert: {
            args: Prisma.OpcionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpcionPayload>
          }
          aggregate: {
            args: Prisma.OpcionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOpcion>
          }
          groupBy: {
            args: Prisma.OpcionGroupByArgs<ExtArgs>
            result: $Utils.Optional<OpcionGroupByOutputType>[]
          }
          count: {
            args: Prisma.OpcionCountArgs<ExtArgs>
            result: $Utils.Optional<OpcionCountAggregateOutputType> | number
          }
        }
      }
      Pago: {
        payload: Prisma.$PagoPayload<ExtArgs>
        fields: Prisma.PagoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findFirst: {
            args: Prisma.PagoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          findMany: {
            args: Prisma.PagoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          create: {
            args: Prisma.PagoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          createMany: {
            args: Prisma.PagoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          delete: {
            args: Prisma.PagoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          update: {
            args: Prisma.PagoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          deleteMany: {
            args: Prisma.PagoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PagoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>[]
          }
          upsert: {
            args: Prisma.PagoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagoPayload>
          }
          aggregate: {
            args: Prisma.PagoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePago>
          }
          groupBy: {
            args: Prisma.PagoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagoCountArgs<ExtArgs>
            result: $Utils.Optional<PagoCountAggregateOutputType> | number
          }
        }
      }
      PlanDeClases: {
        payload: Prisma.$PlanDeClasesPayload<ExtArgs>
        fields: Prisma.PlanDeClasesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PlanDeClasesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PlanDeClasesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>
          }
          findFirst: {
            args: Prisma.PlanDeClasesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PlanDeClasesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>
          }
          findMany: {
            args: Prisma.PlanDeClasesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>[]
          }
          create: {
            args: Prisma.PlanDeClasesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>
          }
          createMany: {
            args: Prisma.PlanDeClasesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PlanDeClasesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>[]
          }
          delete: {
            args: Prisma.PlanDeClasesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>
          }
          update: {
            args: Prisma.PlanDeClasesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>
          }
          deleteMany: {
            args: Prisma.PlanDeClasesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PlanDeClasesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PlanDeClasesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>[]
          }
          upsert: {
            args: Prisma.PlanDeClasesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlanDeClasesPayload>
          }
          aggregate: {
            args: Prisma.PlanDeClasesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlanDeClases>
          }
          groupBy: {
            args: Prisma.PlanDeClasesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlanDeClasesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PlanDeClasesCountArgs<ExtArgs>
            result: $Utils.Optional<PlanDeClasesCountAggregateOutputType> | number
          }
        }
      }
      Pregunta: {
        payload: Prisma.$PreguntaPayload<ExtArgs>
        fields: Prisma.PreguntaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PreguntaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PreguntaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>
          }
          findFirst: {
            args: Prisma.PreguntaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PreguntaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>
          }
          findMany: {
            args: Prisma.PreguntaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>[]
          }
          create: {
            args: Prisma.PreguntaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>
          }
          createMany: {
            args: Prisma.PreguntaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PreguntaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>[]
          }
          delete: {
            args: Prisma.PreguntaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>
          }
          update: {
            args: Prisma.PreguntaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>
          }
          deleteMany: {
            args: Prisma.PreguntaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PreguntaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PreguntaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>[]
          }
          upsert: {
            args: Prisma.PreguntaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PreguntaPayload>
          }
          aggregate: {
            args: Prisma.PreguntaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePregunta>
          }
          groupBy: {
            args: Prisma.PreguntaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PreguntaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PreguntaCountArgs<ExtArgs>
            result: $Utils.Optional<PreguntaCountAggregateOutputType> | number
          }
        }
      }
      Publicacion: {
        payload: Prisma.$PublicacionPayload<ExtArgs>
        fields: Prisma.PublicacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PublicacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PublicacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>
          }
          findFirst: {
            args: Prisma.PublicacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PublicacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>
          }
          findMany: {
            args: Prisma.PublicacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>[]
          }
          create: {
            args: Prisma.PublicacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>
          }
          createMany: {
            args: Prisma.PublicacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PublicacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>[]
          }
          delete: {
            args: Prisma.PublicacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>
          }
          update: {
            args: Prisma.PublicacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>
          }
          deleteMany: {
            args: Prisma.PublicacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PublicacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PublicacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>[]
          }
          upsert: {
            args: Prisma.PublicacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionPayload>
          }
          aggregate: {
            args: Prisma.PublicacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublicacion>
          }
          groupBy: {
            args: Prisma.PublicacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PublicacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PublicacionCountArgs<ExtArgs>
            result: $Utils.Optional<PublicacionCountAggregateOutputType> | number
          }
        }
      }
      PublicacionInteraccion: {
        payload: Prisma.$PublicacionInteraccionPayload<ExtArgs>
        fields: Prisma.PublicacionInteraccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PublicacionInteraccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PublicacionInteraccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>
          }
          findFirst: {
            args: Prisma.PublicacionInteraccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PublicacionInteraccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>
          }
          findMany: {
            args: Prisma.PublicacionInteraccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>[]
          }
          create: {
            args: Prisma.PublicacionInteraccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>
          }
          createMany: {
            args: Prisma.PublicacionInteraccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PublicacionInteraccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>[]
          }
          delete: {
            args: Prisma.PublicacionInteraccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>
          }
          update: {
            args: Prisma.PublicacionInteraccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>
          }
          deleteMany: {
            args: Prisma.PublicacionInteraccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PublicacionInteraccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PublicacionInteraccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>[]
          }
          upsert: {
            args: Prisma.PublicacionInteraccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionInteraccionPayload>
          }
          aggregate: {
            args: Prisma.PublicacionInteraccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublicacionInteraccion>
          }
          groupBy: {
            args: Prisma.PublicacionInteraccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PublicacionInteraccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PublicacionInteraccionCountArgs<ExtArgs>
            result: $Utils.Optional<PublicacionInteraccionCountAggregateOutputType> | number
          }
        }
      }
      Puntuacion: {
        payload: Prisma.$PuntuacionPayload<ExtArgs>
        fields: Prisma.PuntuacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PuntuacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PuntuacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>
          }
          findFirst: {
            args: Prisma.PuntuacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PuntuacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>
          }
          findMany: {
            args: Prisma.PuntuacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>[]
          }
          create: {
            args: Prisma.PuntuacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>
          }
          createMany: {
            args: Prisma.PuntuacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PuntuacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>[]
          }
          delete: {
            args: Prisma.PuntuacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>
          }
          update: {
            args: Prisma.PuntuacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>
          }
          deleteMany: {
            args: Prisma.PuntuacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PuntuacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PuntuacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>[]
          }
          upsert: {
            args: Prisma.PuntuacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PuntuacionPayload>
          }
          aggregate: {
            args: Prisma.PuntuacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePuntuacion>
          }
          groupBy: {
            args: Prisma.PuntuacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PuntuacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PuntuacionCountArgs<ExtArgs>
            result: $Utils.Optional<PuntuacionCountAggregateOutputType> | number
          }
        }
      }
      RespuestaAlumno: {
        payload: Prisma.$RespuestaAlumnoPayload<ExtArgs>
        fields: Prisma.RespuestaAlumnoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RespuestaAlumnoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RespuestaAlumnoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>
          }
          findFirst: {
            args: Prisma.RespuestaAlumnoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RespuestaAlumnoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>
          }
          findMany: {
            args: Prisma.RespuestaAlumnoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>[]
          }
          create: {
            args: Prisma.RespuestaAlumnoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>
          }
          createMany: {
            args: Prisma.RespuestaAlumnoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RespuestaAlumnoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>[]
          }
          delete: {
            args: Prisma.RespuestaAlumnoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>
          }
          update: {
            args: Prisma.RespuestaAlumnoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>
          }
          deleteMany: {
            args: Prisma.RespuestaAlumnoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RespuestaAlumnoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RespuestaAlumnoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>[]
          }
          upsert: {
            args: Prisma.RespuestaAlumnoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RespuestaAlumnoPayload>
          }
          aggregate: {
            args: Prisma.RespuestaAlumnoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRespuestaAlumno>
          }
          groupBy: {
            args: Prisma.RespuestaAlumnoGroupByArgs<ExtArgs>
            result: $Utils.Optional<RespuestaAlumnoGroupByOutputType>[]
          }
          count: {
            args: Prisma.RespuestaAlumnoCountArgs<ExtArgs>
            result: $Utils.Optional<RespuestaAlumnoCountAggregateOutputType> | number
          }
        }
      }
      TareaAsignacion: {
        payload: Prisma.$TareaAsignacionPayload<ExtArgs>
        fields: Prisma.TareaAsignacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TareaAsignacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TareaAsignacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>
          }
          findFirst: {
            args: Prisma.TareaAsignacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TareaAsignacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>
          }
          findMany: {
            args: Prisma.TareaAsignacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>[]
          }
          create: {
            args: Prisma.TareaAsignacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>
          }
          createMany: {
            args: Prisma.TareaAsignacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TareaAsignacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>[]
          }
          delete: {
            args: Prisma.TareaAsignacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>
          }
          update: {
            args: Prisma.TareaAsignacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>
          }
          deleteMany: {
            args: Prisma.TareaAsignacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TareaAsignacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TareaAsignacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>[]
          }
          upsert: {
            args: Prisma.TareaAsignacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaAsignacionPayload>
          }
          aggregate: {
            args: Prisma.TareaAsignacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTareaAsignacion>
          }
          groupBy: {
            args: Prisma.TareaAsignacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<TareaAsignacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.TareaAsignacionCountArgs<ExtArgs>
            result: $Utils.Optional<TareaAsignacionCountAggregateOutputType> | number
          }
        }
      }
      TareaMaestra: {
        payload: Prisma.$TareaMaestraPayload<ExtArgs>
        fields: Prisma.TareaMaestraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TareaMaestraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TareaMaestraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>
          }
          findFirst: {
            args: Prisma.TareaMaestraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TareaMaestraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>
          }
          findMany: {
            args: Prisma.TareaMaestraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>[]
          }
          create: {
            args: Prisma.TareaMaestraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>
          }
          createMany: {
            args: Prisma.TareaMaestraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TareaMaestraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>[]
          }
          delete: {
            args: Prisma.TareaMaestraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>
          }
          update: {
            args: Prisma.TareaMaestraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>
          }
          deleteMany: {
            args: Prisma.TareaMaestraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TareaMaestraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TareaMaestraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>[]
          }
          upsert: {
            args: Prisma.TareaMaestraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TareaMaestraPayload>
          }
          aggregate: {
            args: Prisma.TareaMaestraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTareaMaestra>
          }
          groupBy: {
            args: Prisma.TareaMaestraGroupByArgs<ExtArgs>
            result: $Utils.Optional<TareaMaestraGroupByOutputType>[]
          }
          count: {
            args: Prisma.TareaMaestraCountArgs<ExtArgs>
            result: $Utils.Optional<TareaMaestraCountAggregateOutputType> | number
          }
        }
      }
      UnidadPlan: {
        payload: Prisma.$UnidadPlanPayload<ExtArgs>
        fields: Prisma.UnidadPlanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UnidadPlanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UnidadPlanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>
          }
          findFirst: {
            args: Prisma.UnidadPlanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UnidadPlanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>
          }
          findMany: {
            args: Prisma.UnidadPlanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>[]
          }
          create: {
            args: Prisma.UnidadPlanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>
          }
          createMany: {
            args: Prisma.UnidadPlanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UnidadPlanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>[]
          }
          delete: {
            args: Prisma.UnidadPlanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>
          }
          update: {
            args: Prisma.UnidadPlanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>
          }
          deleteMany: {
            args: Prisma.UnidadPlanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UnidadPlanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UnidadPlanUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>[]
          }
          upsert: {
            args: Prisma.UnidadPlanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnidadPlanPayload>
          }
          aggregate: {
            args: Prisma.UnidadPlanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUnidadPlan>
          }
          groupBy: {
            args: Prisma.UnidadPlanGroupByArgs<ExtArgs>
            result: $Utils.Optional<UnidadPlanGroupByOutputType>[]
          }
          count: {
            args: Prisma.UnidadPlanCountArgs<ExtArgs>
            result: $Utils.Optional<UnidadPlanCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    composer?: ComposerOmit
    comment?: CommentOmit
    rating?: RatingOmit
    otp?: OtpOmit
    user?: UserOmit
    alumno?: AlumnoOmit
    asistencia?: AsistenciaOmit
    calificacionEvaluacion?: CalificacionEvaluacionOmit
    catedra?: CatedraOmit
    catedraAlumno?: CatedraAlumnoOmit
    catedraDiaHorario?: CatedraDiaHorarioOmit
    comentarioPublicacion?: ComentarioPublicacionOmit
    costoCatedra?: CostoCatedraOmit
    diaClase?: DiaClaseOmit
    docente?: DocenteOmit
    editSuggestion?: EditSuggestionOmit
    evaluacion?: EvaluacionOmit
    evaluacionAsignacion?: EvaluacionAsignacionOmit
    opcion?: OpcionOmit
    pago?: PagoOmit
    planDeClases?: PlanDeClasesOmit
    pregunta?: PreguntaOmit
    publicacion?: PublicacionOmit
    publicacionInteraccion?: PublicacionInteraccionOmit
    puntuacion?: PuntuacionOmit
    respuestaAlumno?: RespuestaAlumnoOmit
    tareaAsignacion?: TareaAsignacionOmit
    tareaMaestra?: TareaMaestraOmit
    unidadPlan?: UnidadPlanOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ComposerCountOutputType
   */

  export type ComposerCountOutputType = {
    CatedraAlumno: number
    comments: number
    EditSuggestion: number
    ratings: number
  }

  export type ComposerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CatedraAlumno?: boolean | ComposerCountOutputTypeCountCatedraAlumnoArgs
    comments?: boolean | ComposerCountOutputTypeCountCommentsArgs
    EditSuggestion?: boolean | ComposerCountOutputTypeCountEditSuggestionArgs
    ratings?: boolean | ComposerCountOutputTypeCountRatingsArgs
  }

  // Custom InputTypes
  /**
   * ComposerCountOutputType without action
   */
  export type ComposerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComposerCountOutputType
     */
    select?: ComposerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComposerCountOutputType without action
   */
  export type ComposerCountOutputTypeCountCatedraAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraAlumnoWhereInput
  }

  /**
   * ComposerCountOutputType without action
   */
  export type ComposerCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * ComposerCountOutputType without action
   */
  export type ComposerCountOutputTypeCountEditSuggestionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EditSuggestionWhereInput
  }

  /**
   * ComposerCountOutputType without action
   */
  export type ComposerCountOutputTypeCountRatingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RatingWhereInput
  }


  /**
   * Count Type AlumnoCountOutputType
   */

  export type AlumnoCountOutputType = {
    Asistencia: number
    CalificacionEvaluacion: number
    CatedraAlumno: number
    ComentarioPublicacion: number
    EvaluacionAsignacion: number
    Publicacion: number
    PublicacionInteraccion: number
    Puntuacion: number
    RespuestaAlumno: number
    TareaAsignacion: number
  }

  export type AlumnoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asistencia?: boolean | AlumnoCountOutputTypeCountAsistenciaArgs
    CalificacionEvaluacion?: boolean | AlumnoCountOutputTypeCountCalificacionEvaluacionArgs
    CatedraAlumno?: boolean | AlumnoCountOutputTypeCountCatedraAlumnoArgs
    ComentarioPublicacion?: boolean | AlumnoCountOutputTypeCountComentarioPublicacionArgs
    EvaluacionAsignacion?: boolean | AlumnoCountOutputTypeCountEvaluacionAsignacionArgs
    Publicacion?: boolean | AlumnoCountOutputTypeCountPublicacionArgs
    PublicacionInteraccion?: boolean | AlumnoCountOutputTypeCountPublicacionInteraccionArgs
    Puntuacion?: boolean | AlumnoCountOutputTypeCountPuntuacionArgs
    RespuestaAlumno?: boolean | AlumnoCountOutputTypeCountRespuestaAlumnoArgs
    TareaAsignacion?: boolean | AlumnoCountOutputTypeCountTareaAsignacionArgs
  }

  // Custom InputTypes
  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlumnoCountOutputType
     */
    select?: AlumnoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountAsistenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsistenciaWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountCalificacionEvaluacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionEvaluacionWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountCatedraAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraAlumnoWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountComentarioPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioPublicacionWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountEvaluacionAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionAsignacionWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountPublicacionInteraccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionInteraccionWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountPuntuacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PuntuacionWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountRespuestaAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RespuestaAlumnoWhereInput
  }

  /**
   * AlumnoCountOutputType without action
   */
  export type AlumnoCountOutputTypeCountTareaAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaAsignacionWhereInput
  }


  /**
   * Count Type CatedraCountOutputType
   */

  export type CatedraCountOutputType = {
    CatedraAlumno: number
    CatedraDiaHorario: number
    DiaClase: number
    Evaluacion: number
    PlanDeClases: number
    Publicacion: number
    Puntuacion: number
    TareaMaestra: number
  }

  export type CatedraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CatedraAlumno?: boolean | CatedraCountOutputTypeCountCatedraAlumnoArgs
    CatedraDiaHorario?: boolean | CatedraCountOutputTypeCountCatedraDiaHorarioArgs
    DiaClase?: boolean | CatedraCountOutputTypeCountDiaClaseArgs
    Evaluacion?: boolean | CatedraCountOutputTypeCountEvaluacionArgs
    PlanDeClases?: boolean | CatedraCountOutputTypeCountPlanDeClasesArgs
    Publicacion?: boolean | CatedraCountOutputTypeCountPublicacionArgs
    Puntuacion?: boolean | CatedraCountOutputTypeCountPuntuacionArgs
    TareaMaestra?: boolean | CatedraCountOutputTypeCountTareaMaestraArgs
  }

  // Custom InputTypes
  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraCountOutputType
     */
    select?: CatedraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountCatedraAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraAlumnoWhereInput
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountCatedraDiaHorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraDiaHorarioWhereInput
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountDiaClaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiaClaseWhereInput
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountEvaluacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionWhereInput
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountPlanDeClasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlanDeClasesWhereInput
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionWhereInput
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountPuntuacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PuntuacionWhereInput
  }

  /**
   * CatedraCountOutputType without action
   */
  export type CatedraCountOutputTypeCountTareaMaestraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaMaestraWhereInput
  }


  /**
   * Count Type CatedraAlumnoCountOutputType
   */

  export type CatedraAlumnoCountOutputType = {
    Pago: number
  }

  export type CatedraAlumnoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pago?: boolean | CatedraAlumnoCountOutputTypeCountPagoArgs
  }

  // Custom InputTypes
  /**
   * CatedraAlumnoCountOutputType without action
   */
  export type CatedraAlumnoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumnoCountOutputType
     */
    select?: CatedraAlumnoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CatedraAlumnoCountOutputType without action
   */
  export type CatedraAlumnoCountOutputTypeCountPagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
  }


  /**
   * Count Type DiaClaseCountOutputType
   */

  export type DiaClaseCountOutputType = {
    Asistencia: number
  }

  export type DiaClaseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asistencia?: boolean | DiaClaseCountOutputTypeCountAsistenciaArgs
  }

  // Custom InputTypes
  /**
   * DiaClaseCountOutputType without action
   */
  export type DiaClaseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClaseCountOutputType
     */
    select?: DiaClaseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DiaClaseCountOutputType without action
   */
  export type DiaClaseCountOutputTypeCountAsistenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsistenciaWhereInput
  }


  /**
   * Count Type DocenteCountOutputType
   */

  export type DocenteCountOutputType = {
    Catedra: number
    ComentarioPublicacion: number
    Pago: number
    PlanDeClases: number
    Publicacion: number
    PublicacionInteraccion: number
  }

  export type DocenteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | DocenteCountOutputTypeCountCatedraArgs
    ComentarioPublicacion?: boolean | DocenteCountOutputTypeCountComentarioPublicacionArgs
    Pago?: boolean | DocenteCountOutputTypeCountPagoArgs
    PlanDeClases?: boolean | DocenteCountOutputTypeCountPlanDeClasesArgs
    Publicacion?: boolean | DocenteCountOutputTypeCountPublicacionArgs
    PublicacionInteraccion?: boolean | DocenteCountOutputTypeCountPublicacionInteraccionArgs
  }

  // Custom InputTypes
  /**
   * DocenteCountOutputType without action
   */
  export type DocenteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DocenteCountOutputType
     */
    select?: DocenteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DocenteCountOutputType without action
   */
  export type DocenteCountOutputTypeCountCatedraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraWhereInput
  }

  /**
   * DocenteCountOutputType without action
   */
  export type DocenteCountOutputTypeCountComentarioPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioPublicacionWhereInput
  }

  /**
   * DocenteCountOutputType without action
   */
  export type DocenteCountOutputTypeCountPagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
  }

  /**
   * DocenteCountOutputType without action
   */
  export type DocenteCountOutputTypeCountPlanDeClasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlanDeClasesWhereInput
  }

  /**
   * DocenteCountOutputType without action
   */
  export type DocenteCountOutputTypeCountPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionWhereInput
  }

  /**
   * DocenteCountOutputType without action
   */
  export type DocenteCountOutputTypeCountPublicacionInteraccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionInteraccionWhereInput
  }


  /**
   * Count Type EvaluacionCountOutputType
   */

  export type EvaluacionCountOutputType = {
    EvaluacionAsignacion: number
    Pregunta: number
  }

  export type EvaluacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EvaluacionAsignacion?: boolean | EvaluacionCountOutputTypeCountEvaluacionAsignacionArgs
    Pregunta?: boolean | EvaluacionCountOutputTypeCountPreguntaArgs
  }

  // Custom InputTypes
  /**
   * EvaluacionCountOutputType without action
   */
  export type EvaluacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionCountOutputType
     */
    select?: EvaluacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EvaluacionCountOutputType without action
   */
  export type EvaluacionCountOutputTypeCountEvaluacionAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionAsignacionWhereInput
  }

  /**
   * EvaluacionCountOutputType without action
   */
  export type EvaluacionCountOutputTypeCountPreguntaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreguntaWhereInput
  }


  /**
   * Count Type OpcionCountOutputType
   */

  export type OpcionCountOutputType = {
    RespuestaAlumno: number
  }

  export type OpcionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    RespuestaAlumno?: boolean | OpcionCountOutputTypeCountRespuestaAlumnoArgs
  }

  // Custom InputTypes
  /**
   * OpcionCountOutputType without action
   */
  export type OpcionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpcionCountOutputType
     */
    select?: OpcionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OpcionCountOutputType without action
   */
  export type OpcionCountOutputTypeCountRespuestaAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RespuestaAlumnoWhereInput
  }


  /**
   * Count Type PlanDeClasesCountOutputType
   */

  export type PlanDeClasesCountOutputType = {
    UnidadPlan: number
  }

  export type PlanDeClasesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UnidadPlan?: boolean | PlanDeClasesCountOutputTypeCountUnidadPlanArgs
  }

  // Custom InputTypes
  /**
   * PlanDeClasesCountOutputType without action
   */
  export type PlanDeClasesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClasesCountOutputType
     */
    select?: PlanDeClasesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PlanDeClasesCountOutputType without action
   */
  export type PlanDeClasesCountOutputTypeCountUnidadPlanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UnidadPlanWhereInput
  }


  /**
   * Count Type PreguntaCountOutputType
   */

  export type PreguntaCountOutputType = {
    Opcion: number
    RespuestaAlumno: number
  }

  export type PreguntaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Opcion?: boolean | PreguntaCountOutputTypeCountOpcionArgs
    RespuestaAlumno?: boolean | PreguntaCountOutputTypeCountRespuestaAlumnoArgs
  }

  // Custom InputTypes
  /**
   * PreguntaCountOutputType without action
   */
  export type PreguntaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PreguntaCountOutputType
     */
    select?: PreguntaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PreguntaCountOutputType without action
   */
  export type PreguntaCountOutputTypeCountOpcionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpcionWhereInput
  }

  /**
   * PreguntaCountOutputType without action
   */
  export type PreguntaCountOutputTypeCountRespuestaAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RespuestaAlumnoWhereInput
  }


  /**
   * Count Type PublicacionCountOutputType
   */

  export type PublicacionCountOutputType = {
    ComentarioPublicacion: number
    PublicacionInteraccion: number
  }

  export type PublicacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ComentarioPublicacion?: boolean | PublicacionCountOutputTypeCountComentarioPublicacionArgs
    PublicacionInteraccion?: boolean | PublicacionCountOutputTypeCountPublicacionInteraccionArgs
  }

  // Custom InputTypes
  /**
   * PublicacionCountOutputType without action
   */
  export type PublicacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionCountOutputType
     */
    select?: PublicacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PublicacionCountOutputType without action
   */
  export type PublicacionCountOutputTypeCountComentarioPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioPublicacionWhereInput
  }

  /**
   * PublicacionCountOutputType without action
   */
  export type PublicacionCountOutputTypeCountPublicacionInteraccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionInteraccionWhereInput
  }


  /**
   * Count Type TareaMaestraCountOutputType
   */

  export type TareaMaestraCountOutputType = {
    TareaAsignacion: number
  }

  export type TareaMaestraCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    TareaAsignacion?: boolean | TareaMaestraCountOutputTypeCountTareaAsignacionArgs
  }

  // Custom InputTypes
  /**
   * TareaMaestraCountOutputType without action
   */
  export type TareaMaestraCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestraCountOutputType
     */
    select?: TareaMaestraCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TareaMaestraCountOutputType without action
   */
  export type TareaMaestraCountOutputTypeCountTareaAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaAsignacionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Composer
   */

  export type AggregateComposer = {
    _count: ComposerCountAggregateOutputType | null
    _avg: ComposerAvgAggregateOutputType | null
    _sum: ComposerSumAggregateOutputType | null
    _min: ComposerMinAggregateOutputType | null
    _max: ComposerMaxAggregateOutputType | null
  }

  export type ComposerAvgAggregateOutputType = {
    id: number | null
    birth_day: number | null
    birth_month: number | null
    birth_year: number | null
    death_day: number | null
    death_month: number | null
    death_year: number | null
    completeness_score: number | null
  }

  export type ComposerSumAggregateOutputType = {
    id: number | null
    birth_day: number | null
    birth_month: number | null
    birth_year: number | null
    death_day: number | null
    death_month: number | null
    death_year: number | null
    completeness_score: number | null
  }

  export type ComposerMinAggregateOutputType = {
    id: number | null
    bio: string | null
    birth_day: number | null
    birth_month: number | null
    birth_year: number | null
    created_at: Date | null
    death_day: number | null
    death_month: number | null
    death_year: number | null
    email: string | null
    first_name: string | null
    ip_address: string | null
    last_name: string | null
    notable_works: string | null
    photo_url: string | null
    quality: string | null
    references: string | null
    status: string | null
    updated_at: Date | null
    youtube_link: string | null
    period: string | null
    completeness_score: number | null
    rejection_reason: string | null
    is_student_contribution: boolean | null
    student_first_name: string | null
    student_last_name: string | null
    suggestion_reason: string | null
  }

  export type ComposerMaxAggregateOutputType = {
    id: number | null
    bio: string | null
    birth_day: number | null
    birth_month: number | null
    birth_year: number | null
    created_at: Date | null
    death_day: number | null
    death_month: number | null
    death_year: number | null
    email: string | null
    first_name: string | null
    ip_address: string | null
    last_name: string | null
    notable_works: string | null
    photo_url: string | null
    quality: string | null
    references: string | null
    status: string | null
    updated_at: Date | null
    youtube_link: string | null
    period: string | null
    completeness_score: number | null
    rejection_reason: string | null
    is_student_contribution: boolean | null
    student_first_name: string | null
    student_last_name: string | null
    suggestion_reason: string | null
  }

  export type ComposerCountAggregateOutputType = {
    id: number
    bio: number
    birth_day: number
    birth_month: number
    birth_year: number
    created_at: number
    death_day: number
    death_month: number
    death_year: number
    email: number
    first_name: number
    ip_address: number
    last_name: number
    notable_works: number
    photo_url: number
    quality: number
    references: number
    status: number
    updated_at: number
    youtube_link: number
    period: number
    mainRole: number
    completeness_score: number
    rejection_reason: number
    is_student_contribution: number
    student_first_name: number
    student_last_name: number
    suggestion_reason: number
    _all: number
  }


  export type ComposerAvgAggregateInputType = {
    id?: true
    birth_day?: true
    birth_month?: true
    birth_year?: true
    death_day?: true
    death_month?: true
    death_year?: true
    completeness_score?: true
  }

  export type ComposerSumAggregateInputType = {
    id?: true
    birth_day?: true
    birth_month?: true
    birth_year?: true
    death_day?: true
    death_month?: true
    death_year?: true
    completeness_score?: true
  }

  export type ComposerMinAggregateInputType = {
    id?: true
    bio?: true
    birth_day?: true
    birth_month?: true
    birth_year?: true
    created_at?: true
    death_day?: true
    death_month?: true
    death_year?: true
    email?: true
    first_name?: true
    ip_address?: true
    last_name?: true
    notable_works?: true
    photo_url?: true
    quality?: true
    references?: true
    status?: true
    updated_at?: true
    youtube_link?: true
    period?: true
    completeness_score?: true
    rejection_reason?: true
    is_student_contribution?: true
    student_first_name?: true
    student_last_name?: true
    suggestion_reason?: true
  }

  export type ComposerMaxAggregateInputType = {
    id?: true
    bio?: true
    birth_day?: true
    birth_month?: true
    birth_year?: true
    created_at?: true
    death_day?: true
    death_month?: true
    death_year?: true
    email?: true
    first_name?: true
    ip_address?: true
    last_name?: true
    notable_works?: true
    photo_url?: true
    quality?: true
    references?: true
    status?: true
    updated_at?: true
    youtube_link?: true
    period?: true
    completeness_score?: true
    rejection_reason?: true
    is_student_contribution?: true
    student_first_name?: true
    student_last_name?: true
    suggestion_reason?: true
  }

  export type ComposerCountAggregateInputType = {
    id?: true
    bio?: true
    birth_day?: true
    birth_month?: true
    birth_year?: true
    created_at?: true
    death_day?: true
    death_month?: true
    death_year?: true
    email?: true
    first_name?: true
    ip_address?: true
    last_name?: true
    notable_works?: true
    photo_url?: true
    quality?: true
    references?: true
    status?: true
    updated_at?: true
    youtube_link?: true
    period?: true
    mainRole?: true
    completeness_score?: true
    rejection_reason?: true
    is_student_contribution?: true
    student_first_name?: true
    student_last_name?: true
    suggestion_reason?: true
    _all?: true
  }

  export type ComposerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Composer to aggregate.
     */
    where?: ComposerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Composers to fetch.
     */
    orderBy?: ComposerOrderByWithRelationInput | ComposerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComposerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Composers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Composers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Composers
    **/
    _count?: true | ComposerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComposerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComposerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComposerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComposerMaxAggregateInputType
  }

  export type GetComposerAggregateType<T extends ComposerAggregateArgs> = {
        [P in keyof T & keyof AggregateComposer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComposer[P]>
      : GetScalarType<T[P], AggregateComposer[P]>
  }




  export type ComposerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComposerWhereInput
    orderBy?: ComposerOrderByWithAggregationInput | ComposerOrderByWithAggregationInput[]
    by: ComposerScalarFieldEnum[] | ComposerScalarFieldEnum
    having?: ComposerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComposerCountAggregateInputType | true
    _avg?: ComposerAvgAggregateInputType
    _sum?: ComposerSumAggregateInputType
    _min?: ComposerMinAggregateInputType
    _max?: ComposerMaxAggregateInputType
  }

  export type ComposerGroupByOutputType = {
    id: number
    bio: string
    birth_day: number | null
    birth_month: number | null
    birth_year: number
    created_at: Date
    death_day: number | null
    death_month: number | null
    death_year: number | null
    email: string
    first_name: string
    ip_address: string | null
    last_name: string
    notable_works: string
    photo_url: string | null
    quality: string | null
    references: string | null
    status: string
    updated_at: Date
    youtube_link: string | null
    period: string
    mainRole: $Enums.RoleType[]
    completeness_score: number | null
    rejection_reason: string | null
    is_student_contribution: boolean
    student_first_name: string | null
    student_last_name: string | null
    suggestion_reason: string | null
    _count: ComposerCountAggregateOutputType | null
    _avg: ComposerAvgAggregateOutputType | null
    _sum: ComposerSumAggregateOutputType | null
    _min: ComposerMinAggregateOutputType | null
    _max: ComposerMaxAggregateOutputType | null
  }

  type GetComposerGroupByPayload<T extends ComposerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComposerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComposerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComposerGroupByOutputType[P]>
            : GetScalarType<T[P], ComposerGroupByOutputType[P]>
        }
      >
    >


  export type ComposerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bio?: boolean
    birth_day?: boolean
    birth_month?: boolean
    birth_year?: boolean
    created_at?: boolean
    death_day?: boolean
    death_month?: boolean
    death_year?: boolean
    email?: boolean
    first_name?: boolean
    ip_address?: boolean
    last_name?: boolean
    notable_works?: boolean
    photo_url?: boolean
    quality?: boolean
    references?: boolean
    status?: boolean
    updated_at?: boolean
    youtube_link?: boolean
    period?: boolean
    mainRole?: boolean
    completeness_score?: boolean
    rejection_reason?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    suggestion_reason?: boolean
    CatedraAlumno?: boolean | Composer$CatedraAlumnoArgs<ExtArgs>
    comments?: boolean | Composer$commentsArgs<ExtArgs>
    EditSuggestion?: boolean | Composer$EditSuggestionArgs<ExtArgs>
    ratings?: boolean | Composer$ratingsArgs<ExtArgs>
    _count?: boolean | ComposerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["composer"]>

  export type ComposerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bio?: boolean
    birth_day?: boolean
    birth_month?: boolean
    birth_year?: boolean
    created_at?: boolean
    death_day?: boolean
    death_month?: boolean
    death_year?: boolean
    email?: boolean
    first_name?: boolean
    ip_address?: boolean
    last_name?: boolean
    notable_works?: boolean
    photo_url?: boolean
    quality?: boolean
    references?: boolean
    status?: boolean
    updated_at?: boolean
    youtube_link?: boolean
    period?: boolean
    mainRole?: boolean
    completeness_score?: boolean
    rejection_reason?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    suggestion_reason?: boolean
  }, ExtArgs["result"]["composer"]>

  export type ComposerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    bio?: boolean
    birth_day?: boolean
    birth_month?: boolean
    birth_year?: boolean
    created_at?: boolean
    death_day?: boolean
    death_month?: boolean
    death_year?: boolean
    email?: boolean
    first_name?: boolean
    ip_address?: boolean
    last_name?: boolean
    notable_works?: boolean
    photo_url?: boolean
    quality?: boolean
    references?: boolean
    status?: boolean
    updated_at?: boolean
    youtube_link?: boolean
    period?: boolean
    mainRole?: boolean
    completeness_score?: boolean
    rejection_reason?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    suggestion_reason?: boolean
  }, ExtArgs["result"]["composer"]>

  export type ComposerSelectScalar = {
    id?: boolean
    bio?: boolean
    birth_day?: boolean
    birth_month?: boolean
    birth_year?: boolean
    created_at?: boolean
    death_day?: boolean
    death_month?: boolean
    death_year?: boolean
    email?: boolean
    first_name?: boolean
    ip_address?: boolean
    last_name?: boolean
    notable_works?: boolean
    photo_url?: boolean
    quality?: boolean
    references?: boolean
    status?: boolean
    updated_at?: boolean
    youtube_link?: boolean
    period?: boolean
    mainRole?: boolean
    completeness_score?: boolean
    rejection_reason?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    suggestion_reason?: boolean
  }

  export type ComposerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "bio" | "birth_day" | "birth_month" | "birth_year" | "created_at" | "death_day" | "death_month" | "death_year" | "email" | "first_name" | "ip_address" | "last_name" | "notable_works" | "photo_url" | "quality" | "references" | "status" | "updated_at" | "youtube_link" | "period" | "mainRole" | "completeness_score" | "rejection_reason" | "is_student_contribution" | "student_first_name" | "student_last_name" | "suggestion_reason", ExtArgs["result"]["composer"]>
  export type ComposerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CatedraAlumno?: boolean | Composer$CatedraAlumnoArgs<ExtArgs>
    comments?: boolean | Composer$commentsArgs<ExtArgs>
    EditSuggestion?: boolean | Composer$EditSuggestionArgs<ExtArgs>
    ratings?: boolean | Composer$ratingsArgs<ExtArgs>
    _count?: boolean | ComposerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ComposerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ComposerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ComposerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Composer"
    objects: {
      CatedraAlumno: Prisma.$CatedraAlumnoPayload<ExtArgs>[]
      comments: Prisma.$CommentPayload<ExtArgs>[]
      EditSuggestion: Prisma.$EditSuggestionPayload<ExtArgs>[]
      ratings: Prisma.$RatingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      bio: string
      birth_day: number | null
      birth_month: number | null
      birth_year: number
      created_at: Date
      death_day: number | null
      death_month: number | null
      death_year: number | null
      email: string
      first_name: string
      ip_address: string | null
      last_name: string
      notable_works: string
      photo_url: string | null
      quality: string | null
      references: string | null
      status: string
      updated_at: Date
      youtube_link: string | null
      period: string
      mainRole: $Enums.RoleType[]
      completeness_score: number | null
      rejection_reason: string | null
      is_student_contribution: boolean
      student_first_name: string | null
      student_last_name: string | null
      suggestion_reason: string | null
    }, ExtArgs["result"]["composer"]>
    composites: {}
  }

  type ComposerGetPayload<S extends boolean | null | undefined | ComposerDefaultArgs> = $Result.GetResult<Prisma.$ComposerPayload, S>

  type ComposerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ComposerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComposerCountAggregateInputType | true
    }

  export interface ComposerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Composer'], meta: { name: 'Composer' } }
    /**
     * Find zero or one Composer that matches the filter.
     * @param {ComposerFindUniqueArgs} args - Arguments to find a Composer
     * @example
     * // Get one Composer
     * const composer = await prisma.composer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComposerFindUniqueArgs>(args: SelectSubset<T, ComposerFindUniqueArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Composer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ComposerFindUniqueOrThrowArgs} args - Arguments to find a Composer
     * @example
     * // Get one Composer
     * const composer = await prisma.composer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComposerFindUniqueOrThrowArgs>(args: SelectSubset<T, ComposerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Composer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComposerFindFirstArgs} args - Arguments to find a Composer
     * @example
     * // Get one Composer
     * const composer = await prisma.composer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComposerFindFirstArgs>(args?: SelectSubset<T, ComposerFindFirstArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Composer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComposerFindFirstOrThrowArgs} args - Arguments to find a Composer
     * @example
     * // Get one Composer
     * const composer = await prisma.composer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComposerFindFirstOrThrowArgs>(args?: SelectSubset<T, ComposerFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Composers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComposerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Composers
     * const composers = await prisma.composer.findMany()
     * 
     * // Get first 10 Composers
     * const composers = await prisma.composer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const composerWithIdOnly = await prisma.composer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComposerFindManyArgs>(args?: SelectSubset<T, ComposerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Composer.
     * @param {ComposerCreateArgs} args - Arguments to create a Composer.
     * @example
     * // Create one Composer
     * const Composer = await prisma.composer.create({
     *   data: {
     *     // ... data to create a Composer
     *   }
     * })
     * 
     */
    create<T extends ComposerCreateArgs>(args: SelectSubset<T, ComposerCreateArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Composers.
     * @param {ComposerCreateManyArgs} args - Arguments to create many Composers.
     * @example
     * // Create many Composers
     * const composer = await prisma.composer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComposerCreateManyArgs>(args?: SelectSubset<T, ComposerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Composers and returns the data saved in the database.
     * @param {ComposerCreateManyAndReturnArgs} args - Arguments to create many Composers.
     * @example
     * // Create many Composers
     * const composer = await prisma.composer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Composers and only return the `id`
     * const composerWithIdOnly = await prisma.composer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComposerCreateManyAndReturnArgs>(args?: SelectSubset<T, ComposerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Composer.
     * @param {ComposerDeleteArgs} args - Arguments to delete one Composer.
     * @example
     * // Delete one Composer
     * const Composer = await prisma.composer.delete({
     *   where: {
     *     // ... filter to delete one Composer
     *   }
     * })
     * 
     */
    delete<T extends ComposerDeleteArgs>(args: SelectSubset<T, ComposerDeleteArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Composer.
     * @param {ComposerUpdateArgs} args - Arguments to update one Composer.
     * @example
     * // Update one Composer
     * const composer = await prisma.composer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComposerUpdateArgs>(args: SelectSubset<T, ComposerUpdateArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Composers.
     * @param {ComposerDeleteManyArgs} args - Arguments to filter Composers to delete.
     * @example
     * // Delete a few Composers
     * const { count } = await prisma.composer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComposerDeleteManyArgs>(args?: SelectSubset<T, ComposerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Composers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComposerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Composers
     * const composer = await prisma.composer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComposerUpdateManyArgs>(args: SelectSubset<T, ComposerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Composers and returns the data updated in the database.
     * @param {ComposerUpdateManyAndReturnArgs} args - Arguments to update many Composers.
     * @example
     * // Update many Composers
     * const composer = await prisma.composer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Composers and only return the `id`
     * const composerWithIdOnly = await prisma.composer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ComposerUpdateManyAndReturnArgs>(args: SelectSubset<T, ComposerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Composer.
     * @param {ComposerUpsertArgs} args - Arguments to update or create a Composer.
     * @example
     * // Update or create a Composer
     * const composer = await prisma.composer.upsert({
     *   create: {
     *     // ... data to create a Composer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Composer we want to update
     *   }
     * })
     */
    upsert<T extends ComposerUpsertArgs>(args: SelectSubset<T, ComposerUpsertArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Composers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComposerCountArgs} args - Arguments to filter Composers to count.
     * @example
     * // Count the number of Composers
     * const count = await prisma.composer.count({
     *   where: {
     *     // ... the filter for the Composers we want to count
     *   }
     * })
    **/
    count<T extends ComposerCountArgs>(
      args?: Subset<T, ComposerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComposerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Composer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComposerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComposerAggregateArgs>(args: Subset<T, ComposerAggregateArgs>): Prisma.PrismaPromise<GetComposerAggregateType<T>>

    /**
     * Group by Composer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComposerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComposerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComposerGroupByArgs['orderBy'] }
        : { orderBy?: ComposerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComposerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComposerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Composer model
   */
  readonly fields: ComposerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Composer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComposerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CatedraAlumno<T extends Composer$CatedraAlumnoArgs<ExtArgs> = {}>(args?: Subset<T, Composer$CatedraAlumnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments<T extends Composer$commentsArgs<ExtArgs> = {}>(args?: Subset<T, Composer$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EditSuggestion<T extends Composer$EditSuggestionArgs<ExtArgs> = {}>(args?: Subset<T, Composer$EditSuggestionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ratings<T extends Composer$ratingsArgs<ExtArgs> = {}>(args?: Subset<T, Composer$ratingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Composer model
   */
  interface ComposerFieldRefs {
    readonly id: FieldRef<"Composer", 'Int'>
    readonly bio: FieldRef<"Composer", 'String'>
    readonly birth_day: FieldRef<"Composer", 'Int'>
    readonly birth_month: FieldRef<"Composer", 'Int'>
    readonly birth_year: FieldRef<"Composer", 'Int'>
    readonly created_at: FieldRef<"Composer", 'DateTime'>
    readonly death_day: FieldRef<"Composer", 'Int'>
    readonly death_month: FieldRef<"Composer", 'Int'>
    readonly death_year: FieldRef<"Composer", 'Int'>
    readonly email: FieldRef<"Composer", 'String'>
    readonly first_name: FieldRef<"Composer", 'String'>
    readonly ip_address: FieldRef<"Composer", 'String'>
    readonly last_name: FieldRef<"Composer", 'String'>
    readonly notable_works: FieldRef<"Composer", 'String'>
    readonly photo_url: FieldRef<"Composer", 'String'>
    readonly quality: FieldRef<"Composer", 'String'>
    readonly references: FieldRef<"Composer", 'String'>
    readonly status: FieldRef<"Composer", 'String'>
    readonly updated_at: FieldRef<"Composer", 'DateTime'>
    readonly youtube_link: FieldRef<"Composer", 'String'>
    readonly period: FieldRef<"Composer", 'String'>
    readonly mainRole: FieldRef<"Composer", 'RoleType[]'>
    readonly completeness_score: FieldRef<"Composer", 'Int'>
    readonly rejection_reason: FieldRef<"Composer", 'String'>
    readonly is_student_contribution: FieldRef<"Composer", 'Boolean'>
    readonly student_first_name: FieldRef<"Composer", 'String'>
    readonly student_last_name: FieldRef<"Composer", 'String'>
    readonly suggestion_reason: FieldRef<"Composer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Composer findUnique
   */
  export type ComposerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * Filter, which Composer to fetch.
     */
    where: ComposerWhereUniqueInput
  }

  /**
   * Composer findUniqueOrThrow
   */
  export type ComposerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * Filter, which Composer to fetch.
     */
    where: ComposerWhereUniqueInput
  }

  /**
   * Composer findFirst
   */
  export type ComposerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * Filter, which Composer to fetch.
     */
    where?: ComposerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Composers to fetch.
     */
    orderBy?: ComposerOrderByWithRelationInput | ComposerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Composers.
     */
    cursor?: ComposerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Composers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Composers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Composers.
     */
    distinct?: ComposerScalarFieldEnum | ComposerScalarFieldEnum[]
  }

  /**
   * Composer findFirstOrThrow
   */
  export type ComposerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * Filter, which Composer to fetch.
     */
    where?: ComposerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Composers to fetch.
     */
    orderBy?: ComposerOrderByWithRelationInput | ComposerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Composers.
     */
    cursor?: ComposerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Composers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Composers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Composers.
     */
    distinct?: ComposerScalarFieldEnum | ComposerScalarFieldEnum[]
  }

  /**
   * Composer findMany
   */
  export type ComposerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * Filter, which Composers to fetch.
     */
    where?: ComposerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Composers to fetch.
     */
    orderBy?: ComposerOrderByWithRelationInput | ComposerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Composers.
     */
    cursor?: ComposerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Composers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Composers.
     */
    skip?: number
    distinct?: ComposerScalarFieldEnum | ComposerScalarFieldEnum[]
  }

  /**
   * Composer create
   */
  export type ComposerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * The data needed to create a Composer.
     */
    data: XOR<ComposerCreateInput, ComposerUncheckedCreateInput>
  }

  /**
   * Composer createMany
   */
  export type ComposerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Composers.
     */
    data: ComposerCreateManyInput | ComposerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Composer createManyAndReturn
   */
  export type ComposerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * The data used to create many Composers.
     */
    data: ComposerCreateManyInput | ComposerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Composer update
   */
  export type ComposerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * The data needed to update a Composer.
     */
    data: XOR<ComposerUpdateInput, ComposerUncheckedUpdateInput>
    /**
     * Choose, which Composer to update.
     */
    where: ComposerWhereUniqueInput
  }

  /**
   * Composer updateMany
   */
  export type ComposerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Composers.
     */
    data: XOR<ComposerUpdateManyMutationInput, ComposerUncheckedUpdateManyInput>
    /**
     * Filter which Composers to update
     */
    where?: ComposerWhereInput
    /**
     * Limit how many Composers to update.
     */
    limit?: number
  }

  /**
   * Composer updateManyAndReturn
   */
  export type ComposerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * The data used to update Composers.
     */
    data: XOR<ComposerUpdateManyMutationInput, ComposerUncheckedUpdateManyInput>
    /**
     * Filter which Composers to update
     */
    where?: ComposerWhereInput
    /**
     * Limit how many Composers to update.
     */
    limit?: number
  }

  /**
   * Composer upsert
   */
  export type ComposerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * The filter to search for the Composer to update in case it exists.
     */
    where: ComposerWhereUniqueInput
    /**
     * In case the Composer found by the `where` argument doesn't exist, create a new Composer with this data.
     */
    create: XOR<ComposerCreateInput, ComposerUncheckedCreateInput>
    /**
     * In case the Composer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComposerUpdateInput, ComposerUncheckedUpdateInput>
  }

  /**
   * Composer delete
   */
  export type ComposerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    /**
     * Filter which Composer to delete.
     */
    where: ComposerWhereUniqueInput
  }

  /**
   * Composer deleteMany
   */
  export type ComposerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Composers to delete
     */
    where?: ComposerWhereInput
    /**
     * Limit how many Composers to delete.
     */
    limit?: number
  }

  /**
   * Composer.CatedraAlumno
   */
  export type Composer$CatedraAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    where?: CatedraAlumnoWhereInput
    orderBy?: CatedraAlumnoOrderByWithRelationInput | CatedraAlumnoOrderByWithRelationInput[]
    cursor?: CatedraAlumnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CatedraAlumnoScalarFieldEnum | CatedraAlumnoScalarFieldEnum[]
  }

  /**
   * Composer.comments
   */
  export type Composer$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Composer.EditSuggestion
   */
  export type Composer$EditSuggestionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    where?: EditSuggestionWhereInput
    orderBy?: EditSuggestionOrderByWithRelationInput | EditSuggestionOrderByWithRelationInput[]
    cursor?: EditSuggestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EditSuggestionScalarFieldEnum | EditSuggestionScalarFieldEnum[]
  }

  /**
   * Composer.ratings
   */
  export type Composer$ratingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    where?: RatingWhereInput
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    cursor?: RatingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Composer without action
   */
  export type ComposerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
  }


  /**
   * Model Comment
   */

  export type AggregateComment = {
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  export type CommentAvgAggregateOutputType = {
    id: number | null
    composerId: number | null
  }

  export type CommentSumAggregateOutputType = {
    id: number | null
    composerId: number | null
  }

  export type CommentMinAggregateOutputType = {
    id: number | null
    text: string | null
    composerId: number | null
    created_at: Date | null
    ip_address: string | null
    name: string | null
  }

  export type CommentMaxAggregateOutputType = {
    id: number | null
    text: string | null
    composerId: number | null
    created_at: Date | null
    ip_address: string | null
    name: string | null
  }

  export type CommentCountAggregateOutputType = {
    id: number
    text: number
    composerId: number
    created_at: number
    ip_address: number
    name: number
    _all: number
  }


  export type CommentAvgAggregateInputType = {
    id?: true
    composerId?: true
  }

  export type CommentSumAggregateInputType = {
    id?: true
    composerId?: true
  }

  export type CommentMinAggregateInputType = {
    id?: true
    text?: true
    composerId?: true
    created_at?: true
    ip_address?: true
    name?: true
  }

  export type CommentMaxAggregateInputType = {
    id?: true
    text?: true
    composerId?: true
    created_at?: true
    ip_address?: true
    name?: true
  }

  export type CommentCountAggregateInputType = {
    id?: true
    text?: true
    composerId?: true
    created_at?: true
    ip_address?: true
    name?: true
    _all?: true
  }

  export type CommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comment to aggregate.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comments
    **/
    _count?: true | CommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentMaxAggregateInputType
  }

  export type GetCommentAggregateType<T extends CommentAggregateArgs> = {
        [P in keyof T & keyof AggregateComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment[P]>
      : GetScalarType<T[P], AggregateComment[P]>
  }




  export type CommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithAggregationInput | CommentOrderByWithAggregationInput[]
    by: CommentScalarFieldEnum[] | CommentScalarFieldEnum
    having?: CommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCountAggregateInputType | true
    _avg?: CommentAvgAggregateInputType
    _sum?: CommentSumAggregateInputType
    _min?: CommentMinAggregateInputType
    _max?: CommentMaxAggregateInputType
  }

  export type CommentGroupByOutputType = {
    id: number
    text: string
    composerId: number
    created_at: Date
    ip_address: string | null
    name: string
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  type GetCommentGroupByPayload<T extends CommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentGroupByOutputType[P]>
            : GetScalarType<T[P], CommentGroupByOutputType[P]>
        }
      >
    >


  export type CommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    text?: boolean
    composerId?: boolean
    created_at?: boolean
    ip_address?: boolean
    name?: boolean
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    text?: boolean
    composerId?: boolean
    created_at?: boolean
    ip_address?: boolean
    name?: boolean
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    text?: boolean
    composerId?: boolean
    created_at?: boolean
    ip_address?: boolean
    name?: boolean
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectScalar = {
    id?: boolean
    text?: boolean
    composerId?: boolean
    created_at?: boolean
    ip_address?: boolean
    name?: boolean
  }

  export type CommentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "text" | "composerId" | "created_at" | "ip_address" | "name", ExtArgs["result"]["comment"]>
  export type CommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }
  export type CommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }
  export type CommentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }

  export type $CommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comment"
    objects: {
      composer: Prisma.$ComposerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      text: string
      composerId: number
      created_at: Date
      ip_address: string | null
      name: string
    }, ExtArgs["result"]["comment"]>
    composites: {}
  }

  type CommentGetPayload<S extends boolean | null | undefined | CommentDefaultArgs> = $Result.GetResult<Prisma.$CommentPayload, S>

  type CommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentCountAggregateInputType | true
    }

  export interface CommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comment'], meta: { name: 'Comment' } }
    /**
     * Find zero or one Comment that matches the filter.
     * @param {CommentFindUniqueArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentFindUniqueArgs>(args: SelectSubset<T, CommentFindUniqueArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentFindUniqueOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentFindFirstArgs>(args?: SelectSubset<T, CommentFindFirstArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comment.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commentWithIdOnly = await prisma.comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommentFindManyArgs>(args?: SelectSubset<T, CommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comment.
     * @param {CommentCreateArgs} args - Arguments to create a Comment.
     * @example
     * // Create one Comment
     * const Comment = await prisma.comment.create({
     *   data: {
     *     // ... data to create a Comment
     *   }
     * })
     * 
     */
    create<T extends CommentCreateArgs>(args: SelectSubset<T, CommentCreateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments.
     * @param {CommentCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentCreateManyArgs>(args?: SelectSubset<T, CommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comments and returns the data saved in the database.
     * @param {CommentCreateManyAndReturnArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comments and only return the `id`
     * const commentWithIdOnly = await prisma.comment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommentCreateManyAndReturnArgs>(args?: SelectSubset<T, CommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comment.
     * @param {CommentDeleteArgs} args - Arguments to delete one Comment.
     * @example
     * // Delete one Comment
     * const Comment = await prisma.comment.delete({
     *   where: {
     *     // ... filter to delete one Comment
     *   }
     * })
     * 
     */
    delete<T extends CommentDeleteArgs>(args: SelectSubset<T, CommentDeleteArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comment.
     * @param {CommentUpdateArgs} args - Arguments to update one Comment.
     * @example
     * // Update one Comment
     * const comment = await prisma.comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentUpdateArgs>(args: SelectSubset<T, CommentUpdateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments.
     * @param {CommentDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentDeleteManyArgs>(args?: SelectSubset<T, CommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentUpdateManyArgs>(args: SelectSubset<T, CommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments and returns the data updated in the database.
     * @param {CommentUpdateManyAndReturnArgs} args - Arguments to update many Comments.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comments and only return the `id`
     * const commentWithIdOnly = await prisma.comment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommentUpdateManyAndReturnArgs>(args: SelectSubset<T, CommentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comment.
     * @param {CommentUpsertArgs} args - Arguments to update or create a Comment.
     * @example
     * // Update or create a Comment
     * const comment = await prisma.comment.upsert({
     *   create: {
     *     // ... data to create a Comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment we want to update
     *   }
     * })
     */
    upsert<T extends CommentUpsertArgs>(args: SelectSubset<T, CommentUpsertArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comment.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends CommentCountArgs>(
      args?: Subset<T, CommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentAggregateArgs>(args: Subset<T, CommentAggregateArgs>): Prisma.PrismaPromise<GetCommentAggregateType<T>>

    /**
     * Group by Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentGroupByArgs['orderBy'] }
        : { orderBy?: CommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comment model
   */
  readonly fields: CommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    composer<T extends ComposerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ComposerDefaultArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comment model
   */
  interface CommentFieldRefs {
    readonly id: FieldRef<"Comment", 'Int'>
    readonly text: FieldRef<"Comment", 'String'>
    readonly composerId: FieldRef<"Comment", 'Int'>
    readonly created_at: FieldRef<"Comment", 'DateTime'>
    readonly ip_address: FieldRef<"Comment", 'String'>
    readonly name: FieldRef<"Comment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Comment findUnique
   */
  export type CommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findUniqueOrThrow
   */
  export type CommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findFirst
   */
  export type CommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findFirstOrThrow
   */
  export type CommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findMany
   */
  export type CommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment create
   */
  export type CommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to create a Comment.
     */
    data: XOR<CommentCreateInput, CommentUncheckedCreateInput>
  }

  /**
   * Comment createMany
   */
  export type CommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Comment createManyAndReturn
   */
  export type CommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment update
   */
  export type CommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to update a Comment.
     */
    data: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
    /**
     * Choose, which Comment to update.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment updateMany
   */
  export type CommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
  }

  /**
   * Comment updateManyAndReturn
   */
  export type CommentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment upsert
   */
  export type CommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The filter to search for the Comment to update in case it exists.
     */
    where: CommentWhereUniqueInput
    /**
     * In case the Comment found by the `where` argument doesn't exist, create a new Comment with this data.
     */
    create: XOR<CommentCreateInput, CommentUncheckedCreateInput>
    /**
     * In case the Comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
  }

  /**
   * Comment delete
   */
  export type CommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter which Comment to delete.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment deleteMany
   */
  export type CommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to delete
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to delete.
     */
    limit?: number
  }

  /**
   * Comment without action
   */
  export type CommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
  }


  /**
   * Model Rating
   */

  export type AggregateRating = {
    _count: RatingCountAggregateOutputType | null
    _avg: RatingAvgAggregateOutputType | null
    _sum: RatingSumAggregateOutputType | null
    _min: RatingMinAggregateOutputType | null
    _max: RatingMaxAggregateOutputType | null
  }

  export type RatingAvgAggregateOutputType = {
    id: number | null
    rating_value: number | null
    composerId: number | null
  }

  export type RatingSumAggregateOutputType = {
    id: number | null
    rating_value: number | null
    composerId: number | null
  }

  export type RatingMinAggregateOutputType = {
    id: number | null
    rating_value: number | null
    ip_address: string | null
    created_at: Date | null
    composerId: number | null
  }

  export type RatingMaxAggregateOutputType = {
    id: number | null
    rating_value: number | null
    ip_address: string | null
    created_at: Date | null
    composerId: number | null
  }

  export type RatingCountAggregateOutputType = {
    id: number
    rating_value: number
    ip_address: number
    created_at: number
    composerId: number
    _all: number
  }


  export type RatingAvgAggregateInputType = {
    id?: true
    rating_value?: true
    composerId?: true
  }

  export type RatingSumAggregateInputType = {
    id?: true
    rating_value?: true
    composerId?: true
  }

  export type RatingMinAggregateInputType = {
    id?: true
    rating_value?: true
    ip_address?: true
    created_at?: true
    composerId?: true
  }

  export type RatingMaxAggregateInputType = {
    id?: true
    rating_value?: true
    ip_address?: true
    created_at?: true
    composerId?: true
  }

  export type RatingCountAggregateInputType = {
    id?: true
    rating_value?: true
    ip_address?: true
    created_at?: true
    composerId?: true
    _all?: true
  }

  export type RatingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Rating to aggregate.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ratings
    **/
    _count?: true | RatingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RatingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RatingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RatingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RatingMaxAggregateInputType
  }

  export type GetRatingAggregateType<T extends RatingAggregateArgs> = {
        [P in keyof T & keyof AggregateRating]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRating[P]>
      : GetScalarType<T[P], AggregateRating[P]>
  }




  export type RatingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RatingWhereInput
    orderBy?: RatingOrderByWithAggregationInput | RatingOrderByWithAggregationInput[]
    by: RatingScalarFieldEnum[] | RatingScalarFieldEnum
    having?: RatingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RatingCountAggregateInputType | true
    _avg?: RatingAvgAggregateInputType
    _sum?: RatingSumAggregateInputType
    _min?: RatingMinAggregateInputType
    _max?: RatingMaxAggregateInputType
  }

  export type RatingGroupByOutputType = {
    id: number
    rating_value: number
    ip_address: string | null
    created_at: Date
    composerId: number
    _count: RatingCountAggregateOutputType | null
    _avg: RatingAvgAggregateOutputType | null
    _sum: RatingSumAggregateOutputType | null
    _min: RatingMinAggregateOutputType | null
    _max: RatingMaxAggregateOutputType | null
  }

  type GetRatingGroupByPayload<T extends RatingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RatingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RatingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RatingGroupByOutputType[P]>
            : GetScalarType<T[P], RatingGroupByOutputType[P]>
        }
      >
    >


  export type RatingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating_value?: boolean
    ip_address?: boolean
    created_at?: boolean
    composerId?: boolean
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rating"]>

  export type RatingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating_value?: boolean
    ip_address?: boolean
    created_at?: boolean
    composerId?: boolean
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rating"]>

  export type RatingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating_value?: boolean
    ip_address?: boolean
    created_at?: boolean
    composerId?: boolean
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rating"]>

  export type RatingSelectScalar = {
    id?: boolean
    rating_value?: boolean
    ip_address?: boolean
    created_at?: boolean
    composerId?: boolean
  }

  export type RatingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rating_value" | "ip_address" | "created_at" | "composerId", ExtArgs["result"]["rating"]>
  export type RatingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }
  export type RatingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }
  export type RatingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }

  export type $RatingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Rating"
    objects: {
      composer: Prisma.$ComposerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      rating_value: number
      ip_address: string | null
      created_at: Date
      composerId: number
    }, ExtArgs["result"]["rating"]>
    composites: {}
  }

  type RatingGetPayload<S extends boolean | null | undefined | RatingDefaultArgs> = $Result.GetResult<Prisma.$RatingPayload, S>

  type RatingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RatingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RatingCountAggregateInputType | true
    }

  export interface RatingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Rating'], meta: { name: 'Rating' } }
    /**
     * Find zero or one Rating that matches the filter.
     * @param {RatingFindUniqueArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RatingFindUniqueArgs>(args: SelectSubset<T, RatingFindUniqueArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rating that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RatingFindUniqueOrThrowArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RatingFindUniqueOrThrowArgs>(args: SelectSubset<T, RatingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rating that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingFindFirstArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RatingFindFirstArgs>(args?: SelectSubset<T, RatingFindFirstArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rating that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingFindFirstOrThrowArgs} args - Arguments to find a Rating
     * @example
     * // Get one Rating
     * const rating = await prisma.rating.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RatingFindFirstOrThrowArgs>(args?: SelectSubset<T, RatingFindFirstOrThrowArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ratings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ratings
     * const ratings = await prisma.rating.findMany()
     * 
     * // Get first 10 Ratings
     * const ratings = await prisma.rating.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ratingWithIdOnly = await prisma.rating.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RatingFindManyArgs>(args?: SelectSubset<T, RatingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rating.
     * @param {RatingCreateArgs} args - Arguments to create a Rating.
     * @example
     * // Create one Rating
     * const Rating = await prisma.rating.create({
     *   data: {
     *     // ... data to create a Rating
     *   }
     * })
     * 
     */
    create<T extends RatingCreateArgs>(args: SelectSubset<T, RatingCreateArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ratings.
     * @param {RatingCreateManyArgs} args - Arguments to create many Ratings.
     * @example
     * // Create many Ratings
     * const rating = await prisma.rating.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RatingCreateManyArgs>(args?: SelectSubset<T, RatingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ratings and returns the data saved in the database.
     * @param {RatingCreateManyAndReturnArgs} args - Arguments to create many Ratings.
     * @example
     * // Create many Ratings
     * const rating = await prisma.rating.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ratings and only return the `id`
     * const ratingWithIdOnly = await prisma.rating.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RatingCreateManyAndReturnArgs>(args?: SelectSubset<T, RatingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Rating.
     * @param {RatingDeleteArgs} args - Arguments to delete one Rating.
     * @example
     * // Delete one Rating
     * const Rating = await prisma.rating.delete({
     *   where: {
     *     // ... filter to delete one Rating
     *   }
     * })
     * 
     */
    delete<T extends RatingDeleteArgs>(args: SelectSubset<T, RatingDeleteArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rating.
     * @param {RatingUpdateArgs} args - Arguments to update one Rating.
     * @example
     * // Update one Rating
     * const rating = await prisma.rating.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RatingUpdateArgs>(args: SelectSubset<T, RatingUpdateArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ratings.
     * @param {RatingDeleteManyArgs} args - Arguments to filter Ratings to delete.
     * @example
     * // Delete a few Ratings
     * const { count } = await prisma.rating.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RatingDeleteManyArgs>(args?: SelectSubset<T, RatingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ratings
     * const rating = await prisma.rating.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RatingUpdateManyArgs>(args: SelectSubset<T, RatingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ratings and returns the data updated in the database.
     * @param {RatingUpdateManyAndReturnArgs} args - Arguments to update many Ratings.
     * @example
     * // Update many Ratings
     * const rating = await prisma.rating.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ratings and only return the `id`
     * const ratingWithIdOnly = await prisma.rating.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RatingUpdateManyAndReturnArgs>(args: SelectSubset<T, RatingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Rating.
     * @param {RatingUpsertArgs} args - Arguments to update or create a Rating.
     * @example
     * // Update or create a Rating
     * const rating = await prisma.rating.upsert({
     *   create: {
     *     // ... data to create a Rating
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rating we want to update
     *   }
     * })
     */
    upsert<T extends RatingUpsertArgs>(args: SelectSubset<T, RatingUpsertArgs<ExtArgs>>): Prisma__RatingClient<$Result.GetResult<Prisma.$RatingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingCountArgs} args - Arguments to filter Ratings to count.
     * @example
     * // Count the number of Ratings
     * const count = await prisma.rating.count({
     *   where: {
     *     // ... the filter for the Ratings we want to count
     *   }
     * })
    **/
    count<T extends RatingCountArgs>(
      args?: Subset<T, RatingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RatingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rating.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RatingAggregateArgs>(args: Subset<T, RatingAggregateArgs>): Prisma.PrismaPromise<GetRatingAggregateType<T>>

    /**
     * Group by Rating.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RatingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RatingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RatingGroupByArgs['orderBy'] }
        : { orderBy?: RatingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RatingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRatingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Rating model
   */
  readonly fields: RatingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Rating.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RatingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    composer<T extends ComposerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ComposerDefaultArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Rating model
   */
  interface RatingFieldRefs {
    readonly id: FieldRef<"Rating", 'Int'>
    readonly rating_value: FieldRef<"Rating", 'Int'>
    readonly ip_address: FieldRef<"Rating", 'String'>
    readonly created_at: FieldRef<"Rating", 'DateTime'>
    readonly composerId: FieldRef<"Rating", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Rating findUnique
   */
  export type RatingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating findUniqueOrThrow
   */
  export type RatingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating findFirst
   */
  export type RatingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ratings.
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ratings.
     */
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Rating findFirstOrThrow
   */
  export type RatingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Rating to fetch.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ratings.
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ratings.
     */
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Rating findMany
   */
  export type RatingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter, which Ratings to fetch.
     */
    where?: RatingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ratings to fetch.
     */
    orderBy?: RatingOrderByWithRelationInput | RatingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ratings.
     */
    cursor?: RatingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ratings.
     */
    skip?: number
    distinct?: RatingScalarFieldEnum | RatingScalarFieldEnum[]
  }

  /**
   * Rating create
   */
  export type RatingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * The data needed to create a Rating.
     */
    data: XOR<RatingCreateInput, RatingUncheckedCreateInput>
  }

  /**
   * Rating createMany
   */
  export type RatingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ratings.
     */
    data: RatingCreateManyInput | RatingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Rating createManyAndReturn
   */
  export type RatingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * The data used to create many Ratings.
     */
    data: RatingCreateManyInput | RatingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Rating update
   */
  export type RatingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * The data needed to update a Rating.
     */
    data: XOR<RatingUpdateInput, RatingUncheckedUpdateInput>
    /**
     * Choose, which Rating to update.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating updateMany
   */
  export type RatingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ratings.
     */
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyInput>
    /**
     * Filter which Ratings to update
     */
    where?: RatingWhereInput
    /**
     * Limit how many Ratings to update.
     */
    limit?: number
  }

  /**
   * Rating updateManyAndReturn
   */
  export type RatingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * The data used to update Ratings.
     */
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyInput>
    /**
     * Filter which Ratings to update
     */
    where?: RatingWhereInput
    /**
     * Limit how many Ratings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Rating upsert
   */
  export type RatingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * The filter to search for the Rating to update in case it exists.
     */
    where: RatingWhereUniqueInput
    /**
     * In case the Rating found by the `where` argument doesn't exist, create a new Rating with this data.
     */
    create: XOR<RatingCreateInput, RatingUncheckedCreateInput>
    /**
     * In case the Rating was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RatingUpdateInput, RatingUncheckedUpdateInput>
  }

  /**
   * Rating delete
   */
  export type RatingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
    /**
     * Filter which Rating to delete.
     */
    where: RatingWhereUniqueInput
  }

  /**
   * Rating deleteMany
   */
  export type RatingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ratings to delete
     */
    where?: RatingWhereInput
    /**
     * Limit how many Ratings to delete.
     */
    limit?: number
  }

  /**
   * Rating without action
   */
  export type RatingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Rating
     */
    select?: RatingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Rating
     */
    omit?: RatingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RatingInclude<ExtArgs> | null
  }


  /**
   * Model Otp
   */

  export type AggregateOtp = {
    _count: OtpCountAggregateOutputType | null
    _avg: OtpAvgAggregateOutputType | null
    _sum: OtpSumAggregateOutputType | null
    _min: OtpMinAggregateOutputType | null
    _max: OtpMaxAggregateOutputType | null
  }

  export type OtpAvgAggregateOutputType = {
    id: number | null
  }

  export type OtpSumAggregateOutputType = {
    id: number | null
  }

  export type OtpMinAggregateOutputType = {
    id: number | null
    email: string | null
    code: string | null
    expiresAt: Date | null
  }

  export type OtpMaxAggregateOutputType = {
    id: number | null
    email: string | null
    code: string | null
    expiresAt: Date | null
  }

  export type OtpCountAggregateOutputType = {
    id: number
    email: number
    code: number
    expiresAt: number
    _all: number
  }


  export type OtpAvgAggregateInputType = {
    id?: true
  }

  export type OtpSumAggregateInputType = {
    id?: true
  }

  export type OtpMinAggregateInputType = {
    id?: true
    email?: true
    code?: true
    expiresAt?: true
  }

  export type OtpMaxAggregateInputType = {
    id?: true
    email?: true
    code?: true
    expiresAt?: true
  }

  export type OtpCountAggregateInputType = {
    id?: true
    email?: true
    code?: true
    expiresAt?: true
    _all?: true
  }

  export type OtpAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Otp to aggregate.
     */
    where?: OtpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpOrderByWithRelationInput | OtpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OtpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Otps
    **/
    _count?: true | OtpCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OtpAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OtpSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OtpMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OtpMaxAggregateInputType
  }

  export type GetOtpAggregateType<T extends OtpAggregateArgs> = {
        [P in keyof T & keyof AggregateOtp]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOtp[P]>
      : GetScalarType<T[P], AggregateOtp[P]>
  }




  export type OtpGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OtpWhereInput
    orderBy?: OtpOrderByWithAggregationInput | OtpOrderByWithAggregationInput[]
    by: OtpScalarFieldEnum[] | OtpScalarFieldEnum
    having?: OtpScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OtpCountAggregateInputType | true
    _avg?: OtpAvgAggregateInputType
    _sum?: OtpSumAggregateInputType
    _min?: OtpMinAggregateInputType
    _max?: OtpMaxAggregateInputType
  }

  export type OtpGroupByOutputType = {
    id: number
    email: string
    code: string
    expiresAt: Date
    _count: OtpCountAggregateOutputType | null
    _avg: OtpAvgAggregateOutputType | null
    _sum: OtpSumAggregateOutputType | null
    _min: OtpMinAggregateOutputType | null
    _max: OtpMaxAggregateOutputType | null
  }

  type GetOtpGroupByPayload<T extends OtpGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OtpGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OtpGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OtpGroupByOutputType[P]>
            : GetScalarType<T[P], OtpGroupByOutputType[P]>
        }
      >
    >


  export type OtpSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    expiresAt?: boolean
  }, ExtArgs["result"]["otp"]>

  export type OtpSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    expiresAt?: boolean
  }, ExtArgs["result"]["otp"]>

  export type OtpSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    expiresAt?: boolean
  }, ExtArgs["result"]["otp"]>

  export type OtpSelectScalar = {
    id?: boolean
    email?: boolean
    code?: boolean
    expiresAt?: boolean
  }

  export type OtpOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "code" | "expiresAt", ExtArgs["result"]["otp"]>

  export type $OtpPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Otp"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      code: string
      expiresAt: Date
    }, ExtArgs["result"]["otp"]>
    composites: {}
  }

  type OtpGetPayload<S extends boolean | null | undefined | OtpDefaultArgs> = $Result.GetResult<Prisma.$OtpPayload, S>

  type OtpCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OtpFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OtpCountAggregateInputType | true
    }

  export interface OtpDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Otp'], meta: { name: 'Otp' } }
    /**
     * Find zero or one Otp that matches the filter.
     * @param {OtpFindUniqueArgs} args - Arguments to find a Otp
     * @example
     * // Get one Otp
     * const otp = await prisma.otp.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OtpFindUniqueArgs>(args: SelectSubset<T, OtpFindUniqueArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Otp that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OtpFindUniqueOrThrowArgs} args - Arguments to find a Otp
     * @example
     * // Get one Otp
     * const otp = await prisma.otp.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OtpFindUniqueOrThrowArgs>(args: SelectSubset<T, OtpFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Otp that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpFindFirstArgs} args - Arguments to find a Otp
     * @example
     * // Get one Otp
     * const otp = await prisma.otp.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OtpFindFirstArgs>(args?: SelectSubset<T, OtpFindFirstArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Otp that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpFindFirstOrThrowArgs} args - Arguments to find a Otp
     * @example
     * // Get one Otp
     * const otp = await prisma.otp.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OtpFindFirstOrThrowArgs>(args?: SelectSubset<T, OtpFindFirstOrThrowArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Otps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Otps
     * const otps = await prisma.otp.findMany()
     * 
     * // Get first 10 Otps
     * const otps = await prisma.otp.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const otpWithIdOnly = await prisma.otp.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OtpFindManyArgs>(args?: SelectSubset<T, OtpFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Otp.
     * @param {OtpCreateArgs} args - Arguments to create a Otp.
     * @example
     * // Create one Otp
     * const Otp = await prisma.otp.create({
     *   data: {
     *     // ... data to create a Otp
     *   }
     * })
     * 
     */
    create<T extends OtpCreateArgs>(args: SelectSubset<T, OtpCreateArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Otps.
     * @param {OtpCreateManyArgs} args - Arguments to create many Otps.
     * @example
     * // Create many Otps
     * const otp = await prisma.otp.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OtpCreateManyArgs>(args?: SelectSubset<T, OtpCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Otps and returns the data saved in the database.
     * @param {OtpCreateManyAndReturnArgs} args - Arguments to create many Otps.
     * @example
     * // Create many Otps
     * const otp = await prisma.otp.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Otps and only return the `id`
     * const otpWithIdOnly = await prisma.otp.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OtpCreateManyAndReturnArgs>(args?: SelectSubset<T, OtpCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Otp.
     * @param {OtpDeleteArgs} args - Arguments to delete one Otp.
     * @example
     * // Delete one Otp
     * const Otp = await prisma.otp.delete({
     *   where: {
     *     // ... filter to delete one Otp
     *   }
     * })
     * 
     */
    delete<T extends OtpDeleteArgs>(args: SelectSubset<T, OtpDeleteArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Otp.
     * @param {OtpUpdateArgs} args - Arguments to update one Otp.
     * @example
     * // Update one Otp
     * const otp = await prisma.otp.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OtpUpdateArgs>(args: SelectSubset<T, OtpUpdateArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Otps.
     * @param {OtpDeleteManyArgs} args - Arguments to filter Otps to delete.
     * @example
     * // Delete a few Otps
     * const { count } = await prisma.otp.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OtpDeleteManyArgs>(args?: SelectSubset<T, OtpDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Otps
     * const otp = await prisma.otp.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OtpUpdateManyArgs>(args: SelectSubset<T, OtpUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Otps and returns the data updated in the database.
     * @param {OtpUpdateManyAndReturnArgs} args - Arguments to update many Otps.
     * @example
     * // Update many Otps
     * const otp = await prisma.otp.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Otps and only return the `id`
     * const otpWithIdOnly = await prisma.otp.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OtpUpdateManyAndReturnArgs>(args: SelectSubset<T, OtpUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Otp.
     * @param {OtpUpsertArgs} args - Arguments to update or create a Otp.
     * @example
     * // Update or create a Otp
     * const otp = await prisma.otp.upsert({
     *   create: {
     *     // ... data to create a Otp
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Otp we want to update
     *   }
     * })
     */
    upsert<T extends OtpUpsertArgs>(args: SelectSubset<T, OtpUpsertArgs<ExtArgs>>): Prisma__OtpClient<$Result.GetResult<Prisma.$OtpPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpCountArgs} args - Arguments to filter Otps to count.
     * @example
     * // Count the number of Otps
     * const count = await prisma.otp.count({
     *   where: {
     *     // ... the filter for the Otps we want to count
     *   }
     * })
    **/
    count<T extends OtpCountArgs>(
      args?: Subset<T, OtpCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OtpCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Otp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OtpAggregateArgs>(args: Subset<T, OtpAggregateArgs>): Prisma.PrismaPromise<GetOtpAggregateType<T>>

    /**
     * Group by Otp.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OtpGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OtpGroupByArgs['orderBy'] }
        : { orderBy?: OtpGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OtpGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOtpGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Otp model
   */
  readonly fields: OtpFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Otp.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OtpClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Otp model
   */
  interface OtpFieldRefs {
    readonly id: FieldRef<"Otp", 'Int'>
    readonly email: FieldRef<"Otp", 'String'>
    readonly code: FieldRef<"Otp", 'String'>
    readonly expiresAt: FieldRef<"Otp", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Otp findUnique
   */
  export type OtpFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * Filter, which Otp to fetch.
     */
    where: OtpWhereUniqueInput
  }

  /**
   * Otp findUniqueOrThrow
   */
  export type OtpFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * Filter, which Otp to fetch.
     */
    where: OtpWhereUniqueInput
  }

  /**
   * Otp findFirst
   */
  export type OtpFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * Filter, which Otp to fetch.
     */
    where?: OtpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpOrderByWithRelationInput | OtpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Otps.
     */
    cursor?: OtpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Otps.
     */
    distinct?: OtpScalarFieldEnum | OtpScalarFieldEnum[]
  }

  /**
   * Otp findFirstOrThrow
   */
  export type OtpFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * Filter, which Otp to fetch.
     */
    where?: OtpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpOrderByWithRelationInput | OtpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Otps.
     */
    cursor?: OtpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Otps.
     */
    distinct?: OtpScalarFieldEnum | OtpScalarFieldEnum[]
  }

  /**
   * Otp findMany
   */
  export type OtpFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * Filter, which Otps to fetch.
     */
    where?: OtpWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Otps to fetch.
     */
    orderBy?: OtpOrderByWithRelationInput | OtpOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Otps.
     */
    cursor?: OtpWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Otps.
     */
    skip?: number
    distinct?: OtpScalarFieldEnum | OtpScalarFieldEnum[]
  }

  /**
   * Otp create
   */
  export type OtpCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * The data needed to create a Otp.
     */
    data: XOR<OtpCreateInput, OtpUncheckedCreateInput>
  }

  /**
   * Otp createMany
   */
  export type OtpCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Otps.
     */
    data: OtpCreateManyInput | OtpCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Otp createManyAndReturn
   */
  export type OtpCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * The data used to create many Otps.
     */
    data: OtpCreateManyInput | OtpCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Otp update
   */
  export type OtpUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * The data needed to update a Otp.
     */
    data: XOR<OtpUpdateInput, OtpUncheckedUpdateInput>
    /**
     * Choose, which Otp to update.
     */
    where: OtpWhereUniqueInput
  }

  /**
   * Otp updateMany
   */
  export type OtpUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Otps.
     */
    data: XOR<OtpUpdateManyMutationInput, OtpUncheckedUpdateManyInput>
    /**
     * Filter which Otps to update
     */
    where?: OtpWhereInput
    /**
     * Limit how many Otps to update.
     */
    limit?: number
  }

  /**
   * Otp updateManyAndReturn
   */
  export type OtpUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * The data used to update Otps.
     */
    data: XOR<OtpUpdateManyMutationInput, OtpUncheckedUpdateManyInput>
    /**
     * Filter which Otps to update
     */
    where?: OtpWhereInput
    /**
     * Limit how many Otps to update.
     */
    limit?: number
  }

  /**
   * Otp upsert
   */
  export type OtpUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * The filter to search for the Otp to update in case it exists.
     */
    where: OtpWhereUniqueInput
    /**
     * In case the Otp found by the `where` argument doesn't exist, create a new Otp with this data.
     */
    create: XOR<OtpCreateInput, OtpUncheckedCreateInput>
    /**
     * In case the Otp was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OtpUpdateInput, OtpUncheckedUpdateInput>
  }

  /**
   * Otp delete
   */
  export type OtpDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
    /**
     * Filter which Otp to delete.
     */
    where: OtpWhereUniqueInput
  }

  /**
   * Otp deleteMany
   */
  export type OtpDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Otps to delete
     */
    where?: OtpWhereInput
    /**
     * Limit how many Otps to delete.
     */
    limit?: number
  }

  /**
   * Otp without action
   */
  export type OtpDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Otp
     */
    select?: OtpSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Otp
     */
    omit?: OtpOmit<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    password: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    password: string
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password", ExtArgs["result"]["user"]>

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly username: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
  }


  /**
   * Model Alumno
   */

  export type AggregateAlumno = {
    _count: AlumnoCountAggregateOutputType | null
    _avg: AlumnoAvgAggregateOutputType | null
    _sum: AlumnoSumAggregateOutputType | null
    _min: AlumnoMinAggregateOutputType | null
    _max: AlumnoMaxAggregateOutputType | null
  }

  export type AlumnoAvgAggregateOutputType = {
    id: number | null
  }

  export type AlumnoSumAggregateOutputType = {
    id: number | null
  }

  export type AlumnoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    telefono: string | null
    direccion: string | null
    instrumento: string | null
    detalles_adicionales: string | null
    created_at: Date | null
    updated_at: Date | null
    nombre_tutor: string | null
    telefono_tutor: string | null
    vive_con_padres: boolean | null
  }

  export type AlumnoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    telefono: string | null
    direccion: string | null
    instrumento: string | null
    detalles_adicionales: string | null
    created_at: Date | null
    updated_at: Date | null
    nombre_tutor: string | null
    telefono_tutor: string | null
    vive_con_padres: boolean | null
  }

  export type AlumnoCountAggregateOutputType = {
    id: number
    nombre: number
    apellido: number
    email: number
    telefono: number
    direccion: number
    instrumento: number
    detalles_adicionales: number
    created_at: number
    updated_at: number
    nombre_tutor: number
    telefono_tutor: number
    vive_con_padres: number
    _all: number
  }


  export type AlumnoAvgAggregateInputType = {
    id?: true
  }

  export type AlumnoSumAggregateInputType = {
    id?: true
  }

  export type AlumnoMinAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    telefono?: true
    direccion?: true
    instrumento?: true
    detalles_adicionales?: true
    created_at?: true
    updated_at?: true
    nombre_tutor?: true
    telefono_tutor?: true
    vive_con_padres?: true
  }

  export type AlumnoMaxAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    telefono?: true
    direccion?: true
    instrumento?: true
    detalles_adicionales?: true
    created_at?: true
    updated_at?: true
    nombre_tutor?: true
    telefono_tutor?: true
    vive_con_padres?: true
  }

  export type AlumnoCountAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    telefono?: true
    direccion?: true
    instrumento?: true
    detalles_adicionales?: true
    created_at?: true
    updated_at?: true
    nombre_tutor?: true
    telefono_tutor?: true
    vive_con_padres?: true
    _all?: true
  }

  export type AlumnoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alumno to aggregate.
     */
    where?: AlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alumnos to fetch.
     */
    orderBy?: AlumnoOrderByWithRelationInput | AlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Alumnos
    **/
    _count?: true | AlumnoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlumnoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlumnoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlumnoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlumnoMaxAggregateInputType
  }

  export type GetAlumnoAggregateType<T extends AlumnoAggregateArgs> = {
        [P in keyof T & keyof AggregateAlumno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlumno[P]>
      : GetScalarType<T[P], AggregateAlumno[P]>
  }




  export type AlumnoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlumnoWhereInput
    orderBy?: AlumnoOrderByWithAggregationInput | AlumnoOrderByWithAggregationInput[]
    by: AlumnoScalarFieldEnum[] | AlumnoScalarFieldEnum
    having?: AlumnoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlumnoCountAggregateInputType | true
    _avg?: AlumnoAvgAggregateInputType
    _sum?: AlumnoSumAggregateInputType
    _min?: AlumnoMinAggregateInputType
    _max?: AlumnoMaxAggregateInputType
  }

  export type AlumnoGroupByOutputType = {
    id: number
    nombre: string
    apellido: string
    email: string
    telefono: string | null
    direccion: string | null
    instrumento: string | null
    detalles_adicionales: string | null
    created_at: Date
    updated_at: Date
    nombre_tutor: string | null
    telefono_tutor: string | null
    vive_con_padres: boolean | null
    _count: AlumnoCountAggregateOutputType | null
    _avg: AlumnoAvgAggregateOutputType | null
    _sum: AlumnoSumAggregateOutputType | null
    _min: AlumnoMinAggregateOutputType | null
    _max: AlumnoMaxAggregateOutputType | null
  }

  type GetAlumnoGroupByPayload<T extends AlumnoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlumnoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlumnoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlumnoGroupByOutputType[P]>
            : GetScalarType<T[P], AlumnoGroupByOutputType[P]>
        }
      >
    >


  export type AlumnoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    telefono?: boolean
    direccion?: boolean
    instrumento?: boolean
    detalles_adicionales?: boolean
    created_at?: boolean
    updated_at?: boolean
    nombre_tutor?: boolean
    telefono_tutor?: boolean
    vive_con_padres?: boolean
    Asistencia?: boolean | Alumno$AsistenciaArgs<ExtArgs>
    CalificacionEvaluacion?: boolean | Alumno$CalificacionEvaluacionArgs<ExtArgs>
    CatedraAlumno?: boolean | Alumno$CatedraAlumnoArgs<ExtArgs>
    ComentarioPublicacion?: boolean | Alumno$ComentarioPublicacionArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Alumno$EvaluacionAsignacionArgs<ExtArgs>
    Publicacion?: boolean | Alumno$PublicacionArgs<ExtArgs>
    PublicacionInteraccion?: boolean | Alumno$PublicacionInteraccionArgs<ExtArgs>
    Puntuacion?: boolean | Alumno$PuntuacionArgs<ExtArgs>
    RespuestaAlumno?: boolean | Alumno$RespuestaAlumnoArgs<ExtArgs>
    TareaAsignacion?: boolean | Alumno$TareaAsignacionArgs<ExtArgs>
    _count?: boolean | AlumnoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alumno"]>

  export type AlumnoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    telefono?: boolean
    direccion?: boolean
    instrumento?: boolean
    detalles_adicionales?: boolean
    created_at?: boolean
    updated_at?: boolean
    nombre_tutor?: boolean
    telefono_tutor?: boolean
    vive_con_padres?: boolean
  }, ExtArgs["result"]["alumno"]>

  export type AlumnoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    telefono?: boolean
    direccion?: boolean
    instrumento?: boolean
    detalles_adicionales?: boolean
    created_at?: boolean
    updated_at?: boolean
    nombre_tutor?: boolean
    telefono_tutor?: boolean
    vive_con_padres?: boolean
  }, ExtArgs["result"]["alumno"]>

  export type AlumnoSelectScalar = {
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    telefono?: boolean
    direccion?: boolean
    instrumento?: boolean
    detalles_adicionales?: boolean
    created_at?: boolean
    updated_at?: boolean
    nombre_tutor?: boolean
    telefono_tutor?: boolean
    vive_con_padres?: boolean
  }

  export type AlumnoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "apellido" | "email" | "telefono" | "direccion" | "instrumento" | "detalles_adicionales" | "created_at" | "updated_at" | "nombre_tutor" | "telefono_tutor" | "vive_con_padres", ExtArgs["result"]["alumno"]>
  export type AlumnoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asistencia?: boolean | Alumno$AsistenciaArgs<ExtArgs>
    CalificacionEvaluacion?: boolean | Alumno$CalificacionEvaluacionArgs<ExtArgs>
    CatedraAlumno?: boolean | Alumno$CatedraAlumnoArgs<ExtArgs>
    ComentarioPublicacion?: boolean | Alumno$ComentarioPublicacionArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Alumno$EvaluacionAsignacionArgs<ExtArgs>
    Publicacion?: boolean | Alumno$PublicacionArgs<ExtArgs>
    PublicacionInteraccion?: boolean | Alumno$PublicacionInteraccionArgs<ExtArgs>
    Puntuacion?: boolean | Alumno$PuntuacionArgs<ExtArgs>
    RespuestaAlumno?: boolean | Alumno$RespuestaAlumnoArgs<ExtArgs>
    TareaAsignacion?: boolean | Alumno$TareaAsignacionArgs<ExtArgs>
    _count?: boolean | AlumnoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AlumnoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AlumnoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AlumnoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Alumno"
    objects: {
      Asistencia: Prisma.$AsistenciaPayload<ExtArgs>[]
      CalificacionEvaluacion: Prisma.$CalificacionEvaluacionPayload<ExtArgs>[]
      CatedraAlumno: Prisma.$CatedraAlumnoPayload<ExtArgs>[]
      ComentarioPublicacion: Prisma.$ComentarioPublicacionPayload<ExtArgs>[]
      EvaluacionAsignacion: Prisma.$EvaluacionAsignacionPayload<ExtArgs>[]
      Publicacion: Prisma.$PublicacionPayload<ExtArgs>[]
      PublicacionInteraccion: Prisma.$PublicacionInteraccionPayload<ExtArgs>[]
      Puntuacion: Prisma.$PuntuacionPayload<ExtArgs>[]
      RespuestaAlumno: Prisma.$RespuestaAlumnoPayload<ExtArgs>[]
      TareaAsignacion: Prisma.$TareaAsignacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      apellido: string
      email: string
      telefono: string | null
      direccion: string | null
      instrumento: string | null
      detalles_adicionales: string | null
      created_at: Date
      updated_at: Date
      nombre_tutor: string | null
      telefono_tutor: string | null
      vive_con_padres: boolean | null
    }, ExtArgs["result"]["alumno"]>
    composites: {}
  }

  type AlumnoGetPayload<S extends boolean | null | undefined | AlumnoDefaultArgs> = $Result.GetResult<Prisma.$AlumnoPayload, S>

  type AlumnoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AlumnoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlumnoCountAggregateInputType | true
    }

  export interface AlumnoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Alumno'], meta: { name: 'Alumno' } }
    /**
     * Find zero or one Alumno that matches the filter.
     * @param {AlumnoFindUniqueArgs} args - Arguments to find a Alumno
     * @example
     * // Get one Alumno
     * const alumno = await prisma.alumno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlumnoFindUniqueArgs>(args: SelectSubset<T, AlumnoFindUniqueArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Alumno that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AlumnoFindUniqueOrThrowArgs} args - Arguments to find a Alumno
     * @example
     * // Get one Alumno
     * const alumno = await prisma.alumno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlumnoFindUniqueOrThrowArgs>(args: SelectSubset<T, AlumnoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alumno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumnoFindFirstArgs} args - Arguments to find a Alumno
     * @example
     * // Get one Alumno
     * const alumno = await prisma.alumno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlumnoFindFirstArgs>(args?: SelectSubset<T, AlumnoFindFirstArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alumno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumnoFindFirstOrThrowArgs} args - Arguments to find a Alumno
     * @example
     * // Get one Alumno
     * const alumno = await prisma.alumno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlumnoFindFirstOrThrowArgs>(args?: SelectSubset<T, AlumnoFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Alumnos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumnoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alumnos
     * const alumnos = await prisma.alumno.findMany()
     * 
     * // Get first 10 Alumnos
     * const alumnos = await prisma.alumno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alumnoWithIdOnly = await prisma.alumno.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AlumnoFindManyArgs>(args?: SelectSubset<T, AlumnoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Alumno.
     * @param {AlumnoCreateArgs} args - Arguments to create a Alumno.
     * @example
     * // Create one Alumno
     * const Alumno = await prisma.alumno.create({
     *   data: {
     *     // ... data to create a Alumno
     *   }
     * })
     * 
     */
    create<T extends AlumnoCreateArgs>(args: SelectSubset<T, AlumnoCreateArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Alumnos.
     * @param {AlumnoCreateManyArgs} args - Arguments to create many Alumnos.
     * @example
     * // Create many Alumnos
     * const alumno = await prisma.alumno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlumnoCreateManyArgs>(args?: SelectSubset<T, AlumnoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alumnos and returns the data saved in the database.
     * @param {AlumnoCreateManyAndReturnArgs} args - Arguments to create many Alumnos.
     * @example
     * // Create many Alumnos
     * const alumno = await prisma.alumno.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alumnos and only return the `id`
     * const alumnoWithIdOnly = await prisma.alumno.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AlumnoCreateManyAndReturnArgs>(args?: SelectSubset<T, AlumnoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Alumno.
     * @param {AlumnoDeleteArgs} args - Arguments to delete one Alumno.
     * @example
     * // Delete one Alumno
     * const Alumno = await prisma.alumno.delete({
     *   where: {
     *     // ... filter to delete one Alumno
     *   }
     * })
     * 
     */
    delete<T extends AlumnoDeleteArgs>(args: SelectSubset<T, AlumnoDeleteArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Alumno.
     * @param {AlumnoUpdateArgs} args - Arguments to update one Alumno.
     * @example
     * // Update one Alumno
     * const alumno = await prisma.alumno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlumnoUpdateArgs>(args: SelectSubset<T, AlumnoUpdateArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Alumnos.
     * @param {AlumnoDeleteManyArgs} args - Arguments to filter Alumnos to delete.
     * @example
     * // Delete a few Alumnos
     * const { count } = await prisma.alumno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlumnoDeleteManyArgs>(args?: SelectSubset<T, AlumnoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alumnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumnoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alumnos
     * const alumno = await prisma.alumno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlumnoUpdateManyArgs>(args: SelectSubset<T, AlumnoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alumnos and returns the data updated in the database.
     * @param {AlumnoUpdateManyAndReturnArgs} args - Arguments to update many Alumnos.
     * @example
     * // Update many Alumnos
     * const alumno = await prisma.alumno.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Alumnos and only return the `id`
     * const alumnoWithIdOnly = await prisma.alumno.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AlumnoUpdateManyAndReturnArgs>(args: SelectSubset<T, AlumnoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Alumno.
     * @param {AlumnoUpsertArgs} args - Arguments to update or create a Alumno.
     * @example
     * // Update or create a Alumno
     * const alumno = await prisma.alumno.upsert({
     *   create: {
     *     // ... data to create a Alumno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alumno we want to update
     *   }
     * })
     */
    upsert<T extends AlumnoUpsertArgs>(args: SelectSubset<T, AlumnoUpsertArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Alumnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumnoCountArgs} args - Arguments to filter Alumnos to count.
     * @example
     * // Count the number of Alumnos
     * const count = await prisma.alumno.count({
     *   where: {
     *     // ... the filter for the Alumnos we want to count
     *   }
     * })
    **/
    count<T extends AlumnoCountArgs>(
      args?: Subset<T, AlumnoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlumnoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alumno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumnoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlumnoAggregateArgs>(args: Subset<T, AlumnoAggregateArgs>): Prisma.PrismaPromise<GetAlumnoAggregateType<T>>

    /**
     * Group by Alumno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlumnoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlumnoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlumnoGroupByArgs['orderBy'] }
        : { orderBy?: AlumnoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlumnoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlumnoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Alumno model
   */
  readonly fields: AlumnoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Alumno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlumnoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Asistencia<T extends Alumno$AsistenciaArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$AsistenciaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CalificacionEvaluacion<T extends Alumno$CalificacionEvaluacionArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$CalificacionEvaluacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CatedraAlumno<T extends Alumno$CatedraAlumnoArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$CatedraAlumnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ComentarioPublicacion<T extends Alumno$ComentarioPublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$ComentarioPublicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EvaluacionAsignacion<T extends Alumno$EvaluacionAsignacionArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$EvaluacionAsignacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Publicacion<T extends Alumno$PublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$PublicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PublicacionInteraccion<T extends Alumno$PublicacionInteraccionArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$PublicacionInteraccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Puntuacion<T extends Alumno$PuntuacionArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$PuntuacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    RespuestaAlumno<T extends Alumno$RespuestaAlumnoArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$RespuestaAlumnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TareaAsignacion<T extends Alumno$TareaAsignacionArgs<ExtArgs> = {}>(args?: Subset<T, Alumno$TareaAsignacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Alumno model
   */
  interface AlumnoFieldRefs {
    readonly id: FieldRef<"Alumno", 'Int'>
    readonly nombre: FieldRef<"Alumno", 'String'>
    readonly apellido: FieldRef<"Alumno", 'String'>
    readonly email: FieldRef<"Alumno", 'String'>
    readonly telefono: FieldRef<"Alumno", 'String'>
    readonly direccion: FieldRef<"Alumno", 'String'>
    readonly instrumento: FieldRef<"Alumno", 'String'>
    readonly detalles_adicionales: FieldRef<"Alumno", 'String'>
    readonly created_at: FieldRef<"Alumno", 'DateTime'>
    readonly updated_at: FieldRef<"Alumno", 'DateTime'>
    readonly nombre_tutor: FieldRef<"Alumno", 'String'>
    readonly telefono_tutor: FieldRef<"Alumno", 'String'>
    readonly vive_con_padres: FieldRef<"Alumno", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Alumno findUnique
   */
  export type AlumnoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * Filter, which Alumno to fetch.
     */
    where: AlumnoWhereUniqueInput
  }

  /**
   * Alumno findUniqueOrThrow
   */
  export type AlumnoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * Filter, which Alumno to fetch.
     */
    where: AlumnoWhereUniqueInput
  }

  /**
   * Alumno findFirst
   */
  export type AlumnoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * Filter, which Alumno to fetch.
     */
    where?: AlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alumnos to fetch.
     */
    orderBy?: AlumnoOrderByWithRelationInput | AlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alumnos.
     */
    cursor?: AlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alumnos.
     */
    distinct?: AlumnoScalarFieldEnum | AlumnoScalarFieldEnum[]
  }

  /**
   * Alumno findFirstOrThrow
   */
  export type AlumnoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * Filter, which Alumno to fetch.
     */
    where?: AlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alumnos to fetch.
     */
    orderBy?: AlumnoOrderByWithRelationInput | AlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alumnos.
     */
    cursor?: AlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alumnos.
     */
    distinct?: AlumnoScalarFieldEnum | AlumnoScalarFieldEnum[]
  }

  /**
   * Alumno findMany
   */
  export type AlumnoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * Filter, which Alumnos to fetch.
     */
    where?: AlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alumnos to fetch.
     */
    orderBy?: AlumnoOrderByWithRelationInput | AlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Alumnos.
     */
    cursor?: AlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alumnos.
     */
    skip?: number
    distinct?: AlumnoScalarFieldEnum | AlumnoScalarFieldEnum[]
  }

  /**
   * Alumno create
   */
  export type AlumnoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * The data needed to create a Alumno.
     */
    data: XOR<AlumnoCreateInput, AlumnoUncheckedCreateInput>
  }

  /**
   * Alumno createMany
   */
  export type AlumnoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Alumnos.
     */
    data: AlumnoCreateManyInput | AlumnoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Alumno createManyAndReturn
   */
  export type AlumnoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * The data used to create many Alumnos.
     */
    data: AlumnoCreateManyInput | AlumnoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Alumno update
   */
  export type AlumnoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * The data needed to update a Alumno.
     */
    data: XOR<AlumnoUpdateInput, AlumnoUncheckedUpdateInput>
    /**
     * Choose, which Alumno to update.
     */
    where: AlumnoWhereUniqueInput
  }

  /**
   * Alumno updateMany
   */
  export type AlumnoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Alumnos.
     */
    data: XOR<AlumnoUpdateManyMutationInput, AlumnoUncheckedUpdateManyInput>
    /**
     * Filter which Alumnos to update
     */
    where?: AlumnoWhereInput
    /**
     * Limit how many Alumnos to update.
     */
    limit?: number
  }

  /**
   * Alumno updateManyAndReturn
   */
  export type AlumnoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * The data used to update Alumnos.
     */
    data: XOR<AlumnoUpdateManyMutationInput, AlumnoUncheckedUpdateManyInput>
    /**
     * Filter which Alumnos to update
     */
    where?: AlumnoWhereInput
    /**
     * Limit how many Alumnos to update.
     */
    limit?: number
  }

  /**
   * Alumno upsert
   */
  export type AlumnoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * The filter to search for the Alumno to update in case it exists.
     */
    where: AlumnoWhereUniqueInput
    /**
     * In case the Alumno found by the `where` argument doesn't exist, create a new Alumno with this data.
     */
    create: XOR<AlumnoCreateInput, AlumnoUncheckedCreateInput>
    /**
     * In case the Alumno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlumnoUpdateInput, AlumnoUncheckedUpdateInput>
  }

  /**
   * Alumno delete
   */
  export type AlumnoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    /**
     * Filter which Alumno to delete.
     */
    where: AlumnoWhereUniqueInput
  }

  /**
   * Alumno deleteMany
   */
  export type AlumnoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alumnos to delete
     */
    where?: AlumnoWhereInput
    /**
     * Limit how many Alumnos to delete.
     */
    limit?: number
  }

  /**
   * Alumno.Asistencia
   */
  export type Alumno$AsistenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    where?: AsistenciaWhereInput
    orderBy?: AsistenciaOrderByWithRelationInput | AsistenciaOrderByWithRelationInput[]
    cursor?: AsistenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsistenciaScalarFieldEnum | AsistenciaScalarFieldEnum[]
  }

  /**
   * Alumno.CalificacionEvaluacion
   */
  export type Alumno$CalificacionEvaluacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    where?: CalificacionEvaluacionWhereInput
    orderBy?: CalificacionEvaluacionOrderByWithRelationInput | CalificacionEvaluacionOrderByWithRelationInput[]
    cursor?: CalificacionEvaluacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionEvaluacionScalarFieldEnum | CalificacionEvaluacionScalarFieldEnum[]
  }

  /**
   * Alumno.CatedraAlumno
   */
  export type Alumno$CatedraAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    where?: CatedraAlumnoWhereInput
    orderBy?: CatedraAlumnoOrderByWithRelationInput | CatedraAlumnoOrderByWithRelationInput[]
    cursor?: CatedraAlumnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CatedraAlumnoScalarFieldEnum | CatedraAlumnoScalarFieldEnum[]
  }

  /**
   * Alumno.ComentarioPublicacion
   */
  export type Alumno$ComentarioPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    where?: ComentarioPublicacionWhereInput
    orderBy?: ComentarioPublicacionOrderByWithRelationInput | ComentarioPublicacionOrderByWithRelationInput[]
    cursor?: ComentarioPublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioPublicacionScalarFieldEnum | ComentarioPublicacionScalarFieldEnum[]
  }

  /**
   * Alumno.EvaluacionAsignacion
   */
  export type Alumno$EvaluacionAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    where?: EvaluacionAsignacionWhereInput
    orderBy?: EvaluacionAsignacionOrderByWithRelationInput | EvaluacionAsignacionOrderByWithRelationInput[]
    cursor?: EvaluacionAsignacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluacionAsignacionScalarFieldEnum | EvaluacionAsignacionScalarFieldEnum[]
  }

  /**
   * Alumno.Publicacion
   */
  export type Alumno$PublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    where?: PublicacionWhereInput
    orderBy?: PublicacionOrderByWithRelationInput | PublicacionOrderByWithRelationInput[]
    cursor?: PublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionScalarFieldEnum | PublicacionScalarFieldEnum[]
  }

  /**
   * Alumno.PublicacionInteraccion
   */
  export type Alumno$PublicacionInteraccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    where?: PublicacionInteraccionWhereInput
    orderBy?: PublicacionInteraccionOrderByWithRelationInput | PublicacionInteraccionOrderByWithRelationInput[]
    cursor?: PublicacionInteraccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionInteraccionScalarFieldEnum | PublicacionInteraccionScalarFieldEnum[]
  }

  /**
   * Alumno.Puntuacion
   */
  export type Alumno$PuntuacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    where?: PuntuacionWhereInput
    orderBy?: PuntuacionOrderByWithRelationInput | PuntuacionOrderByWithRelationInput[]
    cursor?: PuntuacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PuntuacionScalarFieldEnum | PuntuacionScalarFieldEnum[]
  }

  /**
   * Alumno.RespuestaAlumno
   */
  export type Alumno$RespuestaAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    where?: RespuestaAlumnoWhereInput
    orderBy?: RespuestaAlumnoOrderByWithRelationInput | RespuestaAlumnoOrderByWithRelationInput[]
    cursor?: RespuestaAlumnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RespuestaAlumnoScalarFieldEnum | RespuestaAlumnoScalarFieldEnum[]
  }

  /**
   * Alumno.TareaAsignacion
   */
  export type Alumno$TareaAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    where?: TareaAsignacionWhereInput
    orderBy?: TareaAsignacionOrderByWithRelationInput | TareaAsignacionOrderByWithRelationInput[]
    cursor?: TareaAsignacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TareaAsignacionScalarFieldEnum | TareaAsignacionScalarFieldEnum[]
  }

  /**
   * Alumno without action
   */
  export type AlumnoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
  }


  /**
   * Model Asistencia
   */

  export type AggregateAsistencia = {
    _count: AsistenciaCountAggregateOutputType | null
    _avg: AsistenciaAvgAggregateOutputType | null
    _sum: AsistenciaSumAggregateOutputType | null
    _min: AsistenciaMinAggregateOutputType | null
    _max: AsistenciaMaxAggregateOutputType | null
  }

  export type AsistenciaAvgAggregateOutputType = {
    id: number | null
    alumnoId: number | null
    diaClaseId: number | null
  }

  export type AsistenciaSumAggregateOutputType = {
    id: number | null
    alumnoId: number | null
    diaClaseId: number | null
  }

  export type AsistenciaMinAggregateOutputType = {
    id: number | null
    presente: boolean | null
    created_at: Date | null
    alumnoId: number | null
    diaClaseId: number | null
  }

  export type AsistenciaMaxAggregateOutputType = {
    id: number | null
    presente: boolean | null
    created_at: Date | null
    alumnoId: number | null
    diaClaseId: number | null
  }

  export type AsistenciaCountAggregateOutputType = {
    id: number
    presente: number
    created_at: number
    alumnoId: number
    diaClaseId: number
    _all: number
  }


  export type AsistenciaAvgAggregateInputType = {
    id?: true
    alumnoId?: true
    diaClaseId?: true
  }

  export type AsistenciaSumAggregateInputType = {
    id?: true
    alumnoId?: true
    diaClaseId?: true
  }

  export type AsistenciaMinAggregateInputType = {
    id?: true
    presente?: true
    created_at?: true
    alumnoId?: true
    diaClaseId?: true
  }

  export type AsistenciaMaxAggregateInputType = {
    id?: true
    presente?: true
    created_at?: true
    alumnoId?: true
    diaClaseId?: true
  }

  export type AsistenciaCountAggregateInputType = {
    id?: true
    presente?: true
    created_at?: true
    alumnoId?: true
    diaClaseId?: true
    _all?: true
  }

  export type AsistenciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Asistencia to aggregate.
     */
    where?: AsistenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asistencias to fetch.
     */
    orderBy?: AsistenciaOrderByWithRelationInput | AsistenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AsistenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asistencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asistencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Asistencias
    **/
    _count?: true | AsistenciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AsistenciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AsistenciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AsistenciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AsistenciaMaxAggregateInputType
  }

  export type GetAsistenciaAggregateType<T extends AsistenciaAggregateArgs> = {
        [P in keyof T & keyof AggregateAsistencia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsistencia[P]>
      : GetScalarType<T[P], AggregateAsistencia[P]>
  }




  export type AsistenciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AsistenciaWhereInput
    orderBy?: AsistenciaOrderByWithAggregationInput | AsistenciaOrderByWithAggregationInput[]
    by: AsistenciaScalarFieldEnum[] | AsistenciaScalarFieldEnum
    having?: AsistenciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AsistenciaCountAggregateInputType | true
    _avg?: AsistenciaAvgAggregateInputType
    _sum?: AsistenciaSumAggregateInputType
    _min?: AsistenciaMinAggregateInputType
    _max?: AsistenciaMaxAggregateInputType
  }

  export type AsistenciaGroupByOutputType = {
    id: number
    presente: boolean
    created_at: Date
    alumnoId: number
    diaClaseId: number
    _count: AsistenciaCountAggregateOutputType | null
    _avg: AsistenciaAvgAggregateOutputType | null
    _sum: AsistenciaSumAggregateOutputType | null
    _min: AsistenciaMinAggregateOutputType | null
    _max: AsistenciaMaxAggregateOutputType | null
  }

  type GetAsistenciaGroupByPayload<T extends AsistenciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AsistenciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AsistenciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AsistenciaGroupByOutputType[P]>
            : GetScalarType<T[P], AsistenciaGroupByOutputType[P]>
        }
      >
    >


  export type AsistenciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presente?: boolean
    created_at?: boolean
    alumnoId?: boolean
    diaClaseId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    DiaClase?: boolean | DiaClaseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asistencia"]>

  export type AsistenciaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presente?: boolean
    created_at?: boolean
    alumnoId?: boolean
    diaClaseId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    DiaClase?: boolean | DiaClaseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asistencia"]>

  export type AsistenciaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    presente?: boolean
    created_at?: boolean
    alumnoId?: boolean
    diaClaseId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    DiaClase?: boolean | DiaClaseDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asistencia"]>

  export type AsistenciaSelectScalar = {
    id?: boolean
    presente?: boolean
    created_at?: boolean
    alumnoId?: boolean
    diaClaseId?: boolean
  }

  export type AsistenciaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "presente" | "created_at" | "alumnoId" | "diaClaseId", ExtArgs["result"]["asistencia"]>
  export type AsistenciaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    DiaClase?: boolean | DiaClaseDefaultArgs<ExtArgs>
  }
  export type AsistenciaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    DiaClase?: boolean | DiaClaseDefaultArgs<ExtArgs>
  }
  export type AsistenciaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    DiaClase?: boolean | DiaClaseDefaultArgs<ExtArgs>
  }

  export type $AsistenciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Asistencia"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs>
      DiaClase: Prisma.$DiaClasePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      presente: boolean
      created_at: Date
      alumnoId: number
      diaClaseId: number
    }, ExtArgs["result"]["asistencia"]>
    composites: {}
  }

  type AsistenciaGetPayload<S extends boolean | null | undefined | AsistenciaDefaultArgs> = $Result.GetResult<Prisma.$AsistenciaPayload, S>

  type AsistenciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AsistenciaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AsistenciaCountAggregateInputType | true
    }

  export interface AsistenciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Asistencia'], meta: { name: 'Asistencia' } }
    /**
     * Find zero or one Asistencia that matches the filter.
     * @param {AsistenciaFindUniqueArgs} args - Arguments to find a Asistencia
     * @example
     * // Get one Asistencia
     * const asistencia = await prisma.asistencia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AsistenciaFindUniqueArgs>(args: SelectSubset<T, AsistenciaFindUniqueArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Asistencia that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AsistenciaFindUniqueOrThrowArgs} args - Arguments to find a Asistencia
     * @example
     * // Get one Asistencia
     * const asistencia = await prisma.asistencia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AsistenciaFindUniqueOrThrowArgs>(args: SelectSubset<T, AsistenciaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asistencia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsistenciaFindFirstArgs} args - Arguments to find a Asistencia
     * @example
     * // Get one Asistencia
     * const asistencia = await prisma.asistencia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AsistenciaFindFirstArgs>(args?: SelectSubset<T, AsistenciaFindFirstArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asistencia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsistenciaFindFirstOrThrowArgs} args - Arguments to find a Asistencia
     * @example
     * // Get one Asistencia
     * const asistencia = await prisma.asistencia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AsistenciaFindFirstOrThrowArgs>(args?: SelectSubset<T, AsistenciaFindFirstOrThrowArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Asistencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsistenciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Asistencias
     * const asistencias = await prisma.asistencia.findMany()
     * 
     * // Get first 10 Asistencias
     * const asistencias = await prisma.asistencia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const asistenciaWithIdOnly = await prisma.asistencia.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AsistenciaFindManyArgs>(args?: SelectSubset<T, AsistenciaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Asistencia.
     * @param {AsistenciaCreateArgs} args - Arguments to create a Asistencia.
     * @example
     * // Create one Asistencia
     * const Asistencia = await prisma.asistencia.create({
     *   data: {
     *     // ... data to create a Asistencia
     *   }
     * })
     * 
     */
    create<T extends AsistenciaCreateArgs>(args: SelectSubset<T, AsistenciaCreateArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Asistencias.
     * @param {AsistenciaCreateManyArgs} args - Arguments to create many Asistencias.
     * @example
     * // Create many Asistencias
     * const asistencia = await prisma.asistencia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AsistenciaCreateManyArgs>(args?: SelectSubset<T, AsistenciaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Asistencias and returns the data saved in the database.
     * @param {AsistenciaCreateManyAndReturnArgs} args - Arguments to create many Asistencias.
     * @example
     * // Create many Asistencias
     * const asistencia = await prisma.asistencia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Asistencias and only return the `id`
     * const asistenciaWithIdOnly = await prisma.asistencia.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AsistenciaCreateManyAndReturnArgs>(args?: SelectSubset<T, AsistenciaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Asistencia.
     * @param {AsistenciaDeleteArgs} args - Arguments to delete one Asistencia.
     * @example
     * // Delete one Asistencia
     * const Asistencia = await prisma.asistencia.delete({
     *   where: {
     *     // ... filter to delete one Asistencia
     *   }
     * })
     * 
     */
    delete<T extends AsistenciaDeleteArgs>(args: SelectSubset<T, AsistenciaDeleteArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Asistencia.
     * @param {AsistenciaUpdateArgs} args - Arguments to update one Asistencia.
     * @example
     * // Update one Asistencia
     * const asistencia = await prisma.asistencia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AsistenciaUpdateArgs>(args: SelectSubset<T, AsistenciaUpdateArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Asistencias.
     * @param {AsistenciaDeleteManyArgs} args - Arguments to filter Asistencias to delete.
     * @example
     * // Delete a few Asistencias
     * const { count } = await prisma.asistencia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AsistenciaDeleteManyArgs>(args?: SelectSubset<T, AsistenciaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asistencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsistenciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Asistencias
     * const asistencia = await prisma.asistencia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AsistenciaUpdateManyArgs>(args: SelectSubset<T, AsistenciaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Asistencias and returns the data updated in the database.
     * @param {AsistenciaUpdateManyAndReturnArgs} args - Arguments to update many Asistencias.
     * @example
     * // Update many Asistencias
     * const asistencia = await prisma.asistencia.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Asistencias and only return the `id`
     * const asistenciaWithIdOnly = await prisma.asistencia.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AsistenciaUpdateManyAndReturnArgs>(args: SelectSubset<T, AsistenciaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Asistencia.
     * @param {AsistenciaUpsertArgs} args - Arguments to update or create a Asistencia.
     * @example
     * // Update or create a Asistencia
     * const asistencia = await prisma.asistencia.upsert({
     *   create: {
     *     // ... data to create a Asistencia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Asistencia we want to update
     *   }
     * })
     */
    upsert<T extends AsistenciaUpsertArgs>(args: SelectSubset<T, AsistenciaUpsertArgs<ExtArgs>>): Prisma__AsistenciaClient<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Asistencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsistenciaCountArgs} args - Arguments to filter Asistencias to count.
     * @example
     * // Count the number of Asistencias
     * const count = await prisma.asistencia.count({
     *   where: {
     *     // ... the filter for the Asistencias we want to count
     *   }
     * })
    **/
    count<T extends AsistenciaCountArgs>(
      args?: Subset<T, AsistenciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AsistenciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Asistencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsistenciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AsistenciaAggregateArgs>(args: Subset<T, AsistenciaAggregateArgs>): Prisma.PrismaPromise<GetAsistenciaAggregateType<T>>

    /**
     * Group by Asistencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AsistenciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AsistenciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AsistenciaGroupByArgs['orderBy'] }
        : { orderBy?: AsistenciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AsistenciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAsistenciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Asistencia model
   */
  readonly fields: AsistenciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Asistencia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AsistenciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends AlumnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlumnoDefaultArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    DiaClase<T extends DiaClaseDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DiaClaseDefaultArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Asistencia model
   */
  interface AsistenciaFieldRefs {
    readonly id: FieldRef<"Asistencia", 'Int'>
    readonly presente: FieldRef<"Asistencia", 'Boolean'>
    readonly created_at: FieldRef<"Asistencia", 'DateTime'>
    readonly alumnoId: FieldRef<"Asistencia", 'Int'>
    readonly diaClaseId: FieldRef<"Asistencia", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Asistencia findUnique
   */
  export type AsistenciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * Filter, which Asistencia to fetch.
     */
    where: AsistenciaWhereUniqueInput
  }

  /**
   * Asistencia findUniqueOrThrow
   */
  export type AsistenciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * Filter, which Asistencia to fetch.
     */
    where: AsistenciaWhereUniqueInput
  }

  /**
   * Asistencia findFirst
   */
  export type AsistenciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * Filter, which Asistencia to fetch.
     */
    where?: AsistenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asistencias to fetch.
     */
    orderBy?: AsistenciaOrderByWithRelationInput | AsistenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Asistencias.
     */
    cursor?: AsistenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asistencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asistencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Asistencias.
     */
    distinct?: AsistenciaScalarFieldEnum | AsistenciaScalarFieldEnum[]
  }

  /**
   * Asistencia findFirstOrThrow
   */
  export type AsistenciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * Filter, which Asistencia to fetch.
     */
    where?: AsistenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asistencias to fetch.
     */
    orderBy?: AsistenciaOrderByWithRelationInput | AsistenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Asistencias.
     */
    cursor?: AsistenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asistencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asistencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Asistencias.
     */
    distinct?: AsistenciaScalarFieldEnum | AsistenciaScalarFieldEnum[]
  }

  /**
   * Asistencia findMany
   */
  export type AsistenciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * Filter, which Asistencias to fetch.
     */
    where?: AsistenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Asistencias to fetch.
     */
    orderBy?: AsistenciaOrderByWithRelationInput | AsistenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Asistencias.
     */
    cursor?: AsistenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Asistencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Asistencias.
     */
    skip?: number
    distinct?: AsistenciaScalarFieldEnum | AsistenciaScalarFieldEnum[]
  }

  /**
   * Asistencia create
   */
  export type AsistenciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * The data needed to create a Asistencia.
     */
    data: XOR<AsistenciaCreateInput, AsistenciaUncheckedCreateInput>
  }

  /**
   * Asistencia createMany
   */
  export type AsistenciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Asistencias.
     */
    data: AsistenciaCreateManyInput | AsistenciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Asistencia createManyAndReturn
   */
  export type AsistenciaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * The data used to create many Asistencias.
     */
    data: AsistenciaCreateManyInput | AsistenciaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Asistencia update
   */
  export type AsistenciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * The data needed to update a Asistencia.
     */
    data: XOR<AsistenciaUpdateInput, AsistenciaUncheckedUpdateInput>
    /**
     * Choose, which Asistencia to update.
     */
    where: AsistenciaWhereUniqueInput
  }

  /**
   * Asistencia updateMany
   */
  export type AsistenciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Asistencias.
     */
    data: XOR<AsistenciaUpdateManyMutationInput, AsistenciaUncheckedUpdateManyInput>
    /**
     * Filter which Asistencias to update
     */
    where?: AsistenciaWhereInput
    /**
     * Limit how many Asistencias to update.
     */
    limit?: number
  }

  /**
   * Asistencia updateManyAndReturn
   */
  export type AsistenciaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * The data used to update Asistencias.
     */
    data: XOR<AsistenciaUpdateManyMutationInput, AsistenciaUncheckedUpdateManyInput>
    /**
     * Filter which Asistencias to update
     */
    where?: AsistenciaWhereInput
    /**
     * Limit how many Asistencias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Asistencia upsert
   */
  export type AsistenciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * The filter to search for the Asistencia to update in case it exists.
     */
    where: AsistenciaWhereUniqueInput
    /**
     * In case the Asistencia found by the `where` argument doesn't exist, create a new Asistencia with this data.
     */
    create: XOR<AsistenciaCreateInput, AsistenciaUncheckedCreateInput>
    /**
     * In case the Asistencia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AsistenciaUpdateInput, AsistenciaUncheckedUpdateInput>
  }

  /**
   * Asistencia delete
   */
  export type AsistenciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    /**
     * Filter which Asistencia to delete.
     */
    where: AsistenciaWhereUniqueInput
  }

  /**
   * Asistencia deleteMany
   */
  export type AsistenciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Asistencias to delete
     */
    where?: AsistenciaWhereInput
    /**
     * Limit how many Asistencias to delete.
     */
    limit?: number
  }

  /**
   * Asistencia without action
   */
  export type AsistenciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
  }


  /**
   * Model CalificacionEvaluacion
   */

  export type AggregateCalificacionEvaluacion = {
    _count: CalificacionEvaluacionCountAggregateOutputType | null
    _avg: CalificacionEvaluacionAvgAggregateOutputType | null
    _sum: CalificacionEvaluacionSumAggregateOutputType | null
    _min: CalificacionEvaluacionMinAggregateOutputType | null
    _max: CalificacionEvaluacionMaxAggregateOutputType | null
  }

  export type CalificacionEvaluacionAvgAggregateOutputType = {
    id: number | null
    puntos: number | null
    alumnoId: number | null
    evaluacionAsignacionId: number | null
  }

  export type CalificacionEvaluacionSumAggregateOutputType = {
    id: number | null
    puntos: number | null
    alumnoId: number | null
    evaluacionAsignacionId: number | null
  }

  export type CalificacionEvaluacionMinAggregateOutputType = {
    id: number | null
    puntos: number | null
    created_at: Date | null
    alumnoId: number | null
    evaluacionAsignacionId: number | null
  }

  export type CalificacionEvaluacionMaxAggregateOutputType = {
    id: number | null
    puntos: number | null
    created_at: Date | null
    alumnoId: number | null
    evaluacionAsignacionId: number | null
  }

  export type CalificacionEvaluacionCountAggregateOutputType = {
    id: number
    puntos: number
    created_at: number
    alumnoId: number
    evaluacionAsignacionId: number
    _all: number
  }


  export type CalificacionEvaluacionAvgAggregateInputType = {
    id?: true
    puntos?: true
    alumnoId?: true
    evaluacionAsignacionId?: true
  }

  export type CalificacionEvaluacionSumAggregateInputType = {
    id?: true
    puntos?: true
    alumnoId?: true
    evaluacionAsignacionId?: true
  }

  export type CalificacionEvaluacionMinAggregateInputType = {
    id?: true
    puntos?: true
    created_at?: true
    alumnoId?: true
    evaluacionAsignacionId?: true
  }

  export type CalificacionEvaluacionMaxAggregateInputType = {
    id?: true
    puntos?: true
    created_at?: true
    alumnoId?: true
    evaluacionAsignacionId?: true
  }

  export type CalificacionEvaluacionCountAggregateInputType = {
    id?: true
    puntos?: true
    created_at?: true
    alumnoId?: true
    evaluacionAsignacionId?: true
    _all?: true
  }

  export type CalificacionEvaluacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalificacionEvaluacion to aggregate.
     */
    where?: CalificacionEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionEvaluacions to fetch.
     */
    orderBy?: CalificacionEvaluacionOrderByWithRelationInput | CalificacionEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CalificacionEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CalificacionEvaluacions
    **/
    _count?: true | CalificacionEvaluacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CalificacionEvaluacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CalificacionEvaluacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalificacionEvaluacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalificacionEvaluacionMaxAggregateInputType
  }

  export type GetCalificacionEvaluacionAggregateType<T extends CalificacionEvaluacionAggregateArgs> = {
        [P in keyof T & keyof AggregateCalificacionEvaluacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalificacionEvaluacion[P]>
      : GetScalarType<T[P], AggregateCalificacionEvaluacion[P]>
  }




  export type CalificacionEvaluacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionEvaluacionWhereInput
    orderBy?: CalificacionEvaluacionOrderByWithAggregationInput | CalificacionEvaluacionOrderByWithAggregationInput[]
    by: CalificacionEvaluacionScalarFieldEnum[] | CalificacionEvaluacionScalarFieldEnum
    having?: CalificacionEvaluacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalificacionEvaluacionCountAggregateInputType | true
    _avg?: CalificacionEvaluacionAvgAggregateInputType
    _sum?: CalificacionEvaluacionSumAggregateInputType
    _min?: CalificacionEvaluacionMinAggregateInputType
    _max?: CalificacionEvaluacionMaxAggregateInputType
  }

  export type CalificacionEvaluacionGroupByOutputType = {
    id: number
    puntos: number
    created_at: Date
    alumnoId: number
    evaluacionAsignacionId: number
    _count: CalificacionEvaluacionCountAggregateOutputType | null
    _avg: CalificacionEvaluacionAvgAggregateOutputType | null
    _sum: CalificacionEvaluacionSumAggregateOutputType | null
    _min: CalificacionEvaluacionMinAggregateOutputType | null
    _max: CalificacionEvaluacionMaxAggregateOutputType | null
  }

  type GetCalificacionEvaluacionGroupByPayload<T extends CalificacionEvaluacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalificacionEvaluacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalificacionEvaluacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalificacionEvaluacionGroupByOutputType[P]>
            : GetScalarType<T[P], CalificacionEvaluacionGroupByOutputType[P]>
        }
      >
    >


  export type CalificacionEvaluacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    puntos?: boolean
    created_at?: boolean
    alumnoId?: boolean
    evaluacionAsignacionId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | EvaluacionAsignacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionEvaluacion"]>

  export type CalificacionEvaluacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    puntos?: boolean
    created_at?: boolean
    alumnoId?: boolean
    evaluacionAsignacionId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | EvaluacionAsignacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionEvaluacion"]>

  export type CalificacionEvaluacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    puntos?: boolean
    created_at?: boolean
    alumnoId?: boolean
    evaluacionAsignacionId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | EvaluacionAsignacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificacionEvaluacion"]>

  export type CalificacionEvaluacionSelectScalar = {
    id?: boolean
    puntos?: boolean
    created_at?: boolean
    alumnoId?: boolean
    evaluacionAsignacionId?: boolean
  }

  export type CalificacionEvaluacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "puntos" | "created_at" | "alumnoId" | "evaluacionAsignacionId", ExtArgs["result"]["calificacionEvaluacion"]>
  export type CalificacionEvaluacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | EvaluacionAsignacionDefaultArgs<ExtArgs>
  }
  export type CalificacionEvaluacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | EvaluacionAsignacionDefaultArgs<ExtArgs>
  }
  export type CalificacionEvaluacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | EvaluacionAsignacionDefaultArgs<ExtArgs>
  }

  export type $CalificacionEvaluacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CalificacionEvaluacion"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs>
      EvaluacionAsignacion: Prisma.$EvaluacionAsignacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      puntos: number
      created_at: Date
      alumnoId: number
      evaluacionAsignacionId: number
    }, ExtArgs["result"]["calificacionEvaluacion"]>
    composites: {}
  }

  type CalificacionEvaluacionGetPayload<S extends boolean | null | undefined | CalificacionEvaluacionDefaultArgs> = $Result.GetResult<Prisma.$CalificacionEvaluacionPayload, S>

  type CalificacionEvaluacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CalificacionEvaluacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalificacionEvaluacionCountAggregateInputType | true
    }

  export interface CalificacionEvaluacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CalificacionEvaluacion'], meta: { name: 'CalificacionEvaluacion' } }
    /**
     * Find zero or one CalificacionEvaluacion that matches the filter.
     * @param {CalificacionEvaluacionFindUniqueArgs} args - Arguments to find a CalificacionEvaluacion
     * @example
     * // Get one CalificacionEvaluacion
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CalificacionEvaluacionFindUniqueArgs>(args: SelectSubset<T, CalificacionEvaluacionFindUniqueArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CalificacionEvaluacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CalificacionEvaluacionFindUniqueOrThrowArgs} args - Arguments to find a CalificacionEvaluacion
     * @example
     * // Get one CalificacionEvaluacion
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CalificacionEvaluacionFindUniqueOrThrowArgs>(args: SelectSubset<T, CalificacionEvaluacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalificacionEvaluacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionEvaluacionFindFirstArgs} args - Arguments to find a CalificacionEvaluacion
     * @example
     * // Get one CalificacionEvaluacion
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CalificacionEvaluacionFindFirstArgs>(args?: SelectSubset<T, CalificacionEvaluacionFindFirstArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CalificacionEvaluacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionEvaluacionFindFirstOrThrowArgs} args - Arguments to find a CalificacionEvaluacion
     * @example
     * // Get one CalificacionEvaluacion
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CalificacionEvaluacionFindFirstOrThrowArgs>(args?: SelectSubset<T, CalificacionEvaluacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CalificacionEvaluacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionEvaluacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CalificacionEvaluacions
     * const calificacionEvaluacions = await prisma.calificacionEvaluacion.findMany()
     * 
     * // Get first 10 CalificacionEvaluacions
     * const calificacionEvaluacions = await prisma.calificacionEvaluacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const calificacionEvaluacionWithIdOnly = await prisma.calificacionEvaluacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CalificacionEvaluacionFindManyArgs>(args?: SelectSubset<T, CalificacionEvaluacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CalificacionEvaluacion.
     * @param {CalificacionEvaluacionCreateArgs} args - Arguments to create a CalificacionEvaluacion.
     * @example
     * // Create one CalificacionEvaluacion
     * const CalificacionEvaluacion = await prisma.calificacionEvaluacion.create({
     *   data: {
     *     // ... data to create a CalificacionEvaluacion
     *   }
     * })
     * 
     */
    create<T extends CalificacionEvaluacionCreateArgs>(args: SelectSubset<T, CalificacionEvaluacionCreateArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CalificacionEvaluacions.
     * @param {CalificacionEvaluacionCreateManyArgs} args - Arguments to create many CalificacionEvaluacions.
     * @example
     * // Create many CalificacionEvaluacions
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CalificacionEvaluacionCreateManyArgs>(args?: SelectSubset<T, CalificacionEvaluacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CalificacionEvaluacions and returns the data saved in the database.
     * @param {CalificacionEvaluacionCreateManyAndReturnArgs} args - Arguments to create many CalificacionEvaluacions.
     * @example
     * // Create many CalificacionEvaluacions
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CalificacionEvaluacions and only return the `id`
     * const calificacionEvaluacionWithIdOnly = await prisma.calificacionEvaluacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CalificacionEvaluacionCreateManyAndReturnArgs>(args?: SelectSubset<T, CalificacionEvaluacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CalificacionEvaluacion.
     * @param {CalificacionEvaluacionDeleteArgs} args - Arguments to delete one CalificacionEvaluacion.
     * @example
     * // Delete one CalificacionEvaluacion
     * const CalificacionEvaluacion = await prisma.calificacionEvaluacion.delete({
     *   where: {
     *     // ... filter to delete one CalificacionEvaluacion
     *   }
     * })
     * 
     */
    delete<T extends CalificacionEvaluacionDeleteArgs>(args: SelectSubset<T, CalificacionEvaluacionDeleteArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CalificacionEvaluacion.
     * @param {CalificacionEvaluacionUpdateArgs} args - Arguments to update one CalificacionEvaluacion.
     * @example
     * // Update one CalificacionEvaluacion
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CalificacionEvaluacionUpdateArgs>(args: SelectSubset<T, CalificacionEvaluacionUpdateArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CalificacionEvaluacions.
     * @param {CalificacionEvaluacionDeleteManyArgs} args - Arguments to filter CalificacionEvaluacions to delete.
     * @example
     * // Delete a few CalificacionEvaluacions
     * const { count } = await prisma.calificacionEvaluacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CalificacionEvaluacionDeleteManyArgs>(args?: SelectSubset<T, CalificacionEvaluacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalificacionEvaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionEvaluacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CalificacionEvaluacions
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CalificacionEvaluacionUpdateManyArgs>(args: SelectSubset<T, CalificacionEvaluacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CalificacionEvaluacions and returns the data updated in the database.
     * @param {CalificacionEvaluacionUpdateManyAndReturnArgs} args - Arguments to update many CalificacionEvaluacions.
     * @example
     * // Update many CalificacionEvaluacions
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CalificacionEvaluacions and only return the `id`
     * const calificacionEvaluacionWithIdOnly = await prisma.calificacionEvaluacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CalificacionEvaluacionUpdateManyAndReturnArgs>(args: SelectSubset<T, CalificacionEvaluacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CalificacionEvaluacion.
     * @param {CalificacionEvaluacionUpsertArgs} args - Arguments to update or create a CalificacionEvaluacion.
     * @example
     * // Update or create a CalificacionEvaluacion
     * const calificacionEvaluacion = await prisma.calificacionEvaluacion.upsert({
     *   create: {
     *     // ... data to create a CalificacionEvaluacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CalificacionEvaluacion we want to update
     *   }
     * })
     */
    upsert<T extends CalificacionEvaluacionUpsertArgs>(args: SelectSubset<T, CalificacionEvaluacionUpsertArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CalificacionEvaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionEvaluacionCountArgs} args - Arguments to filter CalificacionEvaluacions to count.
     * @example
     * // Count the number of CalificacionEvaluacions
     * const count = await prisma.calificacionEvaluacion.count({
     *   where: {
     *     // ... the filter for the CalificacionEvaluacions we want to count
     *   }
     * })
    **/
    count<T extends CalificacionEvaluacionCountArgs>(
      args?: Subset<T, CalificacionEvaluacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalificacionEvaluacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CalificacionEvaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionEvaluacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalificacionEvaluacionAggregateArgs>(args: Subset<T, CalificacionEvaluacionAggregateArgs>): Prisma.PrismaPromise<GetCalificacionEvaluacionAggregateType<T>>

    /**
     * Group by CalificacionEvaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionEvaluacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CalificacionEvaluacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CalificacionEvaluacionGroupByArgs['orderBy'] }
        : { orderBy?: CalificacionEvaluacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CalificacionEvaluacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalificacionEvaluacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CalificacionEvaluacion model
   */
  readonly fields: CalificacionEvaluacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CalificacionEvaluacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CalificacionEvaluacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends AlumnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlumnoDefaultArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EvaluacionAsignacion<T extends EvaluacionAsignacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EvaluacionAsignacionDefaultArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CalificacionEvaluacion model
   */
  interface CalificacionEvaluacionFieldRefs {
    readonly id: FieldRef<"CalificacionEvaluacion", 'Int'>
    readonly puntos: FieldRef<"CalificacionEvaluacion", 'Int'>
    readonly created_at: FieldRef<"CalificacionEvaluacion", 'DateTime'>
    readonly alumnoId: FieldRef<"CalificacionEvaluacion", 'Int'>
    readonly evaluacionAsignacionId: FieldRef<"CalificacionEvaluacion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CalificacionEvaluacion findUnique
   */
  export type CalificacionEvaluacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionEvaluacion to fetch.
     */
    where: CalificacionEvaluacionWhereUniqueInput
  }

  /**
   * CalificacionEvaluacion findUniqueOrThrow
   */
  export type CalificacionEvaluacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionEvaluacion to fetch.
     */
    where: CalificacionEvaluacionWhereUniqueInput
  }

  /**
   * CalificacionEvaluacion findFirst
   */
  export type CalificacionEvaluacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionEvaluacion to fetch.
     */
    where?: CalificacionEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionEvaluacions to fetch.
     */
    orderBy?: CalificacionEvaluacionOrderByWithRelationInput | CalificacionEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalificacionEvaluacions.
     */
    cursor?: CalificacionEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalificacionEvaluacions.
     */
    distinct?: CalificacionEvaluacionScalarFieldEnum | CalificacionEvaluacionScalarFieldEnum[]
  }

  /**
   * CalificacionEvaluacion findFirstOrThrow
   */
  export type CalificacionEvaluacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionEvaluacion to fetch.
     */
    where?: CalificacionEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionEvaluacions to fetch.
     */
    orderBy?: CalificacionEvaluacionOrderByWithRelationInput | CalificacionEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CalificacionEvaluacions.
     */
    cursor?: CalificacionEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CalificacionEvaluacions.
     */
    distinct?: CalificacionEvaluacionScalarFieldEnum | CalificacionEvaluacionScalarFieldEnum[]
  }

  /**
   * CalificacionEvaluacion findMany
   */
  export type CalificacionEvaluacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which CalificacionEvaluacions to fetch.
     */
    where?: CalificacionEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CalificacionEvaluacions to fetch.
     */
    orderBy?: CalificacionEvaluacionOrderByWithRelationInput | CalificacionEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CalificacionEvaluacions.
     */
    cursor?: CalificacionEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CalificacionEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CalificacionEvaluacions.
     */
    skip?: number
    distinct?: CalificacionEvaluacionScalarFieldEnum | CalificacionEvaluacionScalarFieldEnum[]
  }

  /**
   * CalificacionEvaluacion create
   */
  export type CalificacionEvaluacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to create a CalificacionEvaluacion.
     */
    data: XOR<CalificacionEvaluacionCreateInput, CalificacionEvaluacionUncheckedCreateInput>
  }

  /**
   * CalificacionEvaluacion createMany
   */
  export type CalificacionEvaluacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CalificacionEvaluacions.
     */
    data: CalificacionEvaluacionCreateManyInput | CalificacionEvaluacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CalificacionEvaluacion createManyAndReturn
   */
  export type CalificacionEvaluacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * The data used to create many CalificacionEvaluacions.
     */
    data: CalificacionEvaluacionCreateManyInput | CalificacionEvaluacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalificacionEvaluacion update
   */
  export type CalificacionEvaluacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to update a CalificacionEvaluacion.
     */
    data: XOR<CalificacionEvaluacionUpdateInput, CalificacionEvaluacionUncheckedUpdateInput>
    /**
     * Choose, which CalificacionEvaluacion to update.
     */
    where: CalificacionEvaluacionWhereUniqueInput
  }

  /**
   * CalificacionEvaluacion updateMany
   */
  export type CalificacionEvaluacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CalificacionEvaluacions.
     */
    data: XOR<CalificacionEvaluacionUpdateManyMutationInput, CalificacionEvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which CalificacionEvaluacions to update
     */
    where?: CalificacionEvaluacionWhereInput
    /**
     * Limit how many CalificacionEvaluacions to update.
     */
    limit?: number
  }

  /**
   * CalificacionEvaluacion updateManyAndReturn
   */
  export type CalificacionEvaluacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * The data used to update CalificacionEvaluacions.
     */
    data: XOR<CalificacionEvaluacionUpdateManyMutationInput, CalificacionEvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which CalificacionEvaluacions to update
     */
    where?: CalificacionEvaluacionWhereInput
    /**
     * Limit how many CalificacionEvaluacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CalificacionEvaluacion upsert
   */
  export type CalificacionEvaluacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * The filter to search for the CalificacionEvaluacion to update in case it exists.
     */
    where: CalificacionEvaluacionWhereUniqueInput
    /**
     * In case the CalificacionEvaluacion found by the `where` argument doesn't exist, create a new CalificacionEvaluacion with this data.
     */
    create: XOR<CalificacionEvaluacionCreateInput, CalificacionEvaluacionUncheckedCreateInput>
    /**
     * In case the CalificacionEvaluacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CalificacionEvaluacionUpdateInput, CalificacionEvaluacionUncheckedUpdateInput>
  }

  /**
   * CalificacionEvaluacion delete
   */
  export type CalificacionEvaluacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    /**
     * Filter which CalificacionEvaluacion to delete.
     */
    where: CalificacionEvaluacionWhereUniqueInput
  }

  /**
   * CalificacionEvaluacion deleteMany
   */
  export type CalificacionEvaluacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CalificacionEvaluacions to delete
     */
    where?: CalificacionEvaluacionWhereInput
    /**
     * Limit how many CalificacionEvaluacions to delete.
     */
    limit?: number
  }

  /**
   * CalificacionEvaluacion without action
   */
  export type CalificacionEvaluacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
  }


  /**
   * Model Catedra
   */

  export type AggregateCatedra = {
    _count: CatedraCountAggregateOutputType | null
    _avg: CatedraAvgAggregateOutputType | null
    _sum: CatedraSumAggregateOutputType | null
    _min: CatedraMinAggregateOutputType | null
    _max: CatedraMaxAggregateOutputType | null
  }

  export type CatedraAvgAggregateOutputType = {
    id: number | null
    anio: number | null
    docenteId: number | null
  }

  export type CatedraSumAggregateOutputType = {
    id: number | null
    anio: number | null
    docenteId: number | null
  }

  export type CatedraMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    anio: number | null
    institucion: string | null
    turno: string | null
    aula: string | null
    dias: string | null
    created_at: Date | null
    updated_at: Date | null
    docenteId: number | null
    modalidad_pago: $Enums.ModalidadPago | null
  }

  export type CatedraMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    anio: number | null
    institucion: string | null
    turno: string | null
    aula: string | null
    dias: string | null
    created_at: Date | null
    updated_at: Date | null
    docenteId: number | null
    modalidad_pago: $Enums.ModalidadPago | null
  }

  export type CatedraCountAggregateOutputType = {
    id: number
    nombre: number
    anio: number
    institucion: number
    turno: number
    aula: number
    dias: number
    created_at: number
    updated_at: number
    docenteId: number
    modalidad_pago: number
    _all: number
  }


  export type CatedraAvgAggregateInputType = {
    id?: true
    anio?: true
    docenteId?: true
  }

  export type CatedraSumAggregateInputType = {
    id?: true
    anio?: true
    docenteId?: true
  }

  export type CatedraMinAggregateInputType = {
    id?: true
    nombre?: true
    anio?: true
    institucion?: true
    turno?: true
    aula?: true
    dias?: true
    created_at?: true
    updated_at?: true
    docenteId?: true
    modalidad_pago?: true
  }

  export type CatedraMaxAggregateInputType = {
    id?: true
    nombre?: true
    anio?: true
    institucion?: true
    turno?: true
    aula?: true
    dias?: true
    created_at?: true
    updated_at?: true
    docenteId?: true
    modalidad_pago?: true
  }

  export type CatedraCountAggregateInputType = {
    id?: true
    nombre?: true
    anio?: true
    institucion?: true
    turno?: true
    aula?: true
    dias?: true
    created_at?: true
    updated_at?: true
    docenteId?: true
    modalidad_pago?: true
    _all?: true
  }

  export type CatedraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Catedra to aggregate.
     */
    where?: CatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Catedras to fetch.
     */
    orderBy?: CatedraOrderByWithRelationInput | CatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Catedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Catedras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Catedras
    **/
    _count?: true | CatedraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CatedraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CatedraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CatedraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CatedraMaxAggregateInputType
  }

  export type GetCatedraAggregateType<T extends CatedraAggregateArgs> = {
        [P in keyof T & keyof AggregateCatedra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCatedra[P]>
      : GetScalarType<T[P], AggregateCatedra[P]>
  }




  export type CatedraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraWhereInput
    orderBy?: CatedraOrderByWithAggregationInput | CatedraOrderByWithAggregationInput[]
    by: CatedraScalarFieldEnum[] | CatedraScalarFieldEnum
    having?: CatedraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CatedraCountAggregateInputType | true
    _avg?: CatedraAvgAggregateInputType
    _sum?: CatedraSumAggregateInputType
    _min?: CatedraMinAggregateInputType
    _max?: CatedraMaxAggregateInputType
  }

  export type CatedraGroupByOutputType = {
    id: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at: Date
    updated_at: Date
    docenteId: number | null
    modalidad_pago: $Enums.ModalidadPago
    _count: CatedraCountAggregateOutputType | null
    _avg: CatedraAvgAggregateOutputType | null
    _sum: CatedraSumAggregateOutputType | null
    _min: CatedraMinAggregateOutputType | null
    _max: CatedraMaxAggregateOutputType | null
  }

  type GetCatedraGroupByPayload<T extends CatedraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CatedraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CatedraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CatedraGroupByOutputType[P]>
            : GetScalarType<T[P], CatedraGroupByOutputType[P]>
        }
      >
    >


  export type CatedraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    anio?: boolean
    institucion?: boolean
    turno?: boolean
    aula?: boolean
    dias?: boolean
    created_at?: boolean
    updated_at?: boolean
    docenteId?: boolean
    modalidad_pago?: boolean
    Docente?: boolean | Catedra$DocenteArgs<ExtArgs>
    CatedraAlumno?: boolean | Catedra$CatedraAlumnoArgs<ExtArgs>
    CatedraDiaHorario?: boolean | Catedra$CatedraDiaHorarioArgs<ExtArgs>
    CostoCatedra?: boolean | Catedra$CostoCatedraArgs<ExtArgs>
    DiaClase?: boolean | Catedra$DiaClaseArgs<ExtArgs>
    Evaluacion?: boolean | Catedra$EvaluacionArgs<ExtArgs>
    PlanDeClases?: boolean | Catedra$PlanDeClasesArgs<ExtArgs>
    Publicacion?: boolean | Catedra$PublicacionArgs<ExtArgs>
    Puntuacion?: boolean | Catedra$PuntuacionArgs<ExtArgs>
    TareaMaestra?: boolean | Catedra$TareaMaestraArgs<ExtArgs>
    _count?: boolean | CatedraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["catedra"]>

  export type CatedraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    anio?: boolean
    institucion?: boolean
    turno?: boolean
    aula?: boolean
    dias?: boolean
    created_at?: boolean
    updated_at?: boolean
    docenteId?: boolean
    modalidad_pago?: boolean
    Docente?: boolean | Catedra$DocenteArgs<ExtArgs>
  }, ExtArgs["result"]["catedra"]>

  export type CatedraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    anio?: boolean
    institucion?: boolean
    turno?: boolean
    aula?: boolean
    dias?: boolean
    created_at?: boolean
    updated_at?: boolean
    docenteId?: boolean
    modalidad_pago?: boolean
    Docente?: boolean | Catedra$DocenteArgs<ExtArgs>
  }, ExtArgs["result"]["catedra"]>

  export type CatedraSelectScalar = {
    id?: boolean
    nombre?: boolean
    anio?: boolean
    institucion?: boolean
    turno?: boolean
    aula?: boolean
    dias?: boolean
    created_at?: boolean
    updated_at?: boolean
    docenteId?: boolean
    modalidad_pago?: boolean
  }

  export type CatedraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "anio" | "institucion" | "turno" | "aula" | "dias" | "created_at" | "updated_at" | "docenteId" | "modalidad_pago", ExtArgs["result"]["catedra"]>
  export type CatedraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Docente?: boolean | Catedra$DocenteArgs<ExtArgs>
    CatedraAlumno?: boolean | Catedra$CatedraAlumnoArgs<ExtArgs>
    CatedraDiaHorario?: boolean | Catedra$CatedraDiaHorarioArgs<ExtArgs>
    CostoCatedra?: boolean | Catedra$CostoCatedraArgs<ExtArgs>
    DiaClase?: boolean | Catedra$DiaClaseArgs<ExtArgs>
    Evaluacion?: boolean | Catedra$EvaluacionArgs<ExtArgs>
    PlanDeClases?: boolean | Catedra$PlanDeClasesArgs<ExtArgs>
    Publicacion?: boolean | Catedra$PublicacionArgs<ExtArgs>
    Puntuacion?: boolean | Catedra$PuntuacionArgs<ExtArgs>
    TareaMaestra?: boolean | Catedra$TareaMaestraArgs<ExtArgs>
    _count?: boolean | CatedraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CatedraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Docente?: boolean | Catedra$DocenteArgs<ExtArgs>
  }
  export type CatedraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Docente?: boolean | Catedra$DocenteArgs<ExtArgs>
  }

  export type $CatedraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Catedra"
    objects: {
      Docente: Prisma.$DocentePayload<ExtArgs> | null
      CatedraAlumno: Prisma.$CatedraAlumnoPayload<ExtArgs>[]
      CatedraDiaHorario: Prisma.$CatedraDiaHorarioPayload<ExtArgs>[]
      CostoCatedra: Prisma.$CostoCatedraPayload<ExtArgs> | null
      DiaClase: Prisma.$DiaClasePayload<ExtArgs>[]
      Evaluacion: Prisma.$EvaluacionPayload<ExtArgs>[]
      PlanDeClases: Prisma.$PlanDeClasesPayload<ExtArgs>[]
      Publicacion: Prisma.$PublicacionPayload<ExtArgs>[]
      Puntuacion: Prisma.$PuntuacionPayload<ExtArgs>[]
      TareaMaestra: Prisma.$TareaMaestraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      anio: number
      institucion: string
      turno: string
      aula: string
      dias: string
      created_at: Date
      updated_at: Date
      docenteId: number | null
      modalidad_pago: $Enums.ModalidadPago
    }, ExtArgs["result"]["catedra"]>
    composites: {}
  }

  type CatedraGetPayload<S extends boolean | null | undefined | CatedraDefaultArgs> = $Result.GetResult<Prisma.$CatedraPayload, S>

  type CatedraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CatedraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CatedraCountAggregateInputType | true
    }

  export interface CatedraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Catedra'], meta: { name: 'Catedra' } }
    /**
     * Find zero or one Catedra that matches the filter.
     * @param {CatedraFindUniqueArgs} args - Arguments to find a Catedra
     * @example
     * // Get one Catedra
     * const catedra = await prisma.catedra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CatedraFindUniqueArgs>(args: SelectSubset<T, CatedraFindUniqueArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Catedra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CatedraFindUniqueOrThrowArgs} args - Arguments to find a Catedra
     * @example
     * // Get one Catedra
     * const catedra = await prisma.catedra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CatedraFindUniqueOrThrowArgs>(args: SelectSubset<T, CatedraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Catedra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraFindFirstArgs} args - Arguments to find a Catedra
     * @example
     * // Get one Catedra
     * const catedra = await prisma.catedra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CatedraFindFirstArgs>(args?: SelectSubset<T, CatedraFindFirstArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Catedra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraFindFirstOrThrowArgs} args - Arguments to find a Catedra
     * @example
     * // Get one Catedra
     * const catedra = await prisma.catedra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CatedraFindFirstOrThrowArgs>(args?: SelectSubset<T, CatedraFindFirstOrThrowArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Catedras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Catedras
     * const catedras = await prisma.catedra.findMany()
     * 
     * // Get first 10 Catedras
     * const catedras = await prisma.catedra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const catedraWithIdOnly = await prisma.catedra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CatedraFindManyArgs>(args?: SelectSubset<T, CatedraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Catedra.
     * @param {CatedraCreateArgs} args - Arguments to create a Catedra.
     * @example
     * // Create one Catedra
     * const Catedra = await prisma.catedra.create({
     *   data: {
     *     // ... data to create a Catedra
     *   }
     * })
     * 
     */
    create<T extends CatedraCreateArgs>(args: SelectSubset<T, CatedraCreateArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Catedras.
     * @param {CatedraCreateManyArgs} args - Arguments to create many Catedras.
     * @example
     * // Create many Catedras
     * const catedra = await prisma.catedra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CatedraCreateManyArgs>(args?: SelectSubset<T, CatedraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Catedras and returns the data saved in the database.
     * @param {CatedraCreateManyAndReturnArgs} args - Arguments to create many Catedras.
     * @example
     * // Create many Catedras
     * const catedra = await prisma.catedra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Catedras and only return the `id`
     * const catedraWithIdOnly = await prisma.catedra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CatedraCreateManyAndReturnArgs>(args?: SelectSubset<T, CatedraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Catedra.
     * @param {CatedraDeleteArgs} args - Arguments to delete one Catedra.
     * @example
     * // Delete one Catedra
     * const Catedra = await prisma.catedra.delete({
     *   where: {
     *     // ... filter to delete one Catedra
     *   }
     * })
     * 
     */
    delete<T extends CatedraDeleteArgs>(args: SelectSubset<T, CatedraDeleteArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Catedra.
     * @param {CatedraUpdateArgs} args - Arguments to update one Catedra.
     * @example
     * // Update one Catedra
     * const catedra = await prisma.catedra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CatedraUpdateArgs>(args: SelectSubset<T, CatedraUpdateArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Catedras.
     * @param {CatedraDeleteManyArgs} args - Arguments to filter Catedras to delete.
     * @example
     * // Delete a few Catedras
     * const { count } = await prisma.catedra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CatedraDeleteManyArgs>(args?: SelectSubset<T, CatedraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Catedras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Catedras
     * const catedra = await prisma.catedra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CatedraUpdateManyArgs>(args: SelectSubset<T, CatedraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Catedras and returns the data updated in the database.
     * @param {CatedraUpdateManyAndReturnArgs} args - Arguments to update many Catedras.
     * @example
     * // Update many Catedras
     * const catedra = await prisma.catedra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Catedras and only return the `id`
     * const catedraWithIdOnly = await prisma.catedra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CatedraUpdateManyAndReturnArgs>(args: SelectSubset<T, CatedraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Catedra.
     * @param {CatedraUpsertArgs} args - Arguments to update or create a Catedra.
     * @example
     * // Update or create a Catedra
     * const catedra = await prisma.catedra.upsert({
     *   create: {
     *     // ... data to create a Catedra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Catedra we want to update
     *   }
     * })
     */
    upsert<T extends CatedraUpsertArgs>(args: SelectSubset<T, CatedraUpsertArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Catedras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraCountArgs} args - Arguments to filter Catedras to count.
     * @example
     * // Count the number of Catedras
     * const count = await prisma.catedra.count({
     *   where: {
     *     // ... the filter for the Catedras we want to count
     *   }
     * })
    **/
    count<T extends CatedraCountArgs>(
      args?: Subset<T, CatedraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CatedraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Catedra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CatedraAggregateArgs>(args: Subset<T, CatedraAggregateArgs>): Prisma.PrismaPromise<GetCatedraAggregateType<T>>

    /**
     * Group by Catedra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CatedraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CatedraGroupByArgs['orderBy'] }
        : { orderBy?: CatedraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CatedraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatedraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Catedra model
   */
  readonly fields: CatedraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Catedra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CatedraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Docente<T extends Catedra$DocenteArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$DocenteArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    CatedraAlumno<T extends Catedra$CatedraAlumnoArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$CatedraAlumnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CatedraDiaHorario<T extends Catedra$CatedraDiaHorarioArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$CatedraDiaHorarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    CostoCatedra<T extends Catedra$CostoCatedraArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$CostoCatedraArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    DiaClase<T extends Catedra$DiaClaseArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$DiaClaseArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Evaluacion<T extends Catedra$EvaluacionArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$EvaluacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PlanDeClases<T extends Catedra$PlanDeClasesArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$PlanDeClasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Publicacion<T extends Catedra$PublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$PublicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Puntuacion<T extends Catedra$PuntuacionArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$PuntuacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    TareaMaestra<T extends Catedra$TareaMaestraArgs<ExtArgs> = {}>(args?: Subset<T, Catedra$TareaMaestraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Catedra model
   */
  interface CatedraFieldRefs {
    readonly id: FieldRef<"Catedra", 'Int'>
    readonly nombre: FieldRef<"Catedra", 'String'>
    readonly anio: FieldRef<"Catedra", 'Int'>
    readonly institucion: FieldRef<"Catedra", 'String'>
    readonly turno: FieldRef<"Catedra", 'String'>
    readonly aula: FieldRef<"Catedra", 'String'>
    readonly dias: FieldRef<"Catedra", 'String'>
    readonly created_at: FieldRef<"Catedra", 'DateTime'>
    readonly updated_at: FieldRef<"Catedra", 'DateTime'>
    readonly docenteId: FieldRef<"Catedra", 'Int'>
    readonly modalidad_pago: FieldRef<"Catedra", 'ModalidadPago'>
  }
    

  // Custom InputTypes
  /**
   * Catedra findUnique
   */
  export type CatedraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * Filter, which Catedra to fetch.
     */
    where: CatedraWhereUniqueInput
  }

  /**
   * Catedra findUniqueOrThrow
   */
  export type CatedraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * Filter, which Catedra to fetch.
     */
    where: CatedraWhereUniqueInput
  }

  /**
   * Catedra findFirst
   */
  export type CatedraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * Filter, which Catedra to fetch.
     */
    where?: CatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Catedras to fetch.
     */
    orderBy?: CatedraOrderByWithRelationInput | CatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Catedras.
     */
    cursor?: CatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Catedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Catedras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Catedras.
     */
    distinct?: CatedraScalarFieldEnum | CatedraScalarFieldEnum[]
  }

  /**
   * Catedra findFirstOrThrow
   */
  export type CatedraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * Filter, which Catedra to fetch.
     */
    where?: CatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Catedras to fetch.
     */
    orderBy?: CatedraOrderByWithRelationInput | CatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Catedras.
     */
    cursor?: CatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Catedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Catedras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Catedras.
     */
    distinct?: CatedraScalarFieldEnum | CatedraScalarFieldEnum[]
  }

  /**
   * Catedra findMany
   */
  export type CatedraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * Filter, which Catedras to fetch.
     */
    where?: CatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Catedras to fetch.
     */
    orderBy?: CatedraOrderByWithRelationInput | CatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Catedras.
     */
    cursor?: CatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Catedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Catedras.
     */
    skip?: number
    distinct?: CatedraScalarFieldEnum | CatedraScalarFieldEnum[]
  }

  /**
   * Catedra create
   */
  export type CatedraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * The data needed to create a Catedra.
     */
    data: XOR<CatedraCreateInput, CatedraUncheckedCreateInput>
  }

  /**
   * Catedra createMany
   */
  export type CatedraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Catedras.
     */
    data: CatedraCreateManyInput | CatedraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Catedra createManyAndReturn
   */
  export type CatedraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * The data used to create many Catedras.
     */
    data: CatedraCreateManyInput | CatedraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Catedra update
   */
  export type CatedraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * The data needed to update a Catedra.
     */
    data: XOR<CatedraUpdateInput, CatedraUncheckedUpdateInput>
    /**
     * Choose, which Catedra to update.
     */
    where: CatedraWhereUniqueInput
  }

  /**
   * Catedra updateMany
   */
  export type CatedraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Catedras.
     */
    data: XOR<CatedraUpdateManyMutationInput, CatedraUncheckedUpdateManyInput>
    /**
     * Filter which Catedras to update
     */
    where?: CatedraWhereInput
    /**
     * Limit how many Catedras to update.
     */
    limit?: number
  }

  /**
   * Catedra updateManyAndReturn
   */
  export type CatedraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * The data used to update Catedras.
     */
    data: XOR<CatedraUpdateManyMutationInput, CatedraUncheckedUpdateManyInput>
    /**
     * Filter which Catedras to update
     */
    where?: CatedraWhereInput
    /**
     * Limit how many Catedras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Catedra upsert
   */
  export type CatedraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * The filter to search for the Catedra to update in case it exists.
     */
    where: CatedraWhereUniqueInput
    /**
     * In case the Catedra found by the `where` argument doesn't exist, create a new Catedra with this data.
     */
    create: XOR<CatedraCreateInput, CatedraUncheckedCreateInput>
    /**
     * In case the Catedra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CatedraUpdateInput, CatedraUncheckedUpdateInput>
  }

  /**
   * Catedra delete
   */
  export type CatedraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    /**
     * Filter which Catedra to delete.
     */
    where: CatedraWhereUniqueInput
  }

  /**
   * Catedra deleteMany
   */
  export type CatedraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Catedras to delete
     */
    where?: CatedraWhereInput
    /**
     * Limit how many Catedras to delete.
     */
    limit?: number
  }

  /**
   * Catedra.Docente
   */
  export type Catedra$DocenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    where?: DocenteWhereInput
  }

  /**
   * Catedra.CatedraAlumno
   */
  export type Catedra$CatedraAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    where?: CatedraAlumnoWhereInput
    orderBy?: CatedraAlumnoOrderByWithRelationInput | CatedraAlumnoOrderByWithRelationInput[]
    cursor?: CatedraAlumnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CatedraAlumnoScalarFieldEnum | CatedraAlumnoScalarFieldEnum[]
  }

  /**
   * Catedra.CatedraDiaHorario
   */
  export type Catedra$CatedraDiaHorarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    where?: CatedraDiaHorarioWhereInput
    orderBy?: CatedraDiaHorarioOrderByWithRelationInput | CatedraDiaHorarioOrderByWithRelationInput[]
    cursor?: CatedraDiaHorarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CatedraDiaHorarioScalarFieldEnum | CatedraDiaHorarioScalarFieldEnum[]
  }

  /**
   * Catedra.CostoCatedra
   */
  export type Catedra$CostoCatedraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    where?: CostoCatedraWhereInput
  }

  /**
   * Catedra.DiaClase
   */
  export type Catedra$DiaClaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    where?: DiaClaseWhereInput
    orderBy?: DiaClaseOrderByWithRelationInput | DiaClaseOrderByWithRelationInput[]
    cursor?: DiaClaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiaClaseScalarFieldEnum | DiaClaseScalarFieldEnum[]
  }

  /**
   * Catedra.Evaluacion
   */
  export type Catedra$EvaluacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    where?: EvaluacionWhereInput
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    cursor?: EvaluacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Catedra.PlanDeClases
   */
  export type Catedra$PlanDeClasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    where?: PlanDeClasesWhereInput
    orderBy?: PlanDeClasesOrderByWithRelationInput | PlanDeClasesOrderByWithRelationInput[]
    cursor?: PlanDeClasesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlanDeClasesScalarFieldEnum | PlanDeClasesScalarFieldEnum[]
  }

  /**
   * Catedra.Publicacion
   */
  export type Catedra$PublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    where?: PublicacionWhereInput
    orderBy?: PublicacionOrderByWithRelationInput | PublicacionOrderByWithRelationInput[]
    cursor?: PublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionScalarFieldEnum | PublicacionScalarFieldEnum[]
  }

  /**
   * Catedra.Puntuacion
   */
  export type Catedra$PuntuacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    where?: PuntuacionWhereInput
    orderBy?: PuntuacionOrderByWithRelationInput | PuntuacionOrderByWithRelationInput[]
    cursor?: PuntuacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PuntuacionScalarFieldEnum | PuntuacionScalarFieldEnum[]
  }

  /**
   * Catedra.TareaMaestra
   */
  export type Catedra$TareaMaestraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    where?: TareaMaestraWhereInput
    orderBy?: TareaMaestraOrderByWithRelationInput | TareaMaestraOrderByWithRelationInput[]
    cursor?: TareaMaestraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TareaMaestraScalarFieldEnum | TareaMaestraScalarFieldEnum[]
  }

  /**
   * Catedra without action
   */
  export type CatedraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
  }


  /**
   * Model CatedraAlumno
   */

  export type AggregateCatedraAlumno = {
    _count: CatedraAlumnoCountAggregateOutputType | null
    _avg: CatedraAlumnoAvgAggregateOutputType | null
    _sum: CatedraAlumnoSumAggregateOutputType | null
    _min: CatedraAlumnoMinAggregateOutputType | null
    _max: CatedraAlumnoMaxAggregateOutputType | null
  }

  export type CatedraAlumnoAvgAggregateOutputType = {
    catedraId: number | null
    alumnoId: number | null
    composerId: number | null
    id: number | null
    dia_cobro: number | null
  }

  export type CatedraAlumnoSumAggregateOutputType = {
    catedraId: number | null
    alumnoId: number | null
    composerId: number | null
    id: number | null
    dia_cobro: number | null
  }

  export type CatedraAlumnoMinAggregateOutputType = {
    catedraId: number | null
    alumnoId: number | null
    assignedAt: Date | null
    assignedBy: string | null
    composerId: number | null
    id: number | null
    dia_cobro: number | null
    fecha_inscripcion: Date | null
  }

  export type CatedraAlumnoMaxAggregateOutputType = {
    catedraId: number | null
    alumnoId: number | null
    assignedAt: Date | null
    assignedBy: string | null
    composerId: number | null
    id: number | null
    dia_cobro: number | null
    fecha_inscripcion: Date | null
  }

  export type CatedraAlumnoCountAggregateOutputType = {
    catedraId: number
    alumnoId: number
    assignedAt: number
    assignedBy: number
    composerId: number
    id: number
    dia_cobro: number
    fecha_inscripcion: number
    _all: number
  }


  export type CatedraAlumnoAvgAggregateInputType = {
    catedraId?: true
    alumnoId?: true
    composerId?: true
    id?: true
    dia_cobro?: true
  }

  export type CatedraAlumnoSumAggregateInputType = {
    catedraId?: true
    alumnoId?: true
    composerId?: true
    id?: true
    dia_cobro?: true
  }

  export type CatedraAlumnoMinAggregateInputType = {
    catedraId?: true
    alumnoId?: true
    assignedAt?: true
    assignedBy?: true
    composerId?: true
    id?: true
    dia_cobro?: true
    fecha_inscripcion?: true
  }

  export type CatedraAlumnoMaxAggregateInputType = {
    catedraId?: true
    alumnoId?: true
    assignedAt?: true
    assignedBy?: true
    composerId?: true
    id?: true
    dia_cobro?: true
    fecha_inscripcion?: true
  }

  export type CatedraAlumnoCountAggregateInputType = {
    catedraId?: true
    alumnoId?: true
    assignedAt?: true
    assignedBy?: true
    composerId?: true
    id?: true
    dia_cobro?: true
    fecha_inscripcion?: true
    _all?: true
  }

  export type CatedraAlumnoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CatedraAlumno to aggregate.
     */
    where?: CatedraAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraAlumnos to fetch.
     */
    orderBy?: CatedraAlumnoOrderByWithRelationInput | CatedraAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CatedraAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraAlumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CatedraAlumnos
    **/
    _count?: true | CatedraAlumnoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CatedraAlumnoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CatedraAlumnoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CatedraAlumnoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CatedraAlumnoMaxAggregateInputType
  }

  export type GetCatedraAlumnoAggregateType<T extends CatedraAlumnoAggregateArgs> = {
        [P in keyof T & keyof AggregateCatedraAlumno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCatedraAlumno[P]>
      : GetScalarType<T[P], AggregateCatedraAlumno[P]>
  }




  export type CatedraAlumnoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraAlumnoWhereInput
    orderBy?: CatedraAlumnoOrderByWithAggregationInput | CatedraAlumnoOrderByWithAggregationInput[]
    by: CatedraAlumnoScalarFieldEnum[] | CatedraAlumnoScalarFieldEnum
    having?: CatedraAlumnoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CatedraAlumnoCountAggregateInputType | true
    _avg?: CatedraAlumnoAvgAggregateInputType
    _sum?: CatedraAlumnoSumAggregateInputType
    _min?: CatedraAlumnoMinAggregateInputType
    _max?: CatedraAlumnoMaxAggregateInputType
  }

  export type CatedraAlumnoGroupByOutputType = {
    catedraId: number
    alumnoId: number | null
    assignedAt: Date
    assignedBy: string
    composerId: number | null
    id: number
    dia_cobro: number | null
    fecha_inscripcion: Date
    _count: CatedraAlumnoCountAggregateOutputType | null
    _avg: CatedraAlumnoAvgAggregateOutputType | null
    _sum: CatedraAlumnoSumAggregateOutputType | null
    _min: CatedraAlumnoMinAggregateOutputType | null
    _max: CatedraAlumnoMaxAggregateOutputType | null
  }

  type GetCatedraAlumnoGroupByPayload<T extends CatedraAlumnoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CatedraAlumnoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CatedraAlumnoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CatedraAlumnoGroupByOutputType[P]>
            : GetScalarType<T[P], CatedraAlumnoGroupByOutputType[P]>
        }
      >
    >


  export type CatedraAlumnoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    catedraId?: boolean
    alumnoId?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    composerId?: boolean
    id?: boolean
    dia_cobro?: boolean
    fecha_inscripcion?: boolean
    Alumno?: boolean | CatedraAlumno$AlumnoArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Composer?: boolean | CatedraAlumno$ComposerArgs<ExtArgs>
    Pago?: boolean | CatedraAlumno$PagoArgs<ExtArgs>
    _count?: boolean | CatedraAlumnoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["catedraAlumno"]>

  export type CatedraAlumnoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    catedraId?: boolean
    alumnoId?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    composerId?: boolean
    id?: boolean
    dia_cobro?: boolean
    fecha_inscripcion?: boolean
    Alumno?: boolean | CatedraAlumno$AlumnoArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Composer?: boolean | CatedraAlumno$ComposerArgs<ExtArgs>
  }, ExtArgs["result"]["catedraAlumno"]>

  export type CatedraAlumnoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    catedraId?: boolean
    alumnoId?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    composerId?: boolean
    id?: boolean
    dia_cobro?: boolean
    fecha_inscripcion?: boolean
    Alumno?: boolean | CatedraAlumno$AlumnoArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Composer?: boolean | CatedraAlumno$ComposerArgs<ExtArgs>
  }, ExtArgs["result"]["catedraAlumno"]>

  export type CatedraAlumnoSelectScalar = {
    catedraId?: boolean
    alumnoId?: boolean
    assignedAt?: boolean
    assignedBy?: boolean
    composerId?: boolean
    id?: boolean
    dia_cobro?: boolean
    fecha_inscripcion?: boolean
  }

  export type CatedraAlumnoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"catedraId" | "alumnoId" | "assignedAt" | "assignedBy" | "composerId" | "id" | "dia_cobro" | "fecha_inscripcion", ExtArgs["result"]["catedraAlumno"]>
  export type CatedraAlumnoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | CatedraAlumno$AlumnoArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Composer?: boolean | CatedraAlumno$ComposerArgs<ExtArgs>
    Pago?: boolean | CatedraAlumno$PagoArgs<ExtArgs>
    _count?: boolean | CatedraAlumnoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CatedraAlumnoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | CatedraAlumno$AlumnoArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Composer?: boolean | CatedraAlumno$ComposerArgs<ExtArgs>
  }
  export type CatedraAlumnoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | CatedraAlumno$AlumnoArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Composer?: boolean | CatedraAlumno$ComposerArgs<ExtArgs>
  }

  export type $CatedraAlumnoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CatedraAlumno"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs> | null
      Catedra: Prisma.$CatedraPayload<ExtArgs>
      Composer: Prisma.$ComposerPayload<ExtArgs> | null
      Pago: Prisma.$PagoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      catedraId: number
      alumnoId: number | null
      assignedAt: Date
      assignedBy: string
      composerId: number | null
      id: number
      dia_cobro: number | null
      fecha_inscripcion: Date
    }, ExtArgs["result"]["catedraAlumno"]>
    composites: {}
  }

  type CatedraAlumnoGetPayload<S extends boolean | null | undefined | CatedraAlumnoDefaultArgs> = $Result.GetResult<Prisma.$CatedraAlumnoPayload, S>

  type CatedraAlumnoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CatedraAlumnoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CatedraAlumnoCountAggregateInputType | true
    }

  export interface CatedraAlumnoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CatedraAlumno'], meta: { name: 'CatedraAlumno' } }
    /**
     * Find zero or one CatedraAlumno that matches the filter.
     * @param {CatedraAlumnoFindUniqueArgs} args - Arguments to find a CatedraAlumno
     * @example
     * // Get one CatedraAlumno
     * const catedraAlumno = await prisma.catedraAlumno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CatedraAlumnoFindUniqueArgs>(args: SelectSubset<T, CatedraAlumnoFindUniqueArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CatedraAlumno that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CatedraAlumnoFindUniqueOrThrowArgs} args - Arguments to find a CatedraAlumno
     * @example
     * // Get one CatedraAlumno
     * const catedraAlumno = await prisma.catedraAlumno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CatedraAlumnoFindUniqueOrThrowArgs>(args: SelectSubset<T, CatedraAlumnoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CatedraAlumno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAlumnoFindFirstArgs} args - Arguments to find a CatedraAlumno
     * @example
     * // Get one CatedraAlumno
     * const catedraAlumno = await prisma.catedraAlumno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CatedraAlumnoFindFirstArgs>(args?: SelectSubset<T, CatedraAlumnoFindFirstArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CatedraAlumno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAlumnoFindFirstOrThrowArgs} args - Arguments to find a CatedraAlumno
     * @example
     * // Get one CatedraAlumno
     * const catedraAlumno = await prisma.catedraAlumno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CatedraAlumnoFindFirstOrThrowArgs>(args?: SelectSubset<T, CatedraAlumnoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CatedraAlumnos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAlumnoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CatedraAlumnos
     * const catedraAlumnos = await prisma.catedraAlumno.findMany()
     * 
     * // Get first 10 CatedraAlumnos
     * const catedraAlumnos = await prisma.catedraAlumno.findMany({ take: 10 })
     * 
     * // Only select the `catedraId`
     * const catedraAlumnoWithCatedraIdOnly = await prisma.catedraAlumno.findMany({ select: { catedraId: true } })
     * 
     */
    findMany<T extends CatedraAlumnoFindManyArgs>(args?: SelectSubset<T, CatedraAlumnoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CatedraAlumno.
     * @param {CatedraAlumnoCreateArgs} args - Arguments to create a CatedraAlumno.
     * @example
     * // Create one CatedraAlumno
     * const CatedraAlumno = await prisma.catedraAlumno.create({
     *   data: {
     *     // ... data to create a CatedraAlumno
     *   }
     * })
     * 
     */
    create<T extends CatedraAlumnoCreateArgs>(args: SelectSubset<T, CatedraAlumnoCreateArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CatedraAlumnos.
     * @param {CatedraAlumnoCreateManyArgs} args - Arguments to create many CatedraAlumnos.
     * @example
     * // Create many CatedraAlumnos
     * const catedraAlumno = await prisma.catedraAlumno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CatedraAlumnoCreateManyArgs>(args?: SelectSubset<T, CatedraAlumnoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CatedraAlumnos and returns the data saved in the database.
     * @param {CatedraAlumnoCreateManyAndReturnArgs} args - Arguments to create many CatedraAlumnos.
     * @example
     * // Create many CatedraAlumnos
     * const catedraAlumno = await prisma.catedraAlumno.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CatedraAlumnos and only return the `catedraId`
     * const catedraAlumnoWithCatedraIdOnly = await prisma.catedraAlumno.createManyAndReturn({
     *   select: { catedraId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CatedraAlumnoCreateManyAndReturnArgs>(args?: SelectSubset<T, CatedraAlumnoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CatedraAlumno.
     * @param {CatedraAlumnoDeleteArgs} args - Arguments to delete one CatedraAlumno.
     * @example
     * // Delete one CatedraAlumno
     * const CatedraAlumno = await prisma.catedraAlumno.delete({
     *   where: {
     *     // ... filter to delete one CatedraAlumno
     *   }
     * })
     * 
     */
    delete<T extends CatedraAlumnoDeleteArgs>(args: SelectSubset<T, CatedraAlumnoDeleteArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CatedraAlumno.
     * @param {CatedraAlumnoUpdateArgs} args - Arguments to update one CatedraAlumno.
     * @example
     * // Update one CatedraAlumno
     * const catedraAlumno = await prisma.catedraAlumno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CatedraAlumnoUpdateArgs>(args: SelectSubset<T, CatedraAlumnoUpdateArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CatedraAlumnos.
     * @param {CatedraAlumnoDeleteManyArgs} args - Arguments to filter CatedraAlumnos to delete.
     * @example
     * // Delete a few CatedraAlumnos
     * const { count } = await prisma.catedraAlumno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CatedraAlumnoDeleteManyArgs>(args?: SelectSubset<T, CatedraAlumnoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CatedraAlumnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAlumnoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CatedraAlumnos
     * const catedraAlumno = await prisma.catedraAlumno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CatedraAlumnoUpdateManyArgs>(args: SelectSubset<T, CatedraAlumnoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CatedraAlumnos and returns the data updated in the database.
     * @param {CatedraAlumnoUpdateManyAndReturnArgs} args - Arguments to update many CatedraAlumnos.
     * @example
     * // Update many CatedraAlumnos
     * const catedraAlumno = await prisma.catedraAlumno.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CatedraAlumnos and only return the `catedraId`
     * const catedraAlumnoWithCatedraIdOnly = await prisma.catedraAlumno.updateManyAndReturn({
     *   select: { catedraId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CatedraAlumnoUpdateManyAndReturnArgs>(args: SelectSubset<T, CatedraAlumnoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CatedraAlumno.
     * @param {CatedraAlumnoUpsertArgs} args - Arguments to update or create a CatedraAlumno.
     * @example
     * // Update or create a CatedraAlumno
     * const catedraAlumno = await prisma.catedraAlumno.upsert({
     *   create: {
     *     // ... data to create a CatedraAlumno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CatedraAlumno we want to update
     *   }
     * })
     */
    upsert<T extends CatedraAlumnoUpsertArgs>(args: SelectSubset<T, CatedraAlumnoUpsertArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CatedraAlumnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAlumnoCountArgs} args - Arguments to filter CatedraAlumnos to count.
     * @example
     * // Count the number of CatedraAlumnos
     * const count = await prisma.catedraAlumno.count({
     *   where: {
     *     // ... the filter for the CatedraAlumnos we want to count
     *   }
     * })
    **/
    count<T extends CatedraAlumnoCountArgs>(
      args?: Subset<T, CatedraAlumnoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CatedraAlumnoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CatedraAlumno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAlumnoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CatedraAlumnoAggregateArgs>(args: Subset<T, CatedraAlumnoAggregateArgs>): Prisma.PrismaPromise<GetCatedraAlumnoAggregateType<T>>

    /**
     * Group by CatedraAlumno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraAlumnoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CatedraAlumnoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CatedraAlumnoGroupByArgs['orderBy'] }
        : { orderBy?: CatedraAlumnoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CatedraAlumnoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatedraAlumnoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CatedraAlumno model
   */
  readonly fields: CatedraAlumnoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CatedraAlumno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CatedraAlumnoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends CatedraAlumno$AlumnoArgs<ExtArgs> = {}>(args?: Subset<T, CatedraAlumno$AlumnoArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Composer<T extends CatedraAlumno$ComposerArgs<ExtArgs> = {}>(args?: Subset<T, CatedraAlumno$ComposerArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Pago<T extends CatedraAlumno$PagoArgs<ExtArgs> = {}>(args?: Subset<T, CatedraAlumno$PagoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CatedraAlumno model
   */
  interface CatedraAlumnoFieldRefs {
    readonly catedraId: FieldRef<"CatedraAlumno", 'Int'>
    readonly alumnoId: FieldRef<"CatedraAlumno", 'Int'>
    readonly assignedAt: FieldRef<"CatedraAlumno", 'DateTime'>
    readonly assignedBy: FieldRef<"CatedraAlumno", 'String'>
    readonly composerId: FieldRef<"CatedraAlumno", 'Int'>
    readonly id: FieldRef<"CatedraAlumno", 'Int'>
    readonly dia_cobro: FieldRef<"CatedraAlumno", 'Int'>
    readonly fecha_inscripcion: FieldRef<"CatedraAlumno", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CatedraAlumno findUnique
   */
  export type CatedraAlumnoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which CatedraAlumno to fetch.
     */
    where: CatedraAlumnoWhereUniqueInput
  }

  /**
   * CatedraAlumno findUniqueOrThrow
   */
  export type CatedraAlumnoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which CatedraAlumno to fetch.
     */
    where: CatedraAlumnoWhereUniqueInput
  }

  /**
   * CatedraAlumno findFirst
   */
  export type CatedraAlumnoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which CatedraAlumno to fetch.
     */
    where?: CatedraAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraAlumnos to fetch.
     */
    orderBy?: CatedraAlumnoOrderByWithRelationInput | CatedraAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CatedraAlumnos.
     */
    cursor?: CatedraAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraAlumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CatedraAlumnos.
     */
    distinct?: CatedraAlumnoScalarFieldEnum | CatedraAlumnoScalarFieldEnum[]
  }

  /**
   * CatedraAlumno findFirstOrThrow
   */
  export type CatedraAlumnoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which CatedraAlumno to fetch.
     */
    where?: CatedraAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraAlumnos to fetch.
     */
    orderBy?: CatedraAlumnoOrderByWithRelationInput | CatedraAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CatedraAlumnos.
     */
    cursor?: CatedraAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraAlumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CatedraAlumnos.
     */
    distinct?: CatedraAlumnoScalarFieldEnum | CatedraAlumnoScalarFieldEnum[]
  }

  /**
   * CatedraAlumno findMany
   */
  export type CatedraAlumnoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which CatedraAlumnos to fetch.
     */
    where?: CatedraAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraAlumnos to fetch.
     */
    orderBy?: CatedraAlumnoOrderByWithRelationInput | CatedraAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CatedraAlumnos.
     */
    cursor?: CatedraAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraAlumnos.
     */
    skip?: number
    distinct?: CatedraAlumnoScalarFieldEnum | CatedraAlumnoScalarFieldEnum[]
  }

  /**
   * CatedraAlumno create
   */
  export type CatedraAlumnoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * The data needed to create a CatedraAlumno.
     */
    data: XOR<CatedraAlumnoCreateInput, CatedraAlumnoUncheckedCreateInput>
  }

  /**
   * CatedraAlumno createMany
   */
  export type CatedraAlumnoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CatedraAlumnos.
     */
    data: CatedraAlumnoCreateManyInput | CatedraAlumnoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CatedraAlumno createManyAndReturn
   */
  export type CatedraAlumnoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * The data used to create many CatedraAlumnos.
     */
    data: CatedraAlumnoCreateManyInput | CatedraAlumnoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CatedraAlumno update
   */
  export type CatedraAlumnoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * The data needed to update a CatedraAlumno.
     */
    data: XOR<CatedraAlumnoUpdateInput, CatedraAlumnoUncheckedUpdateInput>
    /**
     * Choose, which CatedraAlumno to update.
     */
    where: CatedraAlumnoWhereUniqueInput
  }

  /**
   * CatedraAlumno updateMany
   */
  export type CatedraAlumnoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CatedraAlumnos.
     */
    data: XOR<CatedraAlumnoUpdateManyMutationInput, CatedraAlumnoUncheckedUpdateManyInput>
    /**
     * Filter which CatedraAlumnos to update
     */
    where?: CatedraAlumnoWhereInput
    /**
     * Limit how many CatedraAlumnos to update.
     */
    limit?: number
  }

  /**
   * CatedraAlumno updateManyAndReturn
   */
  export type CatedraAlumnoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * The data used to update CatedraAlumnos.
     */
    data: XOR<CatedraAlumnoUpdateManyMutationInput, CatedraAlumnoUncheckedUpdateManyInput>
    /**
     * Filter which CatedraAlumnos to update
     */
    where?: CatedraAlumnoWhereInput
    /**
     * Limit how many CatedraAlumnos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CatedraAlumno upsert
   */
  export type CatedraAlumnoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * The filter to search for the CatedraAlumno to update in case it exists.
     */
    where: CatedraAlumnoWhereUniqueInput
    /**
     * In case the CatedraAlumno found by the `where` argument doesn't exist, create a new CatedraAlumno with this data.
     */
    create: XOR<CatedraAlumnoCreateInput, CatedraAlumnoUncheckedCreateInput>
    /**
     * In case the CatedraAlumno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CatedraAlumnoUpdateInput, CatedraAlumnoUncheckedUpdateInput>
  }

  /**
   * CatedraAlumno delete
   */
  export type CatedraAlumnoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
    /**
     * Filter which CatedraAlumno to delete.
     */
    where: CatedraAlumnoWhereUniqueInput
  }

  /**
   * CatedraAlumno deleteMany
   */
  export type CatedraAlumnoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CatedraAlumnos to delete
     */
    where?: CatedraAlumnoWhereInput
    /**
     * Limit how many CatedraAlumnos to delete.
     */
    limit?: number
  }

  /**
   * CatedraAlumno.Alumno
   */
  export type CatedraAlumno$AlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    where?: AlumnoWhereInput
  }

  /**
   * CatedraAlumno.Composer
   */
  export type CatedraAlumno$ComposerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Composer
     */
    select?: ComposerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Composer
     */
    omit?: ComposerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComposerInclude<ExtArgs> | null
    where?: ComposerWhereInput
  }

  /**
   * CatedraAlumno.Pago
   */
  export type CatedraAlumno$PagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    cursor?: PagoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * CatedraAlumno without action
   */
  export type CatedraAlumnoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraAlumno
     */
    select?: CatedraAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraAlumno
     */
    omit?: CatedraAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraAlumnoInclude<ExtArgs> | null
  }


  /**
   * Model CatedraDiaHorario
   */

  export type AggregateCatedraDiaHorario = {
    _count: CatedraDiaHorarioCountAggregateOutputType | null
    _avg: CatedraDiaHorarioAvgAggregateOutputType | null
    _sum: CatedraDiaHorarioSumAggregateOutputType | null
    _min: CatedraDiaHorarioMinAggregateOutputType | null
    _max: CatedraDiaHorarioMaxAggregateOutputType | null
  }

  export type CatedraDiaHorarioAvgAggregateOutputType = {
    id: number | null
    catedraId: number | null
  }

  export type CatedraDiaHorarioSumAggregateOutputType = {
    id: number | null
    catedraId: number | null
  }

  export type CatedraDiaHorarioMinAggregateOutputType = {
    id: number | null
    dia_semana: string | null
    hora_inicio: string | null
    hora_fin: string | null
    catedraId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CatedraDiaHorarioMaxAggregateOutputType = {
    id: number | null
    dia_semana: string | null
    hora_inicio: string | null
    hora_fin: string | null
    catedraId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CatedraDiaHorarioCountAggregateOutputType = {
    id: number
    dia_semana: number
    hora_inicio: number
    hora_fin: number
    catedraId: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CatedraDiaHorarioAvgAggregateInputType = {
    id?: true
    catedraId?: true
  }

  export type CatedraDiaHorarioSumAggregateInputType = {
    id?: true
    catedraId?: true
  }

  export type CatedraDiaHorarioMinAggregateInputType = {
    id?: true
    dia_semana?: true
    hora_inicio?: true
    hora_fin?: true
    catedraId?: true
    created_at?: true
    updated_at?: true
  }

  export type CatedraDiaHorarioMaxAggregateInputType = {
    id?: true
    dia_semana?: true
    hora_inicio?: true
    hora_fin?: true
    catedraId?: true
    created_at?: true
    updated_at?: true
  }

  export type CatedraDiaHorarioCountAggregateInputType = {
    id?: true
    dia_semana?: true
    hora_inicio?: true
    hora_fin?: true
    catedraId?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CatedraDiaHorarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CatedraDiaHorario to aggregate.
     */
    where?: CatedraDiaHorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraDiaHorarios to fetch.
     */
    orderBy?: CatedraDiaHorarioOrderByWithRelationInput | CatedraDiaHorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CatedraDiaHorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraDiaHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraDiaHorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CatedraDiaHorarios
    **/
    _count?: true | CatedraDiaHorarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CatedraDiaHorarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CatedraDiaHorarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CatedraDiaHorarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CatedraDiaHorarioMaxAggregateInputType
  }

  export type GetCatedraDiaHorarioAggregateType<T extends CatedraDiaHorarioAggregateArgs> = {
        [P in keyof T & keyof AggregateCatedraDiaHorario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCatedraDiaHorario[P]>
      : GetScalarType<T[P], AggregateCatedraDiaHorario[P]>
  }




  export type CatedraDiaHorarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CatedraDiaHorarioWhereInput
    orderBy?: CatedraDiaHorarioOrderByWithAggregationInput | CatedraDiaHorarioOrderByWithAggregationInput[]
    by: CatedraDiaHorarioScalarFieldEnum[] | CatedraDiaHorarioScalarFieldEnum
    having?: CatedraDiaHorarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CatedraDiaHorarioCountAggregateInputType | true
    _avg?: CatedraDiaHorarioAvgAggregateInputType
    _sum?: CatedraDiaHorarioSumAggregateInputType
    _min?: CatedraDiaHorarioMinAggregateInputType
    _max?: CatedraDiaHorarioMaxAggregateInputType
  }

  export type CatedraDiaHorarioGroupByOutputType = {
    id: number
    dia_semana: string
    hora_inicio: string
    hora_fin: string
    catedraId: number
    created_at: Date
    updated_at: Date
    _count: CatedraDiaHorarioCountAggregateOutputType | null
    _avg: CatedraDiaHorarioAvgAggregateOutputType | null
    _sum: CatedraDiaHorarioSumAggregateOutputType | null
    _min: CatedraDiaHorarioMinAggregateOutputType | null
    _max: CatedraDiaHorarioMaxAggregateOutputType | null
  }

  type GetCatedraDiaHorarioGroupByPayload<T extends CatedraDiaHorarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CatedraDiaHorarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CatedraDiaHorarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CatedraDiaHorarioGroupByOutputType[P]>
            : GetScalarType<T[P], CatedraDiaHorarioGroupByOutputType[P]>
        }
      >
    >


  export type CatedraDiaHorarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["catedraDiaHorario"]>

  export type CatedraDiaHorarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["catedraDiaHorario"]>

  export type CatedraDiaHorarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["catedraDiaHorario"]>

  export type CatedraDiaHorarioSelectScalar = {
    id?: boolean
    dia_semana?: boolean
    hora_inicio?: boolean
    hora_fin?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type CatedraDiaHorarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dia_semana" | "hora_inicio" | "hora_fin" | "catedraId" | "created_at" | "updated_at", ExtArgs["result"]["catedraDiaHorario"]>
  export type CatedraDiaHorarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }
  export type CatedraDiaHorarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }
  export type CatedraDiaHorarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }

  export type $CatedraDiaHorarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CatedraDiaHorario"
    objects: {
      Catedra: Prisma.$CatedraPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      dia_semana: string
      hora_inicio: string
      hora_fin: string
      catedraId: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["catedraDiaHorario"]>
    composites: {}
  }

  type CatedraDiaHorarioGetPayload<S extends boolean | null | undefined | CatedraDiaHorarioDefaultArgs> = $Result.GetResult<Prisma.$CatedraDiaHorarioPayload, S>

  type CatedraDiaHorarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CatedraDiaHorarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CatedraDiaHorarioCountAggregateInputType | true
    }

  export interface CatedraDiaHorarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CatedraDiaHorario'], meta: { name: 'CatedraDiaHorario' } }
    /**
     * Find zero or one CatedraDiaHorario that matches the filter.
     * @param {CatedraDiaHorarioFindUniqueArgs} args - Arguments to find a CatedraDiaHorario
     * @example
     * // Get one CatedraDiaHorario
     * const catedraDiaHorario = await prisma.catedraDiaHorario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CatedraDiaHorarioFindUniqueArgs>(args: SelectSubset<T, CatedraDiaHorarioFindUniqueArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CatedraDiaHorario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CatedraDiaHorarioFindUniqueOrThrowArgs} args - Arguments to find a CatedraDiaHorario
     * @example
     * // Get one CatedraDiaHorario
     * const catedraDiaHorario = await prisma.catedraDiaHorario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CatedraDiaHorarioFindUniqueOrThrowArgs>(args: SelectSubset<T, CatedraDiaHorarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CatedraDiaHorario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraDiaHorarioFindFirstArgs} args - Arguments to find a CatedraDiaHorario
     * @example
     * // Get one CatedraDiaHorario
     * const catedraDiaHorario = await prisma.catedraDiaHorario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CatedraDiaHorarioFindFirstArgs>(args?: SelectSubset<T, CatedraDiaHorarioFindFirstArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CatedraDiaHorario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraDiaHorarioFindFirstOrThrowArgs} args - Arguments to find a CatedraDiaHorario
     * @example
     * // Get one CatedraDiaHorario
     * const catedraDiaHorario = await prisma.catedraDiaHorario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CatedraDiaHorarioFindFirstOrThrowArgs>(args?: SelectSubset<T, CatedraDiaHorarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CatedraDiaHorarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraDiaHorarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CatedraDiaHorarios
     * const catedraDiaHorarios = await prisma.catedraDiaHorario.findMany()
     * 
     * // Get first 10 CatedraDiaHorarios
     * const catedraDiaHorarios = await prisma.catedraDiaHorario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const catedraDiaHorarioWithIdOnly = await prisma.catedraDiaHorario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CatedraDiaHorarioFindManyArgs>(args?: SelectSubset<T, CatedraDiaHorarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CatedraDiaHorario.
     * @param {CatedraDiaHorarioCreateArgs} args - Arguments to create a CatedraDiaHorario.
     * @example
     * // Create one CatedraDiaHorario
     * const CatedraDiaHorario = await prisma.catedraDiaHorario.create({
     *   data: {
     *     // ... data to create a CatedraDiaHorario
     *   }
     * })
     * 
     */
    create<T extends CatedraDiaHorarioCreateArgs>(args: SelectSubset<T, CatedraDiaHorarioCreateArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CatedraDiaHorarios.
     * @param {CatedraDiaHorarioCreateManyArgs} args - Arguments to create many CatedraDiaHorarios.
     * @example
     * // Create many CatedraDiaHorarios
     * const catedraDiaHorario = await prisma.catedraDiaHorario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CatedraDiaHorarioCreateManyArgs>(args?: SelectSubset<T, CatedraDiaHorarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CatedraDiaHorarios and returns the data saved in the database.
     * @param {CatedraDiaHorarioCreateManyAndReturnArgs} args - Arguments to create many CatedraDiaHorarios.
     * @example
     * // Create many CatedraDiaHorarios
     * const catedraDiaHorario = await prisma.catedraDiaHorario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CatedraDiaHorarios and only return the `id`
     * const catedraDiaHorarioWithIdOnly = await prisma.catedraDiaHorario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CatedraDiaHorarioCreateManyAndReturnArgs>(args?: SelectSubset<T, CatedraDiaHorarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CatedraDiaHorario.
     * @param {CatedraDiaHorarioDeleteArgs} args - Arguments to delete one CatedraDiaHorario.
     * @example
     * // Delete one CatedraDiaHorario
     * const CatedraDiaHorario = await prisma.catedraDiaHorario.delete({
     *   where: {
     *     // ... filter to delete one CatedraDiaHorario
     *   }
     * })
     * 
     */
    delete<T extends CatedraDiaHorarioDeleteArgs>(args: SelectSubset<T, CatedraDiaHorarioDeleteArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CatedraDiaHorario.
     * @param {CatedraDiaHorarioUpdateArgs} args - Arguments to update one CatedraDiaHorario.
     * @example
     * // Update one CatedraDiaHorario
     * const catedraDiaHorario = await prisma.catedraDiaHorario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CatedraDiaHorarioUpdateArgs>(args: SelectSubset<T, CatedraDiaHorarioUpdateArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CatedraDiaHorarios.
     * @param {CatedraDiaHorarioDeleteManyArgs} args - Arguments to filter CatedraDiaHorarios to delete.
     * @example
     * // Delete a few CatedraDiaHorarios
     * const { count } = await prisma.catedraDiaHorario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CatedraDiaHorarioDeleteManyArgs>(args?: SelectSubset<T, CatedraDiaHorarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CatedraDiaHorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraDiaHorarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CatedraDiaHorarios
     * const catedraDiaHorario = await prisma.catedraDiaHorario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CatedraDiaHorarioUpdateManyArgs>(args: SelectSubset<T, CatedraDiaHorarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CatedraDiaHorarios and returns the data updated in the database.
     * @param {CatedraDiaHorarioUpdateManyAndReturnArgs} args - Arguments to update many CatedraDiaHorarios.
     * @example
     * // Update many CatedraDiaHorarios
     * const catedraDiaHorario = await prisma.catedraDiaHorario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CatedraDiaHorarios and only return the `id`
     * const catedraDiaHorarioWithIdOnly = await prisma.catedraDiaHorario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CatedraDiaHorarioUpdateManyAndReturnArgs>(args: SelectSubset<T, CatedraDiaHorarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CatedraDiaHorario.
     * @param {CatedraDiaHorarioUpsertArgs} args - Arguments to update or create a CatedraDiaHorario.
     * @example
     * // Update or create a CatedraDiaHorario
     * const catedraDiaHorario = await prisma.catedraDiaHorario.upsert({
     *   create: {
     *     // ... data to create a CatedraDiaHorario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CatedraDiaHorario we want to update
     *   }
     * })
     */
    upsert<T extends CatedraDiaHorarioUpsertArgs>(args: SelectSubset<T, CatedraDiaHorarioUpsertArgs<ExtArgs>>): Prisma__CatedraDiaHorarioClient<$Result.GetResult<Prisma.$CatedraDiaHorarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CatedraDiaHorarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraDiaHorarioCountArgs} args - Arguments to filter CatedraDiaHorarios to count.
     * @example
     * // Count the number of CatedraDiaHorarios
     * const count = await prisma.catedraDiaHorario.count({
     *   where: {
     *     // ... the filter for the CatedraDiaHorarios we want to count
     *   }
     * })
    **/
    count<T extends CatedraDiaHorarioCountArgs>(
      args?: Subset<T, CatedraDiaHorarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CatedraDiaHorarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CatedraDiaHorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraDiaHorarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CatedraDiaHorarioAggregateArgs>(args: Subset<T, CatedraDiaHorarioAggregateArgs>): Prisma.PrismaPromise<GetCatedraDiaHorarioAggregateType<T>>

    /**
     * Group by CatedraDiaHorario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CatedraDiaHorarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CatedraDiaHorarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CatedraDiaHorarioGroupByArgs['orderBy'] }
        : { orderBy?: CatedraDiaHorarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CatedraDiaHorarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCatedraDiaHorarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CatedraDiaHorario model
   */
  readonly fields: CatedraDiaHorarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CatedraDiaHorario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CatedraDiaHorarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CatedraDiaHorario model
   */
  interface CatedraDiaHorarioFieldRefs {
    readonly id: FieldRef<"CatedraDiaHorario", 'Int'>
    readonly dia_semana: FieldRef<"CatedraDiaHorario", 'String'>
    readonly hora_inicio: FieldRef<"CatedraDiaHorario", 'String'>
    readonly hora_fin: FieldRef<"CatedraDiaHorario", 'String'>
    readonly catedraId: FieldRef<"CatedraDiaHorario", 'Int'>
    readonly created_at: FieldRef<"CatedraDiaHorario", 'DateTime'>
    readonly updated_at: FieldRef<"CatedraDiaHorario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CatedraDiaHorario findUnique
   */
  export type CatedraDiaHorarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * Filter, which CatedraDiaHorario to fetch.
     */
    where: CatedraDiaHorarioWhereUniqueInput
  }

  /**
   * CatedraDiaHorario findUniqueOrThrow
   */
  export type CatedraDiaHorarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * Filter, which CatedraDiaHorario to fetch.
     */
    where: CatedraDiaHorarioWhereUniqueInput
  }

  /**
   * CatedraDiaHorario findFirst
   */
  export type CatedraDiaHorarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * Filter, which CatedraDiaHorario to fetch.
     */
    where?: CatedraDiaHorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraDiaHorarios to fetch.
     */
    orderBy?: CatedraDiaHorarioOrderByWithRelationInput | CatedraDiaHorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CatedraDiaHorarios.
     */
    cursor?: CatedraDiaHorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraDiaHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraDiaHorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CatedraDiaHorarios.
     */
    distinct?: CatedraDiaHorarioScalarFieldEnum | CatedraDiaHorarioScalarFieldEnum[]
  }

  /**
   * CatedraDiaHorario findFirstOrThrow
   */
  export type CatedraDiaHorarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * Filter, which CatedraDiaHorario to fetch.
     */
    where?: CatedraDiaHorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraDiaHorarios to fetch.
     */
    orderBy?: CatedraDiaHorarioOrderByWithRelationInput | CatedraDiaHorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CatedraDiaHorarios.
     */
    cursor?: CatedraDiaHorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraDiaHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraDiaHorarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CatedraDiaHorarios.
     */
    distinct?: CatedraDiaHorarioScalarFieldEnum | CatedraDiaHorarioScalarFieldEnum[]
  }

  /**
   * CatedraDiaHorario findMany
   */
  export type CatedraDiaHorarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * Filter, which CatedraDiaHorarios to fetch.
     */
    where?: CatedraDiaHorarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CatedraDiaHorarios to fetch.
     */
    orderBy?: CatedraDiaHorarioOrderByWithRelationInput | CatedraDiaHorarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CatedraDiaHorarios.
     */
    cursor?: CatedraDiaHorarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CatedraDiaHorarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CatedraDiaHorarios.
     */
    skip?: number
    distinct?: CatedraDiaHorarioScalarFieldEnum | CatedraDiaHorarioScalarFieldEnum[]
  }

  /**
   * CatedraDiaHorario create
   */
  export type CatedraDiaHorarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * The data needed to create a CatedraDiaHorario.
     */
    data: XOR<CatedraDiaHorarioCreateInput, CatedraDiaHorarioUncheckedCreateInput>
  }

  /**
   * CatedraDiaHorario createMany
   */
  export type CatedraDiaHorarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CatedraDiaHorarios.
     */
    data: CatedraDiaHorarioCreateManyInput | CatedraDiaHorarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CatedraDiaHorario createManyAndReturn
   */
  export type CatedraDiaHorarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * The data used to create many CatedraDiaHorarios.
     */
    data: CatedraDiaHorarioCreateManyInput | CatedraDiaHorarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CatedraDiaHorario update
   */
  export type CatedraDiaHorarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * The data needed to update a CatedraDiaHorario.
     */
    data: XOR<CatedraDiaHorarioUpdateInput, CatedraDiaHorarioUncheckedUpdateInput>
    /**
     * Choose, which CatedraDiaHorario to update.
     */
    where: CatedraDiaHorarioWhereUniqueInput
  }

  /**
   * CatedraDiaHorario updateMany
   */
  export type CatedraDiaHorarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CatedraDiaHorarios.
     */
    data: XOR<CatedraDiaHorarioUpdateManyMutationInput, CatedraDiaHorarioUncheckedUpdateManyInput>
    /**
     * Filter which CatedraDiaHorarios to update
     */
    where?: CatedraDiaHorarioWhereInput
    /**
     * Limit how many CatedraDiaHorarios to update.
     */
    limit?: number
  }

  /**
   * CatedraDiaHorario updateManyAndReturn
   */
  export type CatedraDiaHorarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * The data used to update CatedraDiaHorarios.
     */
    data: XOR<CatedraDiaHorarioUpdateManyMutationInput, CatedraDiaHorarioUncheckedUpdateManyInput>
    /**
     * Filter which CatedraDiaHorarios to update
     */
    where?: CatedraDiaHorarioWhereInput
    /**
     * Limit how many CatedraDiaHorarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CatedraDiaHorario upsert
   */
  export type CatedraDiaHorarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * The filter to search for the CatedraDiaHorario to update in case it exists.
     */
    where: CatedraDiaHorarioWhereUniqueInput
    /**
     * In case the CatedraDiaHorario found by the `where` argument doesn't exist, create a new CatedraDiaHorario with this data.
     */
    create: XOR<CatedraDiaHorarioCreateInput, CatedraDiaHorarioUncheckedCreateInput>
    /**
     * In case the CatedraDiaHorario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CatedraDiaHorarioUpdateInput, CatedraDiaHorarioUncheckedUpdateInput>
  }

  /**
   * CatedraDiaHorario delete
   */
  export type CatedraDiaHorarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
    /**
     * Filter which CatedraDiaHorario to delete.
     */
    where: CatedraDiaHorarioWhereUniqueInput
  }

  /**
   * CatedraDiaHorario deleteMany
   */
  export type CatedraDiaHorarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CatedraDiaHorarios to delete
     */
    where?: CatedraDiaHorarioWhereInput
    /**
     * Limit how many CatedraDiaHorarios to delete.
     */
    limit?: number
  }

  /**
   * CatedraDiaHorario without action
   */
  export type CatedraDiaHorarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CatedraDiaHorario
     */
    select?: CatedraDiaHorarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CatedraDiaHorario
     */
    omit?: CatedraDiaHorarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraDiaHorarioInclude<ExtArgs> | null
  }


  /**
   * Model ComentarioPublicacion
   */

  export type AggregateComentarioPublicacion = {
    _count: ComentarioPublicacionCountAggregateOutputType | null
    _avg: ComentarioPublicacionAvgAggregateOutputType | null
    _sum: ComentarioPublicacionSumAggregateOutputType | null
    _min: ComentarioPublicacionMinAggregateOutputType | null
    _max: ComentarioPublicacionMaxAggregateOutputType | null
  }

  export type ComentarioPublicacionAvgAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
  }

  export type ComentarioPublicacionSumAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
  }

  export type ComentarioPublicacionMinAggregateOutputType = {
    id: number | null
    texto: string | null
    publicacionId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ComentarioPublicacionMaxAggregateOutputType = {
    id: number | null
    texto: string | null
    publicacionId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ComentarioPublicacionCountAggregateOutputType = {
    id: number
    texto: number
    publicacionId: number
    autorAlumnoId: number
    autorDocenteId: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ComentarioPublicacionAvgAggregateInputType = {
    id?: true
    publicacionId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
  }

  export type ComentarioPublicacionSumAggregateInputType = {
    id?: true
    publicacionId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
  }

  export type ComentarioPublicacionMinAggregateInputType = {
    id?: true
    texto?: true
    publicacionId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    created_at?: true
    updated_at?: true
  }

  export type ComentarioPublicacionMaxAggregateInputType = {
    id?: true
    texto?: true
    publicacionId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    created_at?: true
    updated_at?: true
  }

  export type ComentarioPublicacionCountAggregateInputType = {
    id?: true
    texto?: true
    publicacionId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ComentarioPublicacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComentarioPublicacion to aggregate.
     */
    where?: ComentarioPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioPublicacions to fetch.
     */
    orderBy?: ComentarioPublicacionOrderByWithRelationInput | ComentarioPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComentarioPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioPublicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComentarioPublicacions
    **/
    _count?: true | ComentarioPublicacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComentarioPublicacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComentarioPublicacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComentarioPublicacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComentarioPublicacionMaxAggregateInputType
  }

  export type GetComentarioPublicacionAggregateType<T extends ComentarioPublicacionAggregateArgs> = {
        [P in keyof T & keyof AggregateComentarioPublicacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComentarioPublicacion[P]>
      : GetScalarType<T[P], AggregateComentarioPublicacion[P]>
  }




  export type ComentarioPublicacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentarioPublicacionWhereInput
    orderBy?: ComentarioPublicacionOrderByWithAggregationInput | ComentarioPublicacionOrderByWithAggregationInput[]
    by: ComentarioPublicacionScalarFieldEnum[] | ComentarioPublicacionScalarFieldEnum
    having?: ComentarioPublicacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComentarioPublicacionCountAggregateInputType | true
    _avg?: ComentarioPublicacionAvgAggregateInputType
    _sum?: ComentarioPublicacionSumAggregateInputType
    _min?: ComentarioPublicacionMinAggregateInputType
    _max?: ComentarioPublicacionMaxAggregateInputType
  }

  export type ComentarioPublicacionGroupByOutputType = {
    id: number
    texto: string
    publicacionId: number
    autorAlumnoId: number | null
    autorDocenteId: number | null
    created_at: Date
    updated_at: Date
    _count: ComentarioPublicacionCountAggregateOutputType | null
    _avg: ComentarioPublicacionAvgAggregateOutputType | null
    _sum: ComentarioPublicacionSumAggregateOutputType | null
    _min: ComentarioPublicacionMinAggregateOutputType | null
    _max: ComentarioPublicacionMaxAggregateOutputType | null
  }

  type GetComentarioPublicacionGroupByPayload<T extends ComentarioPublicacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComentarioPublicacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComentarioPublicacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComentarioPublicacionGroupByOutputType[P]>
            : GetScalarType<T[P], ComentarioPublicacionGroupByOutputType[P]>
        }
      >
    >


  export type ComentarioPublicacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    publicacionId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Alumno?: boolean | ComentarioPublicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | ComentarioPublicacion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentarioPublicacion"]>

  export type ComentarioPublicacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    publicacionId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Alumno?: boolean | ComentarioPublicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | ComentarioPublicacion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentarioPublicacion"]>

  export type ComentarioPublicacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    publicacionId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Alumno?: boolean | ComentarioPublicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | ComentarioPublicacion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentarioPublicacion"]>

  export type ComentarioPublicacionSelectScalar = {
    id?: boolean
    texto?: boolean
    publicacionId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type ComentarioPublicacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "texto" | "publicacionId" | "autorAlumnoId" | "autorDocenteId" | "created_at" | "updated_at", ExtArgs["result"]["comentarioPublicacion"]>
  export type ComentarioPublicacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | ComentarioPublicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | ComentarioPublicacion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }
  export type ComentarioPublicacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | ComentarioPublicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | ComentarioPublicacion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }
  export type ComentarioPublicacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | ComentarioPublicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | ComentarioPublicacion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }

  export type $ComentarioPublicacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComentarioPublicacion"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs> | null
      Docente: Prisma.$DocentePayload<ExtArgs> | null
      Publicacion: Prisma.$PublicacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      texto: string
      publicacionId: number
      autorAlumnoId: number | null
      autorDocenteId: number | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["comentarioPublicacion"]>
    composites: {}
  }

  type ComentarioPublicacionGetPayload<S extends boolean | null | undefined | ComentarioPublicacionDefaultArgs> = $Result.GetResult<Prisma.$ComentarioPublicacionPayload, S>

  type ComentarioPublicacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ComentarioPublicacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComentarioPublicacionCountAggregateInputType | true
    }

  export interface ComentarioPublicacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComentarioPublicacion'], meta: { name: 'ComentarioPublicacion' } }
    /**
     * Find zero or one ComentarioPublicacion that matches the filter.
     * @param {ComentarioPublicacionFindUniqueArgs} args - Arguments to find a ComentarioPublicacion
     * @example
     * // Get one ComentarioPublicacion
     * const comentarioPublicacion = await prisma.comentarioPublicacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComentarioPublicacionFindUniqueArgs>(args: SelectSubset<T, ComentarioPublicacionFindUniqueArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ComentarioPublicacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ComentarioPublicacionFindUniqueOrThrowArgs} args - Arguments to find a ComentarioPublicacion
     * @example
     * // Get one ComentarioPublicacion
     * const comentarioPublicacion = await prisma.comentarioPublicacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComentarioPublicacionFindUniqueOrThrowArgs>(args: SelectSubset<T, ComentarioPublicacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComentarioPublicacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioPublicacionFindFirstArgs} args - Arguments to find a ComentarioPublicacion
     * @example
     * // Get one ComentarioPublicacion
     * const comentarioPublicacion = await prisma.comentarioPublicacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComentarioPublicacionFindFirstArgs>(args?: SelectSubset<T, ComentarioPublicacionFindFirstArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComentarioPublicacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioPublicacionFindFirstOrThrowArgs} args - Arguments to find a ComentarioPublicacion
     * @example
     * // Get one ComentarioPublicacion
     * const comentarioPublicacion = await prisma.comentarioPublicacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComentarioPublicacionFindFirstOrThrowArgs>(args?: SelectSubset<T, ComentarioPublicacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ComentarioPublicacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioPublicacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComentarioPublicacions
     * const comentarioPublicacions = await prisma.comentarioPublicacion.findMany()
     * 
     * // Get first 10 ComentarioPublicacions
     * const comentarioPublicacions = await prisma.comentarioPublicacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comentarioPublicacionWithIdOnly = await prisma.comentarioPublicacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComentarioPublicacionFindManyArgs>(args?: SelectSubset<T, ComentarioPublicacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ComentarioPublicacion.
     * @param {ComentarioPublicacionCreateArgs} args - Arguments to create a ComentarioPublicacion.
     * @example
     * // Create one ComentarioPublicacion
     * const ComentarioPublicacion = await prisma.comentarioPublicacion.create({
     *   data: {
     *     // ... data to create a ComentarioPublicacion
     *   }
     * })
     * 
     */
    create<T extends ComentarioPublicacionCreateArgs>(args: SelectSubset<T, ComentarioPublicacionCreateArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ComentarioPublicacions.
     * @param {ComentarioPublicacionCreateManyArgs} args - Arguments to create many ComentarioPublicacions.
     * @example
     * // Create many ComentarioPublicacions
     * const comentarioPublicacion = await prisma.comentarioPublicacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComentarioPublicacionCreateManyArgs>(args?: SelectSubset<T, ComentarioPublicacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComentarioPublicacions and returns the data saved in the database.
     * @param {ComentarioPublicacionCreateManyAndReturnArgs} args - Arguments to create many ComentarioPublicacions.
     * @example
     * // Create many ComentarioPublicacions
     * const comentarioPublicacion = await prisma.comentarioPublicacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComentarioPublicacions and only return the `id`
     * const comentarioPublicacionWithIdOnly = await prisma.comentarioPublicacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComentarioPublicacionCreateManyAndReturnArgs>(args?: SelectSubset<T, ComentarioPublicacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ComentarioPublicacion.
     * @param {ComentarioPublicacionDeleteArgs} args - Arguments to delete one ComentarioPublicacion.
     * @example
     * // Delete one ComentarioPublicacion
     * const ComentarioPublicacion = await prisma.comentarioPublicacion.delete({
     *   where: {
     *     // ... filter to delete one ComentarioPublicacion
     *   }
     * })
     * 
     */
    delete<T extends ComentarioPublicacionDeleteArgs>(args: SelectSubset<T, ComentarioPublicacionDeleteArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ComentarioPublicacion.
     * @param {ComentarioPublicacionUpdateArgs} args - Arguments to update one ComentarioPublicacion.
     * @example
     * // Update one ComentarioPublicacion
     * const comentarioPublicacion = await prisma.comentarioPublicacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComentarioPublicacionUpdateArgs>(args: SelectSubset<T, ComentarioPublicacionUpdateArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ComentarioPublicacions.
     * @param {ComentarioPublicacionDeleteManyArgs} args - Arguments to filter ComentarioPublicacions to delete.
     * @example
     * // Delete a few ComentarioPublicacions
     * const { count } = await prisma.comentarioPublicacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComentarioPublicacionDeleteManyArgs>(args?: SelectSubset<T, ComentarioPublicacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComentarioPublicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioPublicacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComentarioPublicacions
     * const comentarioPublicacion = await prisma.comentarioPublicacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComentarioPublicacionUpdateManyArgs>(args: SelectSubset<T, ComentarioPublicacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComentarioPublicacions and returns the data updated in the database.
     * @param {ComentarioPublicacionUpdateManyAndReturnArgs} args - Arguments to update many ComentarioPublicacions.
     * @example
     * // Update many ComentarioPublicacions
     * const comentarioPublicacion = await prisma.comentarioPublicacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ComentarioPublicacions and only return the `id`
     * const comentarioPublicacionWithIdOnly = await prisma.comentarioPublicacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ComentarioPublicacionUpdateManyAndReturnArgs>(args: SelectSubset<T, ComentarioPublicacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ComentarioPublicacion.
     * @param {ComentarioPublicacionUpsertArgs} args - Arguments to update or create a ComentarioPublicacion.
     * @example
     * // Update or create a ComentarioPublicacion
     * const comentarioPublicacion = await prisma.comentarioPublicacion.upsert({
     *   create: {
     *     // ... data to create a ComentarioPublicacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComentarioPublicacion we want to update
     *   }
     * })
     */
    upsert<T extends ComentarioPublicacionUpsertArgs>(args: SelectSubset<T, ComentarioPublicacionUpsertArgs<ExtArgs>>): Prisma__ComentarioPublicacionClient<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ComentarioPublicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioPublicacionCountArgs} args - Arguments to filter ComentarioPublicacions to count.
     * @example
     * // Count the number of ComentarioPublicacions
     * const count = await prisma.comentarioPublicacion.count({
     *   where: {
     *     // ... the filter for the ComentarioPublicacions we want to count
     *   }
     * })
    **/
    count<T extends ComentarioPublicacionCountArgs>(
      args?: Subset<T, ComentarioPublicacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComentarioPublicacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComentarioPublicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioPublicacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComentarioPublicacionAggregateArgs>(args: Subset<T, ComentarioPublicacionAggregateArgs>): Prisma.PrismaPromise<GetComentarioPublicacionAggregateType<T>>

    /**
     * Group by ComentarioPublicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentarioPublicacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComentarioPublicacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComentarioPublicacionGroupByArgs['orderBy'] }
        : { orderBy?: ComentarioPublicacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComentarioPublicacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComentarioPublicacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComentarioPublicacion model
   */
  readonly fields: ComentarioPublicacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComentarioPublicacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComentarioPublicacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends ComentarioPublicacion$AlumnoArgs<ExtArgs> = {}>(args?: Subset<T, ComentarioPublicacion$AlumnoArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Docente<T extends ComentarioPublicacion$DocenteArgs<ExtArgs> = {}>(args?: Subset<T, ComentarioPublicacion$DocenteArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Publicacion<T extends PublicacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionDefaultArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComentarioPublicacion model
   */
  interface ComentarioPublicacionFieldRefs {
    readonly id: FieldRef<"ComentarioPublicacion", 'Int'>
    readonly texto: FieldRef<"ComentarioPublicacion", 'String'>
    readonly publicacionId: FieldRef<"ComentarioPublicacion", 'Int'>
    readonly autorAlumnoId: FieldRef<"ComentarioPublicacion", 'Int'>
    readonly autorDocenteId: FieldRef<"ComentarioPublicacion", 'Int'>
    readonly created_at: FieldRef<"ComentarioPublicacion", 'DateTime'>
    readonly updated_at: FieldRef<"ComentarioPublicacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ComentarioPublicacion findUnique
   */
  export type ComentarioPublicacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioPublicacion to fetch.
     */
    where: ComentarioPublicacionWhereUniqueInput
  }

  /**
   * ComentarioPublicacion findUniqueOrThrow
   */
  export type ComentarioPublicacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioPublicacion to fetch.
     */
    where: ComentarioPublicacionWhereUniqueInput
  }

  /**
   * ComentarioPublicacion findFirst
   */
  export type ComentarioPublicacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioPublicacion to fetch.
     */
    where?: ComentarioPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioPublicacions to fetch.
     */
    orderBy?: ComentarioPublicacionOrderByWithRelationInput | ComentarioPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComentarioPublicacions.
     */
    cursor?: ComentarioPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioPublicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComentarioPublicacions.
     */
    distinct?: ComentarioPublicacionScalarFieldEnum | ComentarioPublicacionScalarFieldEnum[]
  }

  /**
   * ComentarioPublicacion findFirstOrThrow
   */
  export type ComentarioPublicacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioPublicacion to fetch.
     */
    where?: ComentarioPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioPublicacions to fetch.
     */
    orderBy?: ComentarioPublicacionOrderByWithRelationInput | ComentarioPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComentarioPublicacions.
     */
    cursor?: ComentarioPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioPublicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComentarioPublicacions.
     */
    distinct?: ComentarioPublicacionScalarFieldEnum | ComentarioPublicacionScalarFieldEnum[]
  }

  /**
   * ComentarioPublicacion findMany
   */
  export type ComentarioPublicacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentarioPublicacions to fetch.
     */
    where?: ComentarioPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentarioPublicacions to fetch.
     */
    orderBy?: ComentarioPublicacionOrderByWithRelationInput | ComentarioPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComentarioPublicacions.
     */
    cursor?: ComentarioPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentarioPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentarioPublicacions.
     */
    skip?: number
    distinct?: ComentarioPublicacionScalarFieldEnum | ComentarioPublicacionScalarFieldEnum[]
  }

  /**
   * ComentarioPublicacion create
   */
  export type ComentarioPublicacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * The data needed to create a ComentarioPublicacion.
     */
    data: XOR<ComentarioPublicacionCreateInput, ComentarioPublicacionUncheckedCreateInput>
  }

  /**
   * ComentarioPublicacion createMany
   */
  export type ComentarioPublicacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComentarioPublicacions.
     */
    data: ComentarioPublicacionCreateManyInput | ComentarioPublicacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComentarioPublicacion createManyAndReturn
   */
  export type ComentarioPublicacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * The data used to create many ComentarioPublicacions.
     */
    data: ComentarioPublicacionCreateManyInput | ComentarioPublicacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComentarioPublicacion update
   */
  export type ComentarioPublicacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * The data needed to update a ComentarioPublicacion.
     */
    data: XOR<ComentarioPublicacionUpdateInput, ComentarioPublicacionUncheckedUpdateInput>
    /**
     * Choose, which ComentarioPublicacion to update.
     */
    where: ComentarioPublicacionWhereUniqueInput
  }

  /**
   * ComentarioPublicacion updateMany
   */
  export type ComentarioPublicacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComentarioPublicacions.
     */
    data: XOR<ComentarioPublicacionUpdateManyMutationInput, ComentarioPublicacionUncheckedUpdateManyInput>
    /**
     * Filter which ComentarioPublicacions to update
     */
    where?: ComentarioPublicacionWhereInput
    /**
     * Limit how many ComentarioPublicacions to update.
     */
    limit?: number
  }

  /**
   * ComentarioPublicacion updateManyAndReturn
   */
  export type ComentarioPublicacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * The data used to update ComentarioPublicacions.
     */
    data: XOR<ComentarioPublicacionUpdateManyMutationInput, ComentarioPublicacionUncheckedUpdateManyInput>
    /**
     * Filter which ComentarioPublicacions to update
     */
    where?: ComentarioPublicacionWhereInput
    /**
     * Limit how many ComentarioPublicacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComentarioPublicacion upsert
   */
  export type ComentarioPublicacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * The filter to search for the ComentarioPublicacion to update in case it exists.
     */
    where: ComentarioPublicacionWhereUniqueInput
    /**
     * In case the ComentarioPublicacion found by the `where` argument doesn't exist, create a new ComentarioPublicacion with this data.
     */
    create: XOR<ComentarioPublicacionCreateInput, ComentarioPublicacionUncheckedCreateInput>
    /**
     * In case the ComentarioPublicacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComentarioPublicacionUpdateInput, ComentarioPublicacionUncheckedUpdateInput>
  }

  /**
   * ComentarioPublicacion delete
   */
  export type ComentarioPublicacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    /**
     * Filter which ComentarioPublicacion to delete.
     */
    where: ComentarioPublicacionWhereUniqueInput
  }

  /**
   * ComentarioPublicacion deleteMany
   */
  export type ComentarioPublicacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComentarioPublicacions to delete
     */
    where?: ComentarioPublicacionWhereInput
    /**
     * Limit how many ComentarioPublicacions to delete.
     */
    limit?: number
  }

  /**
   * ComentarioPublicacion.Alumno
   */
  export type ComentarioPublicacion$AlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    where?: AlumnoWhereInput
  }

  /**
   * ComentarioPublicacion.Docente
   */
  export type ComentarioPublicacion$DocenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    where?: DocenteWhereInput
  }

  /**
   * ComentarioPublicacion without action
   */
  export type ComentarioPublicacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
  }


  /**
   * Model CostoCatedra
   */

  export type AggregateCostoCatedra = {
    _count: CostoCatedraCountAggregateOutputType | null
    _avg: CostoCatedraAvgAggregateOutputType | null
    _sum: CostoCatedraSumAggregateOutputType | null
    _min: CostoCatedraMinAggregateOutputType | null
    _max: CostoCatedraMaxAggregateOutputType | null
  }

  export type CostoCatedraAvgAggregateOutputType = {
    id: number | null
    catedraId: number | null
    monto_matricula: number | null
    monto_cuota: number | null
  }

  export type CostoCatedraSumAggregateOutputType = {
    id: number | null
    catedraId: number | null
    monto_matricula: number | null
    monto_cuota: number | null
  }

  export type CostoCatedraMinAggregateOutputType = {
    id: number | null
    catedraId: number | null
    monto_matricula: number | null
    monto_cuota: number | null
    es_gratuita: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CostoCatedraMaxAggregateOutputType = {
    id: number | null
    catedraId: number | null
    monto_matricula: number | null
    monto_cuota: number | null
    es_gratuita: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CostoCatedraCountAggregateOutputType = {
    id: number
    catedraId: number
    monto_matricula: number
    monto_cuota: number
    es_gratuita: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CostoCatedraAvgAggregateInputType = {
    id?: true
    catedraId?: true
    monto_matricula?: true
    monto_cuota?: true
  }

  export type CostoCatedraSumAggregateInputType = {
    id?: true
    catedraId?: true
    monto_matricula?: true
    monto_cuota?: true
  }

  export type CostoCatedraMinAggregateInputType = {
    id?: true
    catedraId?: true
    monto_matricula?: true
    monto_cuota?: true
    es_gratuita?: true
    created_at?: true
    updated_at?: true
  }

  export type CostoCatedraMaxAggregateInputType = {
    id?: true
    catedraId?: true
    monto_matricula?: true
    monto_cuota?: true
    es_gratuita?: true
    created_at?: true
    updated_at?: true
  }

  export type CostoCatedraCountAggregateInputType = {
    id?: true
    catedraId?: true
    monto_matricula?: true
    monto_cuota?: true
    es_gratuita?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CostoCatedraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CostoCatedra to aggregate.
     */
    where?: CostoCatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostoCatedras to fetch.
     */
    orderBy?: CostoCatedraOrderByWithRelationInput | CostoCatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CostoCatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostoCatedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostoCatedras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CostoCatedras
    **/
    _count?: true | CostoCatedraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CostoCatedraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CostoCatedraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CostoCatedraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CostoCatedraMaxAggregateInputType
  }

  export type GetCostoCatedraAggregateType<T extends CostoCatedraAggregateArgs> = {
        [P in keyof T & keyof AggregateCostoCatedra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCostoCatedra[P]>
      : GetScalarType<T[P], AggregateCostoCatedra[P]>
  }




  export type CostoCatedraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CostoCatedraWhereInput
    orderBy?: CostoCatedraOrderByWithAggregationInput | CostoCatedraOrderByWithAggregationInput[]
    by: CostoCatedraScalarFieldEnum[] | CostoCatedraScalarFieldEnum
    having?: CostoCatedraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CostoCatedraCountAggregateInputType | true
    _avg?: CostoCatedraAvgAggregateInputType
    _sum?: CostoCatedraSumAggregateInputType
    _min?: CostoCatedraMinAggregateInputType
    _max?: CostoCatedraMaxAggregateInputType
  }

  export type CostoCatedraGroupByOutputType = {
    id: number
    catedraId: number
    monto_matricula: number | null
    monto_cuota: number | null
    es_gratuita: boolean
    created_at: Date
    updated_at: Date
    _count: CostoCatedraCountAggregateOutputType | null
    _avg: CostoCatedraAvgAggregateOutputType | null
    _sum: CostoCatedraSumAggregateOutputType | null
    _min: CostoCatedraMinAggregateOutputType | null
    _max: CostoCatedraMaxAggregateOutputType | null
  }

  type GetCostoCatedraGroupByPayload<T extends CostoCatedraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CostoCatedraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CostoCatedraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CostoCatedraGroupByOutputType[P]>
            : GetScalarType<T[P], CostoCatedraGroupByOutputType[P]>
        }
      >
    >


  export type CostoCatedraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    catedraId?: boolean
    monto_matricula?: boolean
    monto_cuota?: boolean
    es_gratuita?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["costoCatedra"]>

  export type CostoCatedraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    catedraId?: boolean
    monto_matricula?: boolean
    monto_cuota?: boolean
    es_gratuita?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["costoCatedra"]>

  export type CostoCatedraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    catedraId?: boolean
    monto_matricula?: boolean
    monto_cuota?: boolean
    es_gratuita?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["costoCatedra"]>

  export type CostoCatedraSelectScalar = {
    id?: boolean
    catedraId?: boolean
    monto_matricula?: boolean
    monto_cuota?: boolean
    es_gratuita?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type CostoCatedraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "catedraId" | "monto_matricula" | "monto_cuota" | "es_gratuita" | "created_at" | "updated_at", ExtArgs["result"]["costoCatedra"]>
  export type CostoCatedraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }
  export type CostoCatedraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }
  export type CostoCatedraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }

  export type $CostoCatedraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CostoCatedra"
    objects: {
      Catedra: Prisma.$CatedraPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      catedraId: number
      monto_matricula: number | null
      monto_cuota: number | null
      es_gratuita: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["costoCatedra"]>
    composites: {}
  }

  type CostoCatedraGetPayload<S extends boolean | null | undefined | CostoCatedraDefaultArgs> = $Result.GetResult<Prisma.$CostoCatedraPayload, S>

  type CostoCatedraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CostoCatedraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CostoCatedraCountAggregateInputType | true
    }

  export interface CostoCatedraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CostoCatedra'], meta: { name: 'CostoCatedra' } }
    /**
     * Find zero or one CostoCatedra that matches the filter.
     * @param {CostoCatedraFindUniqueArgs} args - Arguments to find a CostoCatedra
     * @example
     * // Get one CostoCatedra
     * const costoCatedra = await prisma.costoCatedra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CostoCatedraFindUniqueArgs>(args: SelectSubset<T, CostoCatedraFindUniqueArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CostoCatedra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CostoCatedraFindUniqueOrThrowArgs} args - Arguments to find a CostoCatedra
     * @example
     * // Get one CostoCatedra
     * const costoCatedra = await prisma.costoCatedra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CostoCatedraFindUniqueOrThrowArgs>(args: SelectSubset<T, CostoCatedraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CostoCatedra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostoCatedraFindFirstArgs} args - Arguments to find a CostoCatedra
     * @example
     * // Get one CostoCatedra
     * const costoCatedra = await prisma.costoCatedra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CostoCatedraFindFirstArgs>(args?: SelectSubset<T, CostoCatedraFindFirstArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CostoCatedra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostoCatedraFindFirstOrThrowArgs} args - Arguments to find a CostoCatedra
     * @example
     * // Get one CostoCatedra
     * const costoCatedra = await prisma.costoCatedra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CostoCatedraFindFirstOrThrowArgs>(args?: SelectSubset<T, CostoCatedraFindFirstOrThrowArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CostoCatedras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostoCatedraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CostoCatedras
     * const costoCatedras = await prisma.costoCatedra.findMany()
     * 
     * // Get first 10 CostoCatedras
     * const costoCatedras = await prisma.costoCatedra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const costoCatedraWithIdOnly = await prisma.costoCatedra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CostoCatedraFindManyArgs>(args?: SelectSubset<T, CostoCatedraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CostoCatedra.
     * @param {CostoCatedraCreateArgs} args - Arguments to create a CostoCatedra.
     * @example
     * // Create one CostoCatedra
     * const CostoCatedra = await prisma.costoCatedra.create({
     *   data: {
     *     // ... data to create a CostoCatedra
     *   }
     * })
     * 
     */
    create<T extends CostoCatedraCreateArgs>(args: SelectSubset<T, CostoCatedraCreateArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CostoCatedras.
     * @param {CostoCatedraCreateManyArgs} args - Arguments to create many CostoCatedras.
     * @example
     * // Create many CostoCatedras
     * const costoCatedra = await prisma.costoCatedra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CostoCatedraCreateManyArgs>(args?: SelectSubset<T, CostoCatedraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CostoCatedras and returns the data saved in the database.
     * @param {CostoCatedraCreateManyAndReturnArgs} args - Arguments to create many CostoCatedras.
     * @example
     * // Create many CostoCatedras
     * const costoCatedra = await prisma.costoCatedra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CostoCatedras and only return the `id`
     * const costoCatedraWithIdOnly = await prisma.costoCatedra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CostoCatedraCreateManyAndReturnArgs>(args?: SelectSubset<T, CostoCatedraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CostoCatedra.
     * @param {CostoCatedraDeleteArgs} args - Arguments to delete one CostoCatedra.
     * @example
     * // Delete one CostoCatedra
     * const CostoCatedra = await prisma.costoCatedra.delete({
     *   where: {
     *     // ... filter to delete one CostoCatedra
     *   }
     * })
     * 
     */
    delete<T extends CostoCatedraDeleteArgs>(args: SelectSubset<T, CostoCatedraDeleteArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CostoCatedra.
     * @param {CostoCatedraUpdateArgs} args - Arguments to update one CostoCatedra.
     * @example
     * // Update one CostoCatedra
     * const costoCatedra = await prisma.costoCatedra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CostoCatedraUpdateArgs>(args: SelectSubset<T, CostoCatedraUpdateArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CostoCatedras.
     * @param {CostoCatedraDeleteManyArgs} args - Arguments to filter CostoCatedras to delete.
     * @example
     * // Delete a few CostoCatedras
     * const { count } = await prisma.costoCatedra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CostoCatedraDeleteManyArgs>(args?: SelectSubset<T, CostoCatedraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CostoCatedras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostoCatedraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CostoCatedras
     * const costoCatedra = await prisma.costoCatedra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CostoCatedraUpdateManyArgs>(args: SelectSubset<T, CostoCatedraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CostoCatedras and returns the data updated in the database.
     * @param {CostoCatedraUpdateManyAndReturnArgs} args - Arguments to update many CostoCatedras.
     * @example
     * // Update many CostoCatedras
     * const costoCatedra = await prisma.costoCatedra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CostoCatedras and only return the `id`
     * const costoCatedraWithIdOnly = await prisma.costoCatedra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CostoCatedraUpdateManyAndReturnArgs>(args: SelectSubset<T, CostoCatedraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CostoCatedra.
     * @param {CostoCatedraUpsertArgs} args - Arguments to update or create a CostoCatedra.
     * @example
     * // Update or create a CostoCatedra
     * const costoCatedra = await prisma.costoCatedra.upsert({
     *   create: {
     *     // ... data to create a CostoCatedra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CostoCatedra we want to update
     *   }
     * })
     */
    upsert<T extends CostoCatedraUpsertArgs>(args: SelectSubset<T, CostoCatedraUpsertArgs<ExtArgs>>): Prisma__CostoCatedraClient<$Result.GetResult<Prisma.$CostoCatedraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CostoCatedras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostoCatedraCountArgs} args - Arguments to filter CostoCatedras to count.
     * @example
     * // Count the number of CostoCatedras
     * const count = await prisma.costoCatedra.count({
     *   where: {
     *     // ... the filter for the CostoCatedras we want to count
     *   }
     * })
    **/
    count<T extends CostoCatedraCountArgs>(
      args?: Subset<T, CostoCatedraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CostoCatedraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CostoCatedra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostoCatedraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CostoCatedraAggregateArgs>(args: Subset<T, CostoCatedraAggregateArgs>): Prisma.PrismaPromise<GetCostoCatedraAggregateType<T>>

    /**
     * Group by CostoCatedra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CostoCatedraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CostoCatedraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CostoCatedraGroupByArgs['orderBy'] }
        : { orderBy?: CostoCatedraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CostoCatedraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCostoCatedraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CostoCatedra model
   */
  readonly fields: CostoCatedraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CostoCatedra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CostoCatedraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CostoCatedra model
   */
  interface CostoCatedraFieldRefs {
    readonly id: FieldRef<"CostoCatedra", 'Int'>
    readonly catedraId: FieldRef<"CostoCatedra", 'Int'>
    readonly monto_matricula: FieldRef<"CostoCatedra", 'Float'>
    readonly monto_cuota: FieldRef<"CostoCatedra", 'Float'>
    readonly es_gratuita: FieldRef<"CostoCatedra", 'Boolean'>
    readonly created_at: FieldRef<"CostoCatedra", 'DateTime'>
    readonly updated_at: FieldRef<"CostoCatedra", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CostoCatedra findUnique
   */
  export type CostoCatedraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * Filter, which CostoCatedra to fetch.
     */
    where: CostoCatedraWhereUniqueInput
  }

  /**
   * CostoCatedra findUniqueOrThrow
   */
  export type CostoCatedraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * Filter, which CostoCatedra to fetch.
     */
    where: CostoCatedraWhereUniqueInput
  }

  /**
   * CostoCatedra findFirst
   */
  export type CostoCatedraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * Filter, which CostoCatedra to fetch.
     */
    where?: CostoCatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostoCatedras to fetch.
     */
    orderBy?: CostoCatedraOrderByWithRelationInput | CostoCatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CostoCatedras.
     */
    cursor?: CostoCatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostoCatedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostoCatedras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CostoCatedras.
     */
    distinct?: CostoCatedraScalarFieldEnum | CostoCatedraScalarFieldEnum[]
  }

  /**
   * CostoCatedra findFirstOrThrow
   */
  export type CostoCatedraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * Filter, which CostoCatedra to fetch.
     */
    where?: CostoCatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostoCatedras to fetch.
     */
    orderBy?: CostoCatedraOrderByWithRelationInput | CostoCatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CostoCatedras.
     */
    cursor?: CostoCatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostoCatedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostoCatedras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CostoCatedras.
     */
    distinct?: CostoCatedraScalarFieldEnum | CostoCatedraScalarFieldEnum[]
  }

  /**
   * CostoCatedra findMany
   */
  export type CostoCatedraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * Filter, which CostoCatedras to fetch.
     */
    where?: CostoCatedraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CostoCatedras to fetch.
     */
    orderBy?: CostoCatedraOrderByWithRelationInput | CostoCatedraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CostoCatedras.
     */
    cursor?: CostoCatedraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CostoCatedras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CostoCatedras.
     */
    skip?: number
    distinct?: CostoCatedraScalarFieldEnum | CostoCatedraScalarFieldEnum[]
  }

  /**
   * CostoCatedra create
   */
  export type CostoCatedraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * The data needed to create a CostoCatedra.
     */
    data: XOR<CostoCatedraCreateInput, CostoCatedraUncheckedCreateInput>
  }

  /**
   * CostoCatedra createMany
   */
  export type CostoCatedraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CostoCatedras.
     */
    data: CostoCatedraCreateManyInput | CostoCatedraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CostoCatedra createManyAndReturn
   */
  export type CostoCatedraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * The data used to create many CostoCatedras.
     */
    data: CostoCatedraCreateManyInput | CostoCatedraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CostoCatedra update
   */
  export type CostoCatedraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * The data needed to update a CostoCatedra.
     */
    data: XOR<CostoCatedraUpdateInput, CostoCatedraUncheckedUpdateInput>
    /**
     * Choose, which CostoCatedra to update.
     */
    where: CostoCatedraWhereUniqueInput
  }

  /**
   * CostoCatedra updateMany
   */
  export type CostoCatedraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CostoCatedras.
     */
    data: XOR<CostoCatedraUpdateManyMutationInput, CostoCatedraUncheckedUpdateManyInput>
    /**
     * Filter which CostoCatedras to update
     */
    where?: CostoCatedraWhereInput
    /**
     * Limit how many CostoCatedras to update.
     */
    limit?: number
  }

  /**
   * CostoCatedra updateManyAndReturn
   */
  export type CostoCatedraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * The data used to update CostoCatedras.
     */
    data: XOR<CostoCatedraUpdateManyMutationInput, CostoCatedraUncheckedUpdateManyInput>
    /**
     * Filter which CostoCatedras to update
     */
    where?: CostoCatedraWhereInput
    /**
     * Limit how many CostoCatedras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CostoCatedra upsert
   */
  export type CostoCatedraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * The filter to search for the CostoCatedra to update in case it exists.
     */
    where: CostoCatedraWhereUniqueInput
    /**
     * In case the CostoCatedra found by the `where` argument doesn't exist, create a new CostoCatedra with this data.
     */
    create: XOR<CostoCatedraCreateInput, CostoCatedraUncheckedCreateInput>
    /**
     * In case the CostoCatedra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CostoCatedraUpdateInput, CostoCatedraUncheckedUpdateInput>
  }

  /**
   * CostoCatedra delete
   */
  export type CostoCatedraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
    /**
     * Filter which CostoCatedra to delete.
     */
    where: CostoCatedraWhereUniqueInput
  }

  /**
   * CostoCatedra deleteMany
   */
  export type CostoCatedraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CostoCatedras to delete
     */
    where?: CostoCatedraWhereInput
    /**
     * Limit how many CostoCatedras to delete.
     */
    limit?: number
  }

  /**
   * CostoCatedra without action
   */
  export type CostoCatedraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CostoCatedra
     */
    select?: CostoCatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CostoCatedra
     */
    omit?: CostoCatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CostoCatedraInclude<ExtArgs> | null
  }


  /**
   * Model DiaClase
   */

  export type AggregateDiaClase = {
    _count: DiaClaseCountAggregateOutputType | null
    _avg: DiaClaseAvgAggregateOutputType | null
    _sum: DiaClaseSumAggregateOutputType | null
    _min: DiaClaseMinAggregateOutputType | null
    _max: DiaClaseMaxAggregateOutputType | null
  }

  export type DiaClaseAvgAggregateOutputType = {
    id: number | null
    catedraId: number | null
  }

  export type DiaClaseSumAggregateOutputType = {
    id: number | null
    catedraId: number | null
  }

  export type DiaClaseMinAggregateOutputType = {
    id: number | null
    fecha: Date | null
    dia_semana: string | null
    created_at: Date | null
    updated_at: Date | null
    catedraId: number | null
  }

  export type DiaClaseMaxAggregateOutputType = {
    id: number | null
    fecha: Date | null
    dia_semana: string | null
    created_at: Date | null
    updated_at: Date | null
    catedraId: number | null
  }

  export type DiaClaseCountAggregateOutputType = {
    id: number
    fecha: number
    dia_semana: number
    created_at: number
    updated_at: number
    catedraId: number
    _all: number
  }


  export type DiaClaseAvgAggregateInputType = {
    id?: true
    catedraId?: true
  }

  export type DiaClaseSumAggregateInputType = {
    id?: true
    catedraId?: true
  }

  export type DiaClaseMinAggregateInputType = {
    id?: true
    fecha?: true
    dia_semana?: true
    created_at?: true
    updated_at?: true
    catedraId?: true
  }

  export type DiaClaseMaxAggregateInputType = {
    id?: true
    fecha?: true
    dia_semana?: true
    created_at?: true
    updated_at?: true
    catedraId?: true
  }

  export type DiaClaseCountAggregateInputType = {
    id?: true
    fecha?: true
    dia_semana?: true
    created_at?: true
    updated_at?: true
    catedraId?: true
    _all?: true
  }

  export type DiaClaseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiaClase to aggregate.
     */
    where?: DiaClaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiaClases to fetch.
     */
    orderBy?: DiaClaseOrderByWithRelationInput | DiaClaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DiaClaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiaClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiaClases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DiaClases
    **/
    _count?: true | DiaClaseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiaClaseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiaClaseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiaClaseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiaClaseMaxAggregateInputType
  }

  export type GetDiaClaseAggregateType<T extends DiaClaseAggregateArgs> = {
        [P in keyof T & keyof AggregateDiaClase]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiaClase[P]>
      : GetScalarType<T[P], AggregateDiaClase[P]>
  }




  export type DiaClaseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DiaClaseWhereInput
    orderBy?: DiaClaseOrderByWithAggregationInput | DiaClaseOrderByWithAggregationInput[]
    by: DiaClaseScalarFieldEnum[] | DiaClaseScalarFieldEnum
    having?: DiaClaseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiaClaseCountAggregateInputType | true
    _avg?: DiaClaseAvgAggregateInputType
    _sum?: DiaClaseSumAggregateInputType
    _min?: DiaClaseMinAggregateInputType
    _max?: DiaClaseMaxAggregateInputType
  }

  export type DiaClaseGroupByOutputType = {
    id: number
    fecha: Date
    dia_semana: string
    created_at: Date
    updated_at: Date
    catedraId: number
    _count: DiaClaseCountAggregateOutputType | null
    _avg: DiaClaseAvgAggregateOutputType | null
    _sum: DiaClaseSumAggregateOutputType | null
    _min: DiaClaseMinAggregateOutputType | null
    _max: DiaClaseMaxAggregateOutputType | null
  }

  type GetDiaClaseGroupByPayload<T extends DiaClaseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiaClaseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiaClaseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiaClaseGroupByOutputType[P]>
            : GetScalarType<T[P], DiaClaseGroupByOutputType[P]>
        }
      >
    >


  export type DiaClaseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    dia_semana?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
    Asistencia?: boolean | DiaClase$AsistenciaArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    _count?: boolean | DiaClaseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["diaClase"]>

  export type DiaClaseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    dia_semana?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["diaClase"]>

  export type DiaClaseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    dia_semana?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["diaClase"]>

  export type DiaClaseSelectScalar = {
    id?: boolean
    fecha?: boolean
    dia_semana?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
  }

  export type DiaClaseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fecha" | "dia_semana" | "created_at" | "updated_at" | "catedraId", ExtArgs["result"]["diaClase"]>
  export type DiaClaseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Asistencia?: boolean | DiaClase$AsistenciaArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    _count?: boolean | DiaClaseCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DiaClaseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }
  export type DiaClaseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }

  export type $DiaClasePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DiaClase"
    objects: {
      Asistencia: Prisma.$AsistenciaPayload<ExtArgs>[]
      Catedra: Prisma.$CatedraPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fecha: Date
      dia_semana: string
      created_at: Date
      updated_at: Date
      catedraId: number
    }, ExtArgs["result"]["diaClase"]>
    composites: {}
  }

  type DiaClaseGetPayload<S extends boolean | null | undefined | DiaClaseDefaultArgs> = $Result.GetResult<Prisma.$DiaClasePayload, S>

  type DiaClaseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DiaClaseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiaClaseCountAggregateInputType | true
    }

  export interface DiaClaseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DiaClase'], meta: { name: 'DiaClase' } }
    /**
     * Find zero or one DiaClase that matches the filter.
     * @param {DiaClaseFindUniqueArgs} args - Arguments to find a DiaClase
     * @example
     * // Get one DiaClase
     * const diaClase = await prisma.diaClase.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DiaClaseFindUniqueArgs>(args: SelectSubset<T, DiaClaseFindUniqueArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DiaClase that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DiaClaseFindUniqueOrThrowArgs} args - Arguments to find a DiaClase
     * @example
     * // Get one DiaClase
     * const diaClase = await prisma.diaClase.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DiaClaseFindUniqueOrThrowArgs>(args: SelectSubset<T, DiaClaseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiaClase that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaClaseFindFirstArgs} args - Arguments to find a DiaClase
     * @example
     * // Get one DiaClase
     * const diaClase = await prisma.diaClase.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DiaClaseFindFirstArgs>(args?: SelectSubset<T, DiaClaseFindFirstArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DiaClase that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaClaseFindFirstOrThrowArgs} args - Arguments to find a DiaClase
     * @example
     * // Get one DiaClase
     * const diaClase = await prisma.diaClase.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DiaClaseFindFirstOrThrowArgs>(args?: SelectSubset<T, DiaClaseFindFirstOrThrowArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DiaClases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaClaseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DiaClases
     * const diaClases = await prisma.diaClase.findMany()
     * 
     * // Get first 10 DiaClases
     * const diaClases = await prisma.diaClase.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const diaClaseWithIdOnly = await prisma.diaClase.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DiaClaseFindManyArgs>(args?: SelectSubset<T, DiaClaseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DiaClase.
     * @param {DiaClaseCreateArgs} args - Arguments to create a DiaClase.
     * @example
     * // Create one DiaClase
     * const DiaClase = await prisma.diaClase.create({
     *   data: {
     *     // ... data to create a DiaClase
     *   }
     * })
     * 
     */
    create<T extends DiaClaseCreateArgs>(args: SelectSubset<T, DiaClaseCreateArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DiaClases.
     * @param {DiaClaseCreateManyArgs} args - Arguments to create many DiaClases.
     * @example
     * // Create many DiaClases
     * const diaClase = await prisma.diaClase.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DiaClaseCreateManyArgs>(args?: SelectSubset<T, DiaClaseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DiaClases and returns the data saved in the database.
     * @param {DiaClaseCreateManyAndReturnArgs} args - Arguments to create many DiaClases.
     * @example
     * // Create many DiaClases
     * const diaClase = await prisma.diaClase.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DiaClases and only return the `id`
     * const diaClaseWithIdOnly = await prisma.diaClase.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DiaClaseCreateManyAndReturnArgs>(args?: SelectSubset<T, DiaClaseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DiaClase.
     * @param {DiaClaseDeleteArgs} args - Arguments to delete one DiaClase.
     * @example
     * // Delete one DiaClase
     * const DiaClase = await prisma.diaClase.delete({
     *   where: {
     *     // ... filter to delete one DiaClase
     *   }
     * })
     * 
     */
    delete<T extends DiaClaseDeleteArgs>(args: SelectSubset<T, DiaClaseDeleteArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DiaClase.
     * @param {DiaClaseUpdateArgs} args - Arguments to update one DiaClase.
     * @example
     * // Update one DiaClase
     * const diaClase = await prisma.diaClase.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DiaClaseUpdateArgs>(args: SelectSubset<T, DiaClaseUpdateArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DiaClases.
     * @param {DiaClaseDeleteManyArgs} args - Arguments to filter DiaClases to delete.
     * @example
     * // Delete a few DiaClases
     * const { count } = await prisma.diaClase.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DiaClaseDeleteManyArgs>(args?: SelectSubset<T, DiaClaseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiaClases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaClaseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DiaClases
     * const diaClase = await prisma.diaClase.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DiaClaseUpdateManyArgs>(args: SelectSubset<T, DiaClaseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DiaClases and returns the data updated in the database.
     * @param {DiaClaseUpdateManyAndReturnArgs} args - Arguments to update many DiaClases.
     * @example
     * // Update many DiaClases
     * const diaClase = await prisma.diaClase.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DiaClases and only return the `id`
     * const diaClaseWithIdOnly = await prisma.diaClase.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DiaClaseUpdateManyAndReturnArgs>(args: SelectSubset<T, DiaClaseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DiaClase.
     * @param {DiaClaseUpsertArgs} args - Arguments to update or create a DiaClase.
     * @example
     * // Update or create a DiaClase
     * const diaClase = await prisma.diaClase.upsert({
     *   create: {
     *     // ... data to create a DiaClase
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DiaClase we want to update
     *   }
     * })
     */
    upsert<T extends DiaClaseUpsertArgs>(args: SelectSubset<T, DiaClaseUpsertArgs<ExtArgs>>): Prisma__DiaClaseClient<$Result.GetResult<Prisma.$DiaClasePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DiaClases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaClaseCountArgs} args - Arguments to filter DiaClases to count.
     * @example
     * // Count the number of DiaClases
     * const count = await prisma.diaClase.count({
     *   where: {
     *     // ... the filter for the DiaClases we want to count
     *   }
     * })
    **/
    count<T extends DiaClaseCountArgs>(
      args?: Subset<T, DiaClaseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiaClaseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DiaClase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaClaseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiaClaseAggregateArgs>(args: Subset<T, DiaClaseAggregateArgs>): Prisma.PrismaPromise<GetDiaClaseAggregateType<T>>

    /**
     * Group by DiaClase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiaClaseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DiaClaseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DiaClaseGroupByArgs['orderBy'] }
        : { orderBy?: DiaClaseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DiaClaseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiaClaseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DiaClase model
   */
  readonly fields: DiaClaseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DiaClase.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DiaClaseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Asistencia<T extends DiaClase$AsistenciaArgs<ExtArgs> = {}>(args?: Subset<T, DiaClase$AsistenciaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AsistenciaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DiaClase model
   */
  interface DiaClaseFieldRefs {
    readonly id: FieldRef<"DiaClase", 'Int'>
    readonly fecha: FieldRef<"DiaClase", 'DateTime'>
    readonly dia_semana: FieldRef<"DiaClase", 'String'>
    readonly created_at: FieldRef<"DiaClase", 'DateTime'>
    readonly updated_at: FieldRef<"DiaClase", 'DateTime'>
    readonly catedraId: FieldRef<"DiaClase", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * DiaClase findUnique
   */
  export type DiaClaseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * Filter, which DiaClase to fetch.
     */
    where: DiaClaseWhereUniqueInput
  }

  /**
   * DiaClase findUniqueOrThrow
   */
  export type DiaClaseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * Filter, which DiaClase to fetch.
     */
    where: DiaClaseWhereUniqueInput
  }

  /**
   * DiaClase findFirst
   */
  export type DiaClaseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * Filter, which DiaClase to fetch.
     */
    where?: DiaClaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiaClases to fetch.
     */
    orderBy?: DiaClaseOrderByWithRelationInput | DiaClaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiaClases.
     */
    cursor?: DiaClaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiaClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiaClases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiaClases.
     */
    distinct?: DiaClaseScalarFieldEnum | DiaClaseScalarFieldEnum[]
  }

  /**
   * DiaClase findFirstOrThrow
   */
  export type DiaClaseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * Filter, which DiaClase to fetch.
     */
    where?: DiaClaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiaClases to fetch.
     */
    orderBy?: DiaClaseOrderByWithRelationInput | DiaClaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DiaClases.
     */
    cursor?: DiaClaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiaClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiaClases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DiaClases.
     */
    distinct?: DiaClaseScalarFieldEnum | DiaClaseScalarFieldEnum[]
  }

  /**
   * DiaClase findMany
   */
  export type DiaClaseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * Filter, which DiaClases to fetch.
     */
    where?: DiaClaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DiaClases to fetch.
     */
    orderBy?: DiaClaseOrderByWithRelationInput | DiaClaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DiaClases.
     */
    cursor?: DiaClaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DiaClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DiaClases.
     */
    skip?: number
    distinct?: DiaClaseScalarFieldEnum | DiaClaseScalarFieldEnum[]
  }

  /**
   * DiaClase create
   */
  export type DiaClaseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * The data needed to create a DiaClase.
     */
    data: XOR<DiaClaseCreateInput, DiaClaseUncheckedCreateInput>
  }

  /**
   * DiaClase createMany
   */
  export type DiaClaseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DiaClases.
     */
    data: DiaClaseCreateManyInput | DiaClaseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DiaClase createManyAndReturn
   */
  export type DiaClaseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * The data used to create many DiaClases.
     */
    data: DiaClaseCreateManyInput | DiaClaseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DiaClase update
   */
  export type DiaClaseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * The data needed to update a DiaClase.
     */
    data: XOR<DiaClaseUpdateInput, DiaClaseUncheckedUpdateInput>
    /**
     * Choose, which DiaClase to update.
     */
    where: DiaClaseWhereUniqueInput
  }

  /**
   * DiaClase updateMany
   */
  export type DiaClaseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DiaClases.
     */
    data: XOR<DiaClaseUpdateManyMutationInput, DiaClaseUncheckedUpdateManyInput>
    /**
     * Filter which DiaClases to update
     */
    where?: DiaClaseWhereInput
    /**
     * Limit how many DiaClases to update.
     */
    limit?: number
  }

  /**
   * DiaClase updateManyAndReturn
   */
  export type DiaClaseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * The data used to update DiaClases.
     */
    data: XOR<DiaClaseUpdateManyMutationInput, DiaClaseUncheckedUpdateManyInput>
    /**
     * Filter which DiaClases to update
     */
    where?: DiaClaseWhereInput
    /**
     * Limit how many DiaClases to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DiaClase upsert
   */
  export type DiaClaseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * The filter to search for the DiaClase to update in case it exists.
     */
    where: DiaClaseWhereUniqueInput
    /**
     * In case the DiaClase found by the `where` argument doesn't exist, create a new DiaClase with this data.
     */
    create: XOR<DiaClaseCreateInput, DiaClaseUncheckedCreateInput>
    /**
     * In case the DiaClase was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DiaClaseUpdateInput, DiaClaseUncheckedUpdateInput>
  }

  /**
   * DiaClase delete
   */
  export type DiaClaseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
    /**
     * Filter which DiaClase to delete.
     */
    where: DiaClaseWhereUniqueInput
  }

  /**
   * DiaClase deleteMany
   */
  export type DiaClaseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DiaClases to delete
     */
    where?: DiaClaseWhereInput
    /**
     * Limit how many DiaClases to delete.
     */
    limit?: number
  }

  /**
   * DiaClase.Asistencia
   */
  export type DiaClase$AsistenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asistencia
     */
    select?: AsistenciaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asistencia
     */
    omit?: AsistenciaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AsistenciaInclude<ExtArgs> | null
    where?: AsistenciaWhereInput
    orderBy?: AsistenciaOrderByWithRelationInput | AsistenciaOrderByWithRelationInput[]
    cursor?: AsistenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AsistenciaScalarFieldEnum | AsistenciaScalarFieldEnum[]
  }

  /**
   * DiaClase without action
   */
  export type DiaClaseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DiaClase
     */
    select?: DiaClaseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DiaClase
     */
    omit?: DiaClaseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DiaClaseInclude<ExtArgs> | null
  }


  /**
   * Model Docente
   */

  export type AggregateDocente = {
    _count: DocenteCountAggregateOutputType | null
    _avg: DocenteAvgAggregateOutputType | null
    _sum: DocenteSumAggregateOutputType | null
    _min: DocenteMinAggregateOutputType | null
    _max: DocenteMaxAggregateOutputType | null
  }

  export type DocenteAvgAggregateOutputType = {
    id: number | null
  }

  export type DocenteSumAggregateOutputType = {
    id: number | null
  }

  export type DocenteMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    otpSecret: string | null
    otpEnabled: boolean | null
    created_at: Date | null
    updated_at: Date | null
    direccion: string | null
    telefono: string | null
  }

  export type DocenteMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    otpSecret: string | null
    otpEnabled: boolean | null
    created_at: Date | null
    updated_at: Date | null
    direccion: string | null
    telefono: string | null
  }

  export type DocenteCountAggregateOutputType = {
    id: number
    nombre: number
    apellido: number
    email: number
    otpSecret: number
    otpEnabled: number
    created_at: number
    updated_at: number
    direccion: number
    telefono: number
    _all: number
  }


  export type DocenteAvgAggregateInputType = {
    id?: true
  }

  export type DocenteSumAggregateInputType = {
    id?: true
  }

  export type DocenteMinAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    otpSecret?: true
    otpEnabled?: true
    created_at?: true
    updated_at?: true
    direccion?: true
    telefono?: true
  }

  export type DocenteMaxAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    otpSecret?: true
    otpEnabled?: true
    created_at?: true
    updated_at?: true
    direccion?: true
    telefono?: true
  }

  export type DocenteCountAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    otpSecret?: true
    otpEnabled?: true
    created_at?: true
    updated_at?: true
    direccion?: true
    telefono?: true
    _all?: true
  }

  export type DocenteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Docente to aggregate.
     */
    where?: DocenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Docentes to fetch.
     */
    orderBy?: DocenteOrderByWithRelationInput | DocenteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Docentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Docentes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Docentes
    **/
    _count?: true | DocenteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocenteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocenteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocenteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocenteMaxAggregateInputType
  }

  export type GetDocenteAggregateType<T extends DocenteAggregateArgs> = {
        [P in keyof T & keyof AggregateDocente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocente[P]>
      : GetScalarType<T[P], AggregateDocente[P]>
  }




  export type DocenteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocenteWhereInput
    orderBy?: DocenteOrderByWithAggregationInput | DocenteOrderByWithAggregationInput[]
    by: DocenteScalarFieldEnum[] | DocenteScalarFieldEnum
    having?: DocenteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocenteCountAggregateInputType | true
    _avg?: DocenteAvgAggregateInputType
    _sum?: DocenteSumAggregateInputType
    _min?: DocenteMinAggregateInputType
    _max?: DocenteMaxAggregateInputType
  }

  export type DocenteGroupByOutputType = {
    id: number
    nombre: string
    apellido: string
    email: string
    otpSecret: string | null
    otpEnabled: boolean
    created_at: Date
    updated_at: Date
    direccion: string | null
    telefono: string | null
    _count: DocenteCountAggregateOutputType | null
    _avg: DocenteAvgAggregateOutputType | null
    _sum: DocenteSumAggregateOutputType | null
    _min: DocenteMinAggregateOutputType | null
    _max: DocenteMaxAggregateOutputType | null
  }

  type GetDocenteGroupByPayload<T extends DocenteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocenteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocenteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocenteGroupByOutputType[P]>
            : GetScalarType<T[P], DocenteGroupByOutputType[P]>
        }
      >
    >


  export type DocenteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    otpSecret?: boolean
    otpEnabled?: boolean
    created_at?: boolean
    updated_at?: boolean
    direccion?: boolean
    telefono?: boolean
    Catedra?: boolean | Docente$CatedraArgs<ExtArgs>
    ComentarioPublicacion?: boolean | Docente$ComentarioPublicacionArgs<ExtArgs>
    Pago?: boolean | Docente$PagoArgs<ExtArgs>
    PlanDeClases?: boolean | Docente$PlanDeClasesArgs<ExtArgs>
    Publicacion?: boolean | Docente$PublicacionArgs<ExtArgs>
    PublicacionInteraccion?: boolean | Docente$PublicacionInteraccionArgs<ExtArgs>
    _count?: boolean | DocenteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["docente"]>

  export type DocenteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    otpSecret?: boolean
    otpEnabled?: boolean
    created_at?: boolean
    updated_at?: boolean
    direccion?: boolean
    telefono?: boolean
  }, ExtArgs["result"]["docente"]>

  export type DocenteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    otpSecret?: boolean
    otpEnabled?: boolean
    created_at?: boolean
    updated_at?: boolean
    direccion?: boolean
    telefono?: boolean
  }, ExtArgs["result"]["docente"]>

  export type DocenteSelectScalar = {
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    otpSecret?: boolean
    otpEnabled?: boolean
    created_at?: boolean
    updated_at?: boolean
    direccion?: boolean
    telefono?: boolean
  }

  export type DocenteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "apellido" | "email" | "otpSecret" | "otpEnabled" | "created_at" | "updated_at" | "direccion" | "telefono", ExtArgs["result"]["docente"]>
  export type DocenteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | Docente$CatedraArgs<ExtArgs>
    ComentarioPublicacion?: boolean | Docente$ComentarioPublicacionArgs<ExtArgs>
    Pago?: boolean | Docente$PagoArgs<ExtArgs>
    PlanDeClases?: boolean | Docente$PlanDeClasesArgs<ExtArgs>
    Publicacion?: boolean | Docente$PublicacionArgs<ExtArgs>
    PublicacionInteraccion?: boolean | Docente$PublicacionInteraccionArgs<ExtArgs>
    _count?: boolean | DocenteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DocenteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type DocenteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $DocentePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Docente"
    objects: {
      Catedra: Prisma.$CatedraPayload<ExtArgs>[]
      ComentarioPublicacion: Prisma.$ComentarioPublicacionPayload<ExtArgs>[]
      Pago: Prisma.$PagoPayload<ExtArgs>[]
      PlanDeClases: Prisma.$PlanDeClasesPayload<ExtArgs>[]
      Publicacion: Prisma.$PublicacionPayload<ExtArgs>[]
      PublicacionInteraccion: Prisma.$PublicacionInteraccionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      apellido: string
      email: string
      otpSecret: string | null
      otpEnabled: boolean
      created_at: Date
      updated_at: Date
      direccion: string | null
      telefono: string | null
    }, ExtArgs["result"]["docente"]>
    composites: {}
  }

  type DocenteGetPayload<S extends boolean | null | undefined | DocenteDefaultArgs> = $Result.GetResult<Prisma.$DocentePayload, S>

  type DocenteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DocenteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DocenteCountAggregateInputType | true
    }

  export interface DocenteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Docente'], meta: { name: 'Docente' } }
    /**
     * Find zero or one Docente that matches the filter.
     * @param {DocenteFindUniqueArgs} args - Arguments to find a Docente
     * @example
     * // Get one Docente
     * const docente = await prisma.docente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocenteFindUniqueArgs>(args: SelectSubset<T, DocenteFindUniqueArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Docente that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DocenteFindUniqueOrThrowArgs} args - Arguments to find a Docente
     * @example
     * // Get one Docente
     * const docente = await prisma.docente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocenteFindUniqueOrThrowArgs>(args: SelectSubset<T, DocenteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Docente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocenteFindFirstArgs} args - Arguments to find a Docente
     * @example
     * // Get one Docente
     * const docente = await prisma.docente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocenteFindFirstArgs>(args?: SelectSubset<T, DocenteFindFirstArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Docente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocenteFindFirstOrThrowArgs} args - Arguments to find a Docente
     * @example
     * // Get one Docente
     * const docente = await prisma.docente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocenteFindFirstOrThrowArgs>(args?: SelectSubset<T, DocenteFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Docentes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocenteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Docentes
     * const docentes = await prisma.docente.findMany()
     * 
     * // Get first 10 Docentes
     * const docentes = await prisma.docente.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const docenteWithIdOnly = await prisma.docente.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DocenteFindManyArgs>(args?: SelectSubset<T, DocenteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Docente.
     * @param {DocenteCreateArgs} args - Arguments to create a Docente.
     * @example
     * // Create one Docente
     * const Docente = await prisma.docente.create({
     *   data: {
     *     // ... data to create a Docente
     *   }
     * })
     * 
     */
    create<T extends DocenteCreateArgs>(args: SelectSubset<T, DocenteCreateArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Docentes.
     * @param {DocenteCreateManyArgs} args - Arguments to create many Docentes.
     * @example
     * // Create many Docentes
     * const docente = await prisma.docente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocenteCreateManyArgs>(args?: SelectSubset<T, DocenteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Docentes and returns the data saved in the database.
     * @param {DocenteCreateManyAndReturnArgs} args - Arguments to create many Docentes.
     * @example
     * // Create many Docentes
     * const docente = await prisma.docente.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Docentes and only return the `id`
     * const docenteWithIdOnly = await prisma.docente.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocenteCreateManyAndReturnArgs>(args?: SelectSubset<T, DocenteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Docente.
     * @param {DocenteDeleteArgs} args - Arguments to delete one Docente.
     * @example
     * // Delete one Docente
     * const Docente = await prisma.docente.delete({
     *   where: {
     *     // ... filter to delete one Docente
     *   }
     * })
     * 
     */
    delete<T extends DocenteDeleteArgs>(args: SelectSubset<T, DocenteDeleteArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Docente.
     * @param {DocenteUpdateArgs} args - Arguments to update one Docente.
     * @example
     * // Update one Docente
     * const docente = await prisma.docente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocenteUpdateArgs>(args: SelectSubset<T, DocenteUpdateArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Docentes.
     * @param {DocenteDeleteManyArgs} args - Arguments to filter Docentes to delete.
     * @example
     * // Delete a few Docentes
     * const { count } = await prisma.docente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocenteDeleteManyArgs>(args?: SelectSubset<T, DocenteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Docentes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocenteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Docentes
     * const docente = await prisma.docente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocenteUpdateManyArgs>(args: SelectSubset<T, DocenteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Docentes and returns the data updated in the database.
     * @param {DocenteUpdateManyAndReturnArgs} args - Arguments to update many Docentes.
     * @example
     * // Update many Docentes
     * const docente = await prisma.docente.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Docentes and only return the `id`
     * const docenteWithIdOnly = await prisma.docente.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DocenteUpdateManyAndReturnArgs>(args: SelectSubset<T, DocenteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Docente.
     * @param {DocenteUpsertArgs} args - Arguments to update or create a Docente.
     * @example
     * // Update or create a Docente
     * const docente = await prisma.docente.upsert({
     *   create: {
     *     // ... data to create a Docente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Docente we want to update
     *   }
     * })
     */
    upsert<T extends DocenteUpsertArgs>(args: SelectSubset<T, DocenteUpsertArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Docentes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocenteCountArgs} args - Arguments to filter Docentes to count.
     * @example
     * // Count the number of Docentes
     * const count = await prisma.docente.count({
     *   where: {
     *     // ... the filter for the Docentes we want to count
     *   }
     * })
    **/
    count<T extends DocenteCountArgs>(
      args?: Subset<T, DocenteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocenteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Docente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocenteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocenteAggregateArgs>(args: Subset<T, DocenteAggregateArgs>): Prisma.PrismaPromise<GetDocenteAggregateType<T>>

    /**
     * Group by Docente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocenteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocenteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocenteGroupByArgs['orderBy'] }
        : { orderBy?: DocenteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocenteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocenteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Docente model
   */
  readonly fields: DocenteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Docente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocenteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Catedra<T extends Docente$CatedraArgs<ExtArgs> = {}>(args?: Subset<T, Docente$CatedraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ComentarioPublicacion<T extends Docente$ComentarioPublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Docente$ComentarioPublicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Pago<T extends Docente$PagoArgs<ExtArgs> = {}>(args?: Subset<T, Docente$PagoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PlanDeClases<T extends Docente$PlanDeClasesArgs<ExtArgs> = {}>(args?: Subset<T, Docente$PlanDeClasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Publicacion<T extends Docente$PublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Docente$PublicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    PublicacionInteraccion<T extends Docente$PublicacionInteraccionArgs<ExtArgs> = {}>(args?: Subset<T, Docente$PublicacionInteraccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Docente model
   */
  interface DocenteFieldRefs {
    readonly id: FieldRef<"Docente", 'Int'>
    readonly nombre: FieldRef<"Docente", 'String'>
    readonly apellido: FieldRef<"Docente", 'String'>
    readonly email: FieldRef<"Docente", 'String'>
    readonly otpSecret: FieldRef<"Docente", 'String'>
    readonly otpEnabled: FieldRef<"Docente", 'Boolean'>
    readonly created_at: FieldRef<"Docente", 'DateTime'>
    readonly updated_at: FieldRef<"Docente", 'DateTime'>
    readonly direccion: FieldRef<"Docente", 'String'>
    readonly telefono: FieldRef<"Docente", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Docente findUnique
   */
  export type DocenteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * Filter, which Docente to fetch.
     */
    where: DocenteWhereUniqueInput
  }

  /**
   * Docente findUniqueOrThrow
   */
  export type DocenteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * Filter, which Docente to fetch.
     */
    where: DocenteWhereUniqueInput
  }

  /**
   * Docente findFirst
   */
  export type DocenteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * Filter, which Docente to fetch.
     */
    where?: DocenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Docentes to fetch.
     */
    orderBy?: DocenteOrderByWithRelationInput | DocenteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Docentes.
     */
    cursor?: DocenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Docentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Docentes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Docentes.
     */
    distinct?: DocenteScalarFieldEnum | DocenteScalarFieldEnum[]
  }

  /**
   * Docente findFirstOrThrow
   */
  export type DocenteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * Filter, which Docente to fetch.
     */
    where?: DocenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Docentes to fetch.
     */
    orderBy?: DocenteOrderByWithRelationInput | DocenteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Docentes.
     */
    cursor?: DocenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Docentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Docentes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Docentes.
     */
    distinct?: DocenteScalarFieldEnum | DocenteScalarFieldEnum[]
  }

  /**
   * Docente findMany
   */
  export type DocenteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * Filter, which Docentes to fetch.
     */
    where?: DocenteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Docentes to fetch.
     */
    orderBy?: DocenteOrderByWithRelationInput | DocenteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Docentes.
     */
    cursor?: DocenteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Docentes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Docentes.
     */
    skip?: number
    distinct?: DocenteScalarFieldEnum | DocenteScalarFieldEnum[]
  }

  /**
   * Docente create
   */
  export type DocenteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * The data needed to create a Docente.
     */
    data: XOR<DocenteCreateInput, DocenteUncheckedCreateInput>
  }

  /**
   * Docente createMany
   */
  export type DocenteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Docentes.
     */
    data: DocenteCreateManyInput | DocenteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Docente createManyAndReturn
   */
  export type DocenteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * The data used to create many Docentes.
     */
    data: DocenteCreateManyInput | DocenteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Docente update
   */
  export type DocenteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * The data needed to update a Docente.
     */
    data: XOR<DocenteUpdateInput, DocenteUncheckedUpdateInput>
    /**
     * Choose, which Docente to update.
     */
    where: DocenteWhereUniqueInput
  }

  /**
   * Docente updateMany
   */
  export type DocenteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Docentes.
     */
    data: XOR<DocenteUpdateManyMutationInput, DocenteUncheckedUpdateManyInput>
    /**
     * Filter which Docentes to update
     */
    where?: DocenteWhereInput
    /**
     * Limit how many Docentes to update.
     */
    limit?: number
  }

  /**
   * Docente updateManyAndReturn
   */
  export type DocenteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * The data used to update Docentes.
     */
    data: XOR<DocenteUpdateManyMutationInput, DocenteUncheckedUpdateManyInput>
    /**
     * Filter which Docentes to update
     */
    where?: DocenteWhereInput
    /**
     * Limit how many Docentes to update.
     */
    limit?: number
  }

  /**
   * Docente upsert
   */
  export type DocenteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * The filter to search for the Docente to update in case it exists.
     */
    where: DocenteWhereUniqueInput
    /**
     * In case the Docente found by the `where` argument doesn't exist, create a new Docente with this data.
     */
    create: XOR<DocenteCreateInput, DocenteUncheckedCreateInput>
    /**
     * In case the Docente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocenteUpdateInput, DocenteUncheckedUpdateInput>
  }

  /**
   * Docente delete
   */
  export type DocenteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    /**
     * Filter which Docente to delete.
     */
    where: DocenteWhereUniqueInput
  }

  /**
   * Docente deleteMany
   */
  export type DocenteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Docentes to delete
     */
    where?: DocenteWhereInput
    /**
     * Limit how many Docentes to delete.
     */
    limit?: number
  }

  /**
   * Docente.Catedra
   */
  export type Docente$CatedraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    where?: CatedraWhereInput
    orderBy?: CatedraOrderByWithRelationInput | CatedraOrderByWithRelationInput[]
    cursor?: CatedraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CatedraScalarFieldEnum | CatedraScalarFieldEnum[]
  }

  /**
   * Docente.ComentarioPublicacion
   */
  export type Docente$ComentarioPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    where?: ComentarioPublicacionWhereInput
    orderBy?: ComentarioPublicacionOrderByWithRelationInput | ComentarioPublicacionOrderByWithRelationInput[]
    cursor?: ComentarioPublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioPublicacionScalarFieldEnum | ComentarioPublicacionScalarFieldEnum[]
  }

  /**
   * Docente.Pago
   */
  export type Docente$PagoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    cursor?: PagoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Docente.PlanDeClases
   */
  export type Docente$PlanDeClasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    where?: PlanDeClasesWhereInput
    orderBy?: PlanDeClasesOrderByWithRelationInput | PlanDeClasesOrderByWithRelationInput[]
    cursor?: PlanDeClasesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlanDeClasesScalarFieldEnum | PlanDeClasesScalarFieldEnum[]
  }

  /**
   * Docente.Publicacion
   */
  export type Docente$PublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    where?: PublicacionWhereInput
    orderBy?: PublicacionOrderByWithRelationInput | PublicacionOrderByWithRelationInput[]
    cursor?: PublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionScalarFieldEnum | PublicacionScalarFieldEnum[]
  }

  /**
   * Docente.PublicacionInteraccion
   */
  export type Docente$PublicacionInteraccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    where?: PublicacionInteraccionWhereInput
    orderBy?: PublicacionInteraccionOrderByWithRelationInput | PublicacionInteraccionOrderByWithRelationInput[]
    cursor?: PublicacionInteraccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionInteraccionScalarFieldEnum | PublicacionInteraccionScalarFieldEnum[]
  }

  /**
   * Docente without action
   */
  export type DocenteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
  }


  /**
   * Model EditSuggestion
   */

  export type AggregateEditSuggestion = {
    _count: EditSuggestionCountAggregateOutputType | null
    _avg: EditSuggestionAvgAggregateOutputType | null
    _sum: EditSuggestionSumAggregateOutputType | null
    _min: EditSuggestionMinAggregateOutputType | null
    _max: EditSuggestionMaxAggregateOutputType | null
  }

  export type EditSuggestionAvgAggregateOutputType = {
    id: number | null
    birth_year: number | null
    birth_month: number | null
    birth_day: number | null
    death_year: number | null
    death_month: number | null
    death_day: number | null
    composerId: number | null
    points: number | null
  }

  export type EditSuggestionSumAggregateOutputType = {
    id: number | null
    birth_year: number | null
    birth_month: number | null
    birth_day: number | null
    death_year: number | null
    death_month: number | null
    death_day: number | null
    composerId: number | null
    points: number | null
  }

  export type EditSuggestionMinAggregateOutputType = {
    id: number | null
    first_name: string | null
    last_name: string | null
    birth_year: number | null
    birth_month: number | null
    birth_day: number | null
    death_year: number | null
    death_month: number | null
    death_day: number | null
    bio: string | null
    notable_works: string | null
    period: string | null
    references: string | null
    youtube_link: string | null
    reason: string | null
    status: string | null
    suggester_email: string | null
    suggester_ip: string | null
    created_at: Date | null
    updated_at: Date | null
    composerId: number | null
    is_student_contribution: boolean | null
    student_first_name: string | null
    student_last_name: string | null
    points: number | null
  }

  export type EditSuggestionMaxAggregateOutputType = {
    id: number | null
    first_name: string | null
    last_name: string | null
    birth_year: number | null
    birth_month: number | null
    birth_day: number | null
    death_year: number | null
    death_month: number | null
    death_day: number | null
    bio: string | null
    notable_works: string | null
    period: string | null
    references: string | null
    youtube_link: string | null
    reason: string | null
    status: string | null
    suggester_email: string | null
    suggester_ip: string | null
    created_at: Date | null
    updated_at: Date | null
    composerId: number | null
    is_student_contribution: boolean | null
    student_first_name: string | null
    student_last_name: string | null
    points: number | null
  }

  export type EditSuggestionCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    birth_year: number
    birth_month: number
    birth_day: number
    death_year: number
    death_month: number
    death_day: number
    bio: number
    notable_works: number
    period: number
    references: number
    youtube_link: number
    mainRole: number
    reason: number
    status: number
    suggester_email: number
    suggester_ip: number
    created_at: number
    updated_at: number
    composerId: number
    is_student_contribution: number
    student_first_name: number
    student_last_name: number
    points: number
    _all: number
  }


  export type EditSuggestionAvgAggregateInputType = {
    id?: true
    birth_year?: true
    birth_month?: true
    birth_day?: true
    death_year?: true
    death_month?: true
    death_day?: true
    composerId?: true
    points?: true
  }

  export type EditSuggestionSumAggregateInputType = {
    id?: true
    birth_year?: true
    birth_month?: true
    birth_day?: true
    death_year?: true
    death_month?: true
    death_day?: true
    composerId?: true
    points?: true
  }

  export type EditSuggestionMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    birth_year?: true
    birth_month?: true
    birth_day?: true
    death_year?: true
    death_month?: true
    death_day?: true
    bio?: true
    notable_works?: true
    period?: true
    references?: true
    youtube_link?: true
    reason?: true
    status?: true
    suggester_email?: true
    suggester_ip?: true
    created_at?: true
    updated_at?: true
    composerId?: true
    is_student_contribution?: true
    student_first_name?: true
    student_last_name?: true
    points?: true
  }

  export type EditSuggestionMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    birth_year?: true
    birth_month?: true
    birth_day?: true
    death_year?: true
    death_month?: true
    death_day?: true
    bio?: true
    notable_works?: true
    period?: true
    references?: true
    youtube_link?: true
    reason?: true
    status?: true
    suggester_email?: true
    suggester_ip?: true
    created_at?: true
    updated_at?: true
    composerId?: true
    is_student_contribution?: true
    student_first_name?: true
    student_last_name?: true
    points?: true
  }

  export type EditSuggestionCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    birth_year?: true
    birth_month?: true
    birth_day?: true
    death_year?: true
    death_month?: true
    death_day?: true
    bio?: true
    notable_works?: true
    period?: true
    references?: true
    youtube_link?: true
    mainRole?: true
    reason?: true
    status?: true
    suggester_email?: true
    suggester_ip?: true
    created_at?: true
    updated_at?: true
    composerId?: true
    is_student_contribution?: true
    student_first_name?: true
    student_last_name?: true
    points?: true
    _all?: true
  }

  export type EditSuggestionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EditSuggestion to aggregate.
     */
    where?: EditSuggestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EditSuggestions to fetch.
     */
    orderBy?: EditSuggestionOrderByWithRelationInput | EditSuggestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EditSuggestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EditSuggestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EditSuggestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EditSuggestions
    **/
    _count?: true | EditSuggestionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EditSuggestionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EditSuggestionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EditSuggestionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EditSuggestionMaxAggregateInputType
  }

  export type GetEditSuggestionAggregateType<T extends EditSuggestionAggregateArgs> = {
        [P in keyof T & keyof AggregateEditSuggestion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEditSuggestion[P]>
      : GetScalarType<T[P], AggregateEditSuggestion[P]>
  }




  export type EditSuggestionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EditSuggestionWhereInput
    orderBy?: EditSuggestionOrderByWithAggregationInput | EditSuggestionOrderByWithAggregationInput[]
    by: EditSuggestionScalarFieldEnum[] | EditSuggestionScalarFieldEnum
    having?: EditSuggestionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EditSuggestionCountAggregateInputType | true
    _avg?: EditSuggestionAvgAggregateInputType
    _sum?: EditSuggestionSumAggregateInputType
    _min?: EditSuggestionMinAggregateInputType
    _max?: EditSuggestionMaxAggregateInputType
  }

  export type EditSuggestionGroupByOutputType = {
    id: number
    first_name: string | null
    last_name: string | null
    birth_year: number | null
    birth_month: number | null
    birth_day: number | null
    death_year: number | null
    death_month: number | null
    death_day: number | null
    bio: string | null
    notable_works: string | null
    period: string | null
    references: string | null
    youtube_link: string | null
    mainRole: $Enums.RoleType[]
    reason: string
    status: string
    suggester_email: string
    suggester_ip: string | null
    created_at: Date
    updated_at: Date
    composerId: number
    is_student_contribution: boolean | null
    student_first_name: string | null
    student_last_name: string | null
    points: number
    _count: EditSuggestionCountAggregateOutputType | null
    _avg: EditSuggestionAvgAggregateOutputType | null
    _sum: EditSuggestionSumAggregateOutputType | null
    _min: EditSuggestionMinAggregateOutputType | null
    _max: EditSuggestionMaxAggregateOutputType | null
  }

  type GetEditSuggestionGroupByPayload<T extends EditSuggestionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EditSuggestionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EditSuggestionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EditSuggestionGroupByOutputType[P]>
            : GetScalarType<T[P], EditSuggestionGroupByOutputType[P]>
        }
      >
    >


  export type EditSuggestionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    birth_year?: boolean
    birth_month?: boolean
    birth_day?: boolean
    death_year?: boolean
    death_month?: boolean
    death_day?: boolean
    bio?: boolean
    notable_works?: boolean
    period?: boolean
    references?: boolean
    youtube_link?: boolean
    mainRole?: boolean
    reason?: boolean
    status?: boolean
    suggester_email?: boolean
    suggester_ip?: boolean
    created_at?: boolean
    updated_at?: boolean
    composerId?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    points?: boolean
    Composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["editSuggestion"]>

  export type EditSuggestionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    birth_year?: boolean
    birth_month?: boolean
    birth_day?: boolean
    death_year?: boolean
    death_month?: boolean
    death_day?: boolean
    bio?: boolean
    notable_works?: boolean
    period?: boolean
    references?: boolean
    youtube_link?: boolean
    mainRole?: boolean
    reason?: boolean
    status?: boolean
    suggester_email?: boolean
    suggester_ip?: boolean
    created_at?: boolean
    updated_at?: boolean
    composerId?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    points?: boolean
    Composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["editSuggestion"]>

  export type EditSuggestionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    birth_year?: boolean
    birth_month?: boolean
    birth_day?: boolean
    death_year?: boolean
    death_month?: boolean
    death_day?: boolean
    bio?: boolean
    notable_works?: boolean
    period?: boolean
    references?: boolean
    youtube_link?: boolean
    mainRole?: boolean
    reason?: boolean
    status?: boolean
    suggester_email?: boolean
    suggester_ip?: boolean
    created_at?: boolean
    updated_at?: boolean
    composerId?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    points?: boolean
    Composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["editSuggestion"]>

  export type EditSuggestionSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    birth_year?: boolean
    birth_month?: boolean
    birth_day?: boolean
    death_year?: boolean
    death_month?: boolean
    death_day?: boolean
    bio?: boolean
    notable_works?: boolean
    period?: boolean
    references?: boolean
    youtube_link?: boolean
    mainRole?: boolean
    reason?: boolean
    status?: boolean
    suggester_email?: boolean
    suggester_ip?: boolean
    created_at?: boolean
    updated_at?: boolean
    composerId?: boolean
    is_student_contribution?: boolean
    student_first_name?: boolean
    student_last_name?: boolean
    points?: boolean
  }

  export type EditSuggestionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "first_name" | "last_name" | "birth_year" | "birth_month" | "birth_day" | "death_year" | "death_month" | "death_day" | "bio" | "notable_works" | "period" | "references" | "youtube_link" | "mainRole" | "reason" | "status" | "suggester_email" | "suggester_ip" | "created_at" | "updated_at" | "composerId" | "is_student_contribution" | "student_first_name" | "student_last_name" | "points", ExtArgs["result"]["editSuggestion"]>
  export type EditSuggestionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }
  export type EditSuggestionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }
  export type EditSuggestionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Composer?: boolean | ComposerDefaultArgs<ExtArgs>
  }

  export type $EditSuggestionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EditSuggestion"
    objects: {
      Composer: Prisma.$ComposerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      first_name: string | null
      last_name: string | null
      birth_year: number | null
      birth_month: number | null
      birth_day: number | null
      death_year: number | null
      death_month: number | null
      death_day: number | null
      bio: string | null
      notable_works: string | null
      period: string | null
      references: string | null
      youtube_link: string | null
      mainRole: $Enums.RoleType[]
      reason: string
      status: string
      suggester_email: string
      suggester_ip: string | null
      created_at: Date
      updated_at: Date
      composerId: number
      is_student_contribution: boolean | null
      student_first_name: string | null
      student_last_name: string | null
      points: number
    }, ExtArgs["result"]["editSuggestion"]>
    composites: {}
  }

  type EditSuggestionGetPayload<S extends boolean | null | undefined | EditSuggestionDefaultArgs> = $Result.GetResult<Prisma.$EditSuggestionPayload, S>

  type EditSuggestionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EditSuggestionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EditSuggestionCountAggregateInputType | true
    }

  export interface EditSuggestionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EditSuggestion'], meta: { name: 'EditSuggestion' } }
    /**
     * Find zero or one EditSuggestion that matches the filter.
     * @param {EditSuggestionFindUniqueArgs} args - Arguments to find a EditSuggestion
     * @example
     * // Get one EditSuggestion
     * const editSuggestion = await prisma.editSuggestion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EditSuggestionFindUniqueArgs>(args: SelectSubset<T, EditSuggestionFindUniqueArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EditSuggestion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EditSuggestionFindUniqueOrThrowArgs} args - Arguments to find a EditSuggestion
     * @example
     * // Get one EditSuggestion
     * const editSuggestion = await prisma.editSuggestion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EditSuggestionFindUniqueOrThrowArgs>(args: SelectSubset<T, EditSuggestionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EditSuggestion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditSuggestionFindFirstArgs} args - Arguments to find a EditSuggestion
     * @example
     * // Get one EditSuggestion
     * const editSuggestion = await prisma.editSuggestion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EditSuggestionFindFirstArgs>(args?: SelectSubset<T, EditSuggestionFindFirstArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EditSuggestion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditSuggestionFindFirstOrThrowArgs} args - Arguments to find a EditSuggestion
     * @example
     * // Get one EditSuggestion
     * const editSuggestion = await prisma.editSuggestion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EditSuggestionFindFirstOrThrowArgs>(args?: SelectSubset<T, EditSuggestionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EditSuggestions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditSuggestionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EditSuggestions
     * const editSuggestions = await prisma.editSuggestion.findMany()
     * 
     * // Get first 10 EditSuggestions
     * const editSuggestions = await prisma.editSuggestion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const editSuggestionWithIdOnly = await prisma.editSuggestion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EditSuggestionFindManyArgs>(args?: SelectSubset<T, EditSuggestionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EditSuggestion.
     * @param {EditSuggestionCreateArgs} args - Arguments to create a EditSuggestion.
     * @example
     * // Create one EditSuggestion
     * const EditSuggestion = await prisma.editSuggestion.create({
     *   data: {
     *     // ... data to create a EditSuggestion
     *   }
     * })
     * 
     */
    create<T extends EditSuggestionCreateArgs>(args: SelectSubset<T, EditSuggestionCreateArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EditSuggestions.
     * @param {EditSuggestionCreateManyArgs} args - Arguments to create many EditSuggestions.
     * @example
     * // Create many EditSuggestions
     * const editSuggestion = await prisma.editSuggestion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EditSuggestionCreateManyArgs>(args?: SelectSubset<T, EditSuggestionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EditSuggestions and returns the data saved in the database.
     * @param {EditSuggestionCreateManyAndReturnArgs} args - Arguments to create many EditSuggestions.
     * @example
     * // Create many EditSuggestions
     * const editSuggestion = await prisma.editSuggestion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EditSuggestions and only return the `id`
     * const editSuggestionWithIdOnly = await prisma.editSuggestion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EditSuggestionCreateManyAndReturnArgs>(args?: SelectSubset<T, EditSuggestionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EditSuggestion.
     * @param {EditSuggestionDeleteArgs} args - Arguments to delete one EditSuggestion.
     * @example
     * // Delete one EditSuggestion
     * const EditSuggestion = await prisma.editSuggestion.delete({
     *   where: {
     *     // ... filter to delete one EditSuggestion
     *   }
     * })
     * 
     */
    delete<T extends EditSuggestionDeleteArgs>(args: SelectSubset<T, EditSuggestionDeleteArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EditSuggestion.
     * @param {EditSuggestionUpdateArgs} args - Arguments to update one EditSuggestion.
     * @example
     * // Update one EditSuggestion
     * const editSuggestion = await prisma.editSuggestion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EditSuggestionUpdateArgs>(args: SelectSubset<T, EditSuggestionUpdateArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EditSuggestions.
     * @param {EditSuggestionDeleteManyArgs} args - Arguments to filter EditSuggestions to delete.
     * @example
     * // Delete a few EditSuggestions
     * const { count } = await prisma.editSuggestion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EditSuggestionDeleteManyArgs>(args?: SelectSubset<T, EditSuggestionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EditSuggestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditSuggestionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EditSuggestions
     * const editSuggestion = await prisma.editSuggestion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EditSuggestionUpdateManyArgs>(args: SelectSubset<T, EditSuggestionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EditSuggestions and returns the data updated in the database.
     * @param {EditSuggestionUpdateManyAndReturnArgs} args - Arguments to update many EditSuggestions.
     * @example
     * // Update many EditSuggestions
     * const editSuggestion = await prisma.editSuggestion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EditSuggestions and only return the `id`
     * const editSuggestionWithIdOnly = await prisma.editSuggestion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EditSuggestionUpdateManyAndReturnArgs>(args: SelectSubset<T, EditSuggestionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EditSuggestion.
     * @param {EditSuggestionUpsertArgs} args - Arguments to update or create a EditSuggestion.
     * @example
     * // Update or create a EditSuggestion
     * const editSuggestion = await prisma.editSuggestion.upsert({
     *   create: {
     *     // ... data to create a EditSuggestion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EditSuggestion we want to update
     *   }
     * })
     */
    upsert<T extends EditSuggestionUpsertArgs>(args: SelectSubset<T, EditSuggestionUpsertArgs<ExtArgs>>): Prisma__EditSuggestionClient<$Result.GetResult<Prisma.$EditSuggestionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EditSuggestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditSuggestionCountArgs} args - Arguments to filter EditSuggestions to count.
     * @example
     * // Count the number of EditSuggestions
     * const count = await prisma.editSuggestion.count({
     *   where: {
     *     // ... the filter for the EditSuggestions we want to count
     *   }
     * })
    **/
    count<T extends EditSuggestionCountArgs>(
      args?: Subset<T, EditSuggestionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EditSuggestionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EditSuggestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditSuggestionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EditSuggestionAggregateArgs>(args: Subset<T, EditSuggestionAggregateArgs>): Prisma.PrismaPromise<GetEditSuggestionAggregateType<T>>

    /**
     * Group by EditSuggestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EditSuggestionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EditSuggestionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EditSuggestionGroupByArgs['orderBy'] }
        : { orderBy?: EditSuggestionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EditSuggestionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEditSuggestionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EditSuggestion model
   */
  readonly fields: EditSuggestionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EditSuggestion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EditSuggestionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Composer<T extends ComposerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ComposerDefaultArgs<ExtArgs>>): Prisma__ComposerClient<$Result.GetResult<Prisma.$ComposerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EditSuggestion model
   */
  interface EditSuggestionFieldRefs {
    readonly id: FieldRef<"EditSuggestion", 'Int'>
    readonly first_name: FieldRef<"EditSuggestion", 'String'>
    readonly last_name: FieldRef<"EditSuggestion", 'String'>
    readonly birth_year: FieldRef<"EditSuggestion", 'Int'>
    readonly birth_month: FieldRef<"EditSuggestion", 'Int'>
    readonly birth_day: FieldRef<"EditSuggestion", 'Int'>
    readonly death_year: FieldRef<"EditSuggestion", 'Int'>
    readonly death_month: FieldRef<"EditSuggestion", 'Int'>
    readonly death_day: FieldRef<"EditSuggestion", 'Int'>
    readonly bio: FieldRef<"EditSuggestion", 'String'>
    readonly notable_works: FieldRef<"EditSuggestion", 'String'>
    readonly period: FieldRef<"EditSuggestion", 'String'>
    readonly references: FieldRef<"EditSuggestion", 'String'>
    readonly youtube_link: FieldRef<"EditSuggestion", 'String'>
    readonly mainRole: FieldRef<"EditSuggestion", 'RoleType[]'>
    readonly reason: FieldRef<"EditSuggestion", 'String'>
    readonly status: FieldRef<"EditSuggestion", 'String'>
    readonly suggester_email: FieldRef<"EditSuggestion", 'String'>
    readonly suggester_ip: FieldRef<"EditSuggestion", 'String'>
    readonly created_at: FieldRef<"EditSuggestion", 'DateTime'>
    readonly updated_at: FieldRef<"EditSuggestion", 'DateTime'>
    readonly composerId: FieldRef<"EditSuggestion", 'Int'>
    readonly is_student_contribution: FieldRef<"EditSuggestion", 'Boolean'>
    readonly student_first_name: FieldRef<"EditSuggestion", 'String'>
    readonly student_last_name: FieldRef<"EditSuggestion", 'String'>
    readonly points: FieldRef<"EditSuggestion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * EditSuggestion findUnique
   */
  export type EditSuggestionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * Filter, which EditSuggestion to fetch.
     */
    where: EditSuggestionWhereUniqueInput
  }

  /**
   * EditSuggestion findUniqueOrThrow
   */
  export type EditSuggestionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * Filter, which EditSuggestion to fetch.
     */
    where: EditSuggestionWhereUniqueInput
  }

  /**
   * EditSuggestion findFirst
   */
  export type EditSuggestionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * Filter, which EditSuggestion to fetch.
     */
    where?: EditSuggestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EditSuggestions to fetch.
     */
    orderBy?: EditSuggestionOrderByWithRelationInput | EditSuggestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EditSuggestions.
     */
    cursor?: EditSuggestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EditSuggestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EditSuggestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EditSuggestions.
     */
    distinct?: EditSuggestionScalarFieldEnum | EditSuggestionScalarFieldEnum[]
  }

  /**
   * EditSuggestion findFirstOrThrow
   */
  export type EditSuggestionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * Filter, which EditSuggestion to fetch.
     */
    where?: EditSuggestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EditSuggestions to fetch.
     */
    orderBy?: EditSuggestionOrderByWithRelationInput | EditSuggestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EditSuggestions.
     */
    cursor?: EditSuggestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EditSuggestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EditSuggestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EditSuggestions.
     */
    distinct?: EditSuggestionScalarFieldEnum | EditSuggestionScalarFieldEnum[]
  }

  /**
   * EditSuggestion findMany
   */
  export type EditSuggestionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * Filter, which EditSuggestions to fetch.
     */
    where?: EditSuggestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EditSuggestions to fetch.
     */
    orderBy?: EditSuggestionOrderByWithRelationInput | EditSuggestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EditSuggestions.
     */
    cursor?: EditSuggestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EditSuggestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EditSuggestions.
     */
    skip?: number
    distinct?: EditSuggestionScalarFieldEnum | EditSuggestionScalarFieldEnum[]
  }

  /**
   * EditSuggestion create
   */
  export type EditSuggestionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * The data needed to create a EditSuggestion.
     */
    data: XOR<EditSuggestionCreateInput, EditSuggestionUncheckedCreateInput>
  }

  /**
   * EditSuggestion createMany
   */
  export type EditSuggestionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EditSuggestions.
     */
    data: EditSuggestionCreateManyInput | EditSuggestionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EditSuggestion createManyAndReturn
   */
  export type EditSuggestionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * The data used to create many EditSuggestions.
     */
    data: EditSuggestionCreateManyInput | EditSuggestionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EditSuggestion update
   */
  export type EditSuggestionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * The data needed to update a EditSuggestion.
     */
    data: XOR<EditSuggestionUpdateInput, EditSuggestionUncheckedUpdateInput>
    /**
     * Choose, which EditSuggestion to update.
     */
    where: EditSuggestionWhereUniqueInput
  }

  /**
   * EditSuggestion updateMany
   */
  export type EditSuggestionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EditSuggestions.
     */
    data: XOR<EditSuggestionUpdateManyMutationInput, EditSuggestionUncheckedUpdateManyInput>
    /**
     * Filter which EditSuggestions to update
     */
    where?: EditSuggestionWhereInput
    /**
     * Limit how many EditSuggestions to update.
     */
    limit?: number
  }

  /**
   * EditSuggestion updateManyAndReturn
   */
  export type EditSuggestionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * The data used to update EditSuggestions.
     */
    data: XOR<EditSuggestionUpdateManyMutationInput, EditSuggestionUncheckedUpdateManyInput>
    /**
     * Filter which EditSuggestions to update
     */
    where?: EditSuggestionWhereInput
    /**
     * Limit how many EditSuggestions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EditSuggestion upsert
   */
  export type EditSuggestionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * The filter to search for the EditSuggestion to update in case it exists.
     */
    where: EditSuggestionWhereUniqueInput
    /**
     * In case the EditSuggestion found by the `where` argument doesn't exist, create a new EditSuggestion with this data.
     */
    create: XOR<EditSuggestionCreateInput, EditSuggestionUncheckedCreateInput>
    /**
     * In case the EditSuggestion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EditSuggestionUpdateInput, EditSuggestionUncheckedUpdateInput>
  }

  /**
   * EditSuggestion delete
   */
  export type EditSuggestionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
    /**
     * Filter which EditSuggestion to delete.
     */
    where: EditSuggestionWhereUniqueInput
  }

  /**
   * EditSuggestion deleteMany
   */
  export type EditSuggestionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EditSuggestions to delete
     */
    where?: EditSuggestionWhereInput
    /**
     * Limit how many EditSuggestions to delete.
     */
    limit?: number
  }

  /**
   * EditSuggestion without action
   */
  export type EditSuggestionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EditSuggestion
     */
    select?: EditSuggestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EditSuggestion
     */
    omit?: EditSuggestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EditSuggestionInclude<ExtArgs> | null
  }


  /**
   * Model Evaluacion
   */

  export type AggregateEvaluacion = {
    _count: EvaluacionCountAggregateOutputType | null
    _avg: EvaluacionAvgAggregateOutputType | null
    _sum: EvaluacionSumAggregateOutputType | null
    _min: EvaluacionMinAggregateOutputType | null
    _max: EvaluacionMaxAggregateOutputType | null
  }

  export type EvaluacionAvgAggregateOutputType = {
    id: number | null
    catedraId: number | null
  }

  export type EvaluacionSumAggregateOutputType = {
    id: number | null
    catedraId: number | null
  }

  export type EvaluacionMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    created_at: Date | null
    catedraId: number | null
    fecha_limite: Date | null
    isMaster: boolean | null
  }

  export type EvaluacionMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    created_at: Date | null
    catedraId: number | null
    fecha_limite: Date | null
    isMaster: boolean | null
  }

  export type EvaluacionCountAggregateOutputType = {
    id: number
    titulo: number
    created_at: number
    catedraId: number
    fecha_limite: number
    isMaster: number
    _all: number
  }


  export type EvaluacionAvgAggregateInputType = {
    id?: true
    catedraId?: true
  }

  export type EvaluacionSumAggregateInputType = {
    id?: true
    catedraId?: true
  }

  export type EvaluacionMinAggregateInputType = {
    id?: true
    titulo?: true
    created_at?: true
    catedraId?: true
    fecha_limite?: true
    isMaster?: true
  }

  export type EvaluacionMaxAggregateInputType = {
    id?: true
    titulo?: true
    created_at?: true
    catedraId?: true
    fecha_limite?: true
    isMaster?: true
  }

  export type EvaluacionCountAggregateInputType = {
    id?: true
    titulo?: true
    created_at?: true
    catedraId?: true
    fecha_limite?: true
    isMaster?: true
    _all?: true
  }

  export type EvaluacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Evaluacion to aggregate.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Evaluacions
    **/
    _count?: true | EvaluacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EvaluacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EvaluacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EvaluacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EvaluacionMaxAggregateInputType
  }

  export type GetEvaluacionAggregateType<T extends EvaluacionAggregateArgs> = {
        [P in keyof T & keyof AggregateEvaluacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvaluacion[P]>
      : GetScalarType<T[P], AggregateEvaluacion[P]>
  }




  export type EvaluacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionWhereInput
    orderBy?: EvaluacionOrderByWithAggregationInput | EvaluacionOrderByWithAggregationInput[]
    by: EvaluacionScalarFieldEnum[] | EvaluacionScalarFieldEnum
    having?: EvaluacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EvaluacionCountAggregateInputType | true
    _avg?: EvaluacionAvgAggregateInputType
    _sum?: EvaluacionSumAggregateInputType
    _min?: EvaluacionMinAggregateInputType
    _max?: EvaluacionMaxAggregateInputType
  }

  export type EvaluacionGroupByOutputType = {
    id: number
    titulo: string
    created_at: Date
    catedraId: number
    fecha_limite: Date | null
    isMaster: boolean
    _count: EvaluacionCountAggregateOutputType | null
    _avg: EvaluacionAvgAggregateOutputType | null
    _sum: EvaluacionSumAggregateOutputType | null
    _min: EvaluacionMinAggregateOutputType | null
    _max: EvaluacionMaxAggregateOutputType | null
  }

  type GetEvaluacionGroupByPayload<T extends EvaluacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EvaluacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EvaluacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EvaluacionGroupByOutputType[P]>
            : GetScalarType<T[P], EvaluacionGroupByOutputType[P]>
        }
      >
    >


  export type EvaluacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    created_at?: boolean
    catedraId?: boolean
    fecha_limite?: boolean
    isMaster?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Evaluacion$EvaluacionAsignacionArgs<ExtArgs>
    Pregunta?: boolean | Evaluacion$PreguntaArgs<ExtArgs>
    Publicacion?: boolean | Evaluacion$PublicacionArgs<ExtArgs>
    _count?: boolean | EvaluacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacion"]>

  export type EvaluacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    created_at?: boolean
    catedraId?: boolean
    fecha_limite?: boolean
    isMaster?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacion"]>

  export type EvaluacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    created_at?: boolean
    catedraId?: boolean
    fecha_limite?: boolean
    isMaster?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacion"]>

  export type EvaluacionSelectScalar = {
    id?: boolean
    titulo?: boolean
    created_at?: boolean
    catedraId?: boolean
    fecha_limite?: boolean
    isMaster?: boolean
  }

  export type EvaluacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "created_at" | "catedraId" | "fecha_limite" | "isMaster", ExtArgs["result"]["evaluacion"]>
  export type EvaluacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Evaluacion$EvaluacionAsignacionArgs<ExtArgs>
    Pregunta?: boolean | Evaluacion$PreguntaArgs<ExtArgs>
    Publicacion?: boolean | Evaluacion$PublicacionArgs<ExtArgs>
    _count?: boolean | EvaluacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EvaluacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }
  export type EvaluacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }

  export type $EvaluacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Evaluacion"
    objects: {
      Catedra: Prisma.$CatedraPayload<ExtArgs>
      EvaluacionAsignacion: Prisma.$EvaluacionAsignacionPayload<ExtArgs>[]
      Pregunta: Prisma.$PreguntaPayload<ExtArgs>[]
      Publicacion: Prisma.$PublicacionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      created_at: Date
      catedraId: number
      fecha_limite: Date | null
      isMaster: boolean
    }, ExtArgs["result"]["evaluacion"]>
    composites: {}
  }

  type EvaluacionGetPayload<S extends boolean | null | undefined | EvaluacionDefaultArgs> = $Result.GetResult<Prisma.$EvaluacionPayload, S>

  type EvaluacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EvaluacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EvaluacionCountAggregateInputType | true
    }

  export interface EvaluacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Evaluacion'], meta: { name: 'Evaluacion' } }
    /**
     * Find zero or one Evaluacion that matches the filter.
     * @param {EvaluacionFindUniqueArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EvaluacionFindUniqueArgs>(args: SelectSubset<T, EvaluacionFindUniqueArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Evaluacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EvaluacionFindUniqueOrThrowArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EvaluacionFindUniqueOrThrowArgs>(args: SelectSubset<T, EvaluacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evaluacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionFindFirstArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EvaluacionFindFirstArgs>(args?: SelectSubset<T, EvaluacionFindFirstArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evaluacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionFindFirstOrThrowArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EvaluacionFindFirstOrThrowArgs>(args?: SelectSubset<T, EvaluacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Evaluacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Evaluacions
     * const evaluacions = await prisma.evaluacion.findMany()
     * 
     * // Get first 10 Evaluacions
     * const evaluacions = await prisma.evaluacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const evaluacionWithIdOnly = await prisma.evaluacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EvaluacionFindManyArgs>(args?: SelectSubset<T, EvaluacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Evaluacion.
     * @param {EvaluacionCreateArgs} args - Arguments to create a Evaluacion.
     * @example
     * // Create one Evaluacion
     * const Evaluacion = await prisma.evaluacion.create({
     *   data: {
     *     // ... data to create a Evaluacion
     *   }
     * })
     * 
     */
    create<T extends EvaluacionCreateArgs>(args: SelectSubset<T, EvaluacionCreateArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Evaluacions.
     * @param {EvaluacionCreateManyArgs} args - Arguments to create many Evaluacions.
     * @example
     * // Create many Evaluacions
     * const evaluacion = await prisma.evaluacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EvaluacionCreateManyArgs>(args?: SelectSubset<T, EvaluacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Evaluacions and returns the data saved in the database.
     * @param {EvaluacionCreateManyAndReturnArgs} args - Arguments to create many Evaluacions.
     * @example
     * // Create many Evaluacions
     * const evaluacion = await prisma.evaluacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Evaluacions and only return the `id`
     * const evaluacionWithIdOnly = await prisma.evaluacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EvaluacionCreateManyAndReturnArgs>(args?: SelectSubset<T, EvaluacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Evaluacion.
     * @param {EvaluacionDeleteArgs} args - Arguments to delete one Evaluacion.
     * @example
     * // Delete one Evaluacion
     * const Evaluacion = await prisma.evaluacion.delete({
     *   where: {
     *     // ... filter to delete one Evaluacion
     *   }
     * })
     * 
     */
    delete<T extends EvaluacionDeleteArgs>(args: SelectSubset<T, EvaluacionDeleteArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Evaluacion.
     * @param {EvaluacionUpdateArgs} args - Arguments to update one Evaluacion.
     * @example
     * // Update one Evaluacion
     * const evaluacion = await prisma.evaluacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EvaluacionUpdateArgs>(args: SelectSubset<T, EvaluacionUpdateArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Evaluacions.
     * @param {EvaluacionDeleteManyArgs} args - Arguments to filter Evaluacions to delete.
     * @example
     * // Delete a few Evaluacions
     * const { count } = await prisma.evaluacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EvaluacionDeleteManyArgs>(args?: SelectSubset<T, EvaluacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Evaluacions
     * const evaluacion = await prisma.evaluacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EvaluacionUpdateManyArgs>(args: SelectSubset<T, EvaluacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evaluacions and returns the data updated in the database.
     * @param {EvaluacionUpdateManyAndReturnArgs} args - Arguments to update many Evaluacions.
     * @example
     * // Update many Evaluacions
     * const evaluacion = await prisma.evaluacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Evaluacions and only return the `id`
     * const evaluacionWithIdOnly = await prisma.evaluacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EvaluacionUpdateManyAndReturnArgs>(args: SelectSubset<T, EvaluacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Evaluacion.
     * @param {EvaluacionUpsertArgs} args - Arguments to update or create a Evaluacion.
     * @example
     * // Update or create a Evaluacion
     * const evaluacion = await prisma.evaluacion.upsert({
     *   create: {
     *     // ... data to create a Evaluacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evaluacion we want to update
     *   }
     * })
     */
    upsert<T extends EvaluacionUpsertArgs>(args: SelectSubset<T, EvaluacionUpsertArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Evaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionCountArgs} args - Arguments to filter Evaluacions to count.
     * @example
     * // Count the number of Evaluacions
     * const count = await prisma.evaluacion.count({
     *   where: {
     *     // ... the filter for the Evaluacions we want to count
     *   }
     * })
    **/
    count<T extends EvaluacionCountArgs>(
      args?: Subset<T, EvaluacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EvaluacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EvaluacionAggregateArgs>(args: Subset<T, EvaluacionAggregateArgs>): Prisma.PrismaPromise<GetEvaluacionAggregateType<T>>

    /**
     * Group by Evaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EvaluacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EvaluacionGroupByArgs['orderBy'] }
        : { orderBy?: EvaluacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EvaluacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvaluacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Evaluacion model
   */
  readonly fields: EvaluacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Evaluacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EvaluacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EvaluacionAsignacion<T extends Evaluacion$EvaluacionAsignacionArgs<ExtArgs> = {}>(args?: Subset<T, Evaluacion$EvaluacionAsignacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Pregunta<T extends Evaluacion$PreguntaArgs<ExtArgs> = {}>(args?: Subset<T, Evaluacion$PreguntaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Publicacion<T extends Evaluacion$PublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Evaluacion$PublicacionArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Evaluacion model
   */
  interface EvaluacionFieldRefs {
    readonly id: FieldRef<"Evaluacion", 'Int'>
    readonly titulo: FieldRef<"Evaluacion", 'String'>
    readonly created_at: FieldRef<"Evaluacion", 'DateTime'>
    readonly catedraId: FieldRef<"Evaluacion", 'Int'>
    readonly fecha_limite: FieldRef<"Evaluacion", 'DateTime'>
    readonly isMaster: FieldRef<"Evaluacion", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Evaluacion findUnique
   */
  export type EvaluacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion findUniqueOrThrow
   */
  export type EvaluacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion findFirst
   */
  export type EvaluacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Evaluacions.
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Evaluacions.
     */
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Evaluacion findFirstOrThrow
   */
  export type EvaluacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Evaluacions.
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Evaluacions.
     */
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Evaluacion findMany
   */
  export type EvaluacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacions to fetch.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Evaluacions.
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Evaluacion create
   */
  export type EvaluacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Evaluacion.
     */
    data: XOR<EvaluacionCreateInput, EvaluacionUncheckedCreateInput>
  }

  /**
   * Evaluacion createMany
   */
  export type EvaluacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Evaluacions.
     */
    data: EvaluacionCreateManyInput | EvaluacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Evaluacion createManyAndReturn
   */
  export type EvaluacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * The data used to create many Evaluacions.
     */
    data: EvaluacionCreateManyInput | EvaluacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Evaluacion update
   */
  export type EvaluacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Evaluacion.
     */
    data: XOR<EvaluacionUpdateInput, EvaluacionUncheckedUpdateInput>
    /**
     * Choose, which Evaluacion to update.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion updateMany
   */
  export type EvaluacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Evaluacions.
     */
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which Evaluacions to update
     */
    where?: EvaluacionWhereInput
    /**
     * Limit how many Evaluacions to update.
     */
    limit?: number
  }

  /**
   * Evaluacion updateManyAndReturn
   */
  export type EvaluacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * The data used to update Evaluacions.
     */
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which Evaluacions to update
     */
    where?: EvaluacionWhereInput
    /**
     * Limit how many Evaluacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Evaluacion upsert
   */
  export type EvaluacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Evaluacion to update in case it exists.
     */
    where: EvaluacionWhereUniqueInput
    /**
     * In case the Evaluacion found by the `where` argument doesn't exist, create a new Evaluacion with this data.
     */
    create: XOR<EvaluacionCreateInput, EvaluacionUncheckedCreateInput>
    /**
     * In case the Evaluacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EvaluacionUpdateInput, EvaluacionUncheckedUpdateInput>
  }

  /**
   * Evaluacion delete
   */
  export type EvaluacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter which Evaluacion to delete.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion deleteMany
   */
  export type EvaluacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Evaluacions to delete
     */
    where?: EvaluacionWhereInput
    /**
     * Limit how many Evaluacions to delete.
     */
    limit?: number
  }

  /**
   * Evaluacion.EvaluacionAsignacion
   */
  export type Evaluacion$EvaluacionAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    where?: EvaluacionAsignacionWhereInput
    orderBy?: EvaluacionAsignacionOrderByWithRelationInput | EvaluacionAsignacionOrderByWithRelationInput[]
    cursor?: EvaluacionAsignacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluacionAsignacionScalarFieldEnum | EvaluacionAsignacionScalarFieldEnum[]
  }

  /**
   * Evaluacion.Pregunta
   */
  export type Evaluacion$PreguntaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    where?: PreguntaWhereInput
    orderBy?: PreguntaOrderByWithRelationInput | PreguntaOrderByWithRelationInput[]
    cursor?: PreguntaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PreguntaScalarFieldEnum | PreguntaScalarFieldEnum[]
  }

  /**
   * Evaluacion.Publicacion
   */
  export type Evaluacion$PublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    where?: PublicacionWhereInput
  }

  /**
   * Evaluacion without action
   */
  export type EvaluacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
  }


  /**
   * Model EvaluacionAsignacion
   */

  export type AggregateEvaluacionAsignacion = {
    _count: EvaluacionAsignacionCountAggregateOutputType | null
    _avg: EvaluacionAsignacionAvgAggregateOutputType | null
    _sum: EvaluacionAsignacionSumAggregateOutputType | null
    _min: EvaluacionAsignacionMinAggregateOutputType | null
    _max: EvaluacionAsignacionMaxAggregateOutputType | null
  }

  export type EvaluacionAsignacionAvgAggregateOutputType = {
    id: number | null
    alumnoId: number | null
    evaluacionId: number | null
    publicacionId: number | null
  }

  export type EvaluacionAsignacionSumAggregateOutputType = {
    id: number | null
    alumnoId: number | null
    evaluacionId: number | null
    publicacionId: number | null
  }

  export type EvaluacionAsignacionMinAggregateOutputType = {
    id: number | null
    estado: $Enums.EstadoEvaluacionAsignacion | null
    fecha_entrega: Date | null
    created_at: Date | null
    updated_at: Date | null
    alumnoId: number | null
    evaluacionId: number | null
    publicacionId: number | null
  }

  export type EvaluacionAsignacionMaxAggregateOutputType = {
    id: number | null
    estado: $Enums.EstadoEvaluacionAsignacion | null
    fecha_entrega: Date | null
    created_at: Date | null
    updated_at: Date | null
    alumnoId: number | null
    evaluacionId: number | null
    publicacionId: number | null
  }

  export type EvaluacionAsignacionCountAggregateOutputType = {
    id: number
    estado: number
    fecha_entrega: number
    created_at: number
    updated_at: number
    alumnoId: number
    evaluacionId: number
    publicacionId: number
    _all: number
  }


  export type EvaluacionAsignacionAvgAggregateInputType = {
    id?: true
    alumnoId?: true
    evaluacionId?: true
    publicacionId?: true
  }

  export type EvaluacionAsignacionSumAggregateInputType = {
    id?: true
    alumnoId?: true
    evaluacionId?: true
    publicacionId?: true
  }

  export type EvaluacionAsignacionMinAggregateInputType = {
    id?: true
    estado?: true
    fecha_entrega?: true
    created_at?: true
    updated_at?: true
    alumnoId?: true
    evaluacionId?: true
    publicacionId?: true
  }

  export type EvaluacionAsignacionMaxAggregateInputType = {
    id?: true
    estado?: true
    fecha_entrega?: true
    created_at?: true
    updated_at?: true
    alumnoId?: true
    evaluacionId?: true
    publicacionId?: true
  }

  export type EvaluacionAsignacionCountAggregateInputType = {
    id?: true
    estado?: true
    fecha_entrega?: true
    created_at?: true
    updated_at?: true
    alumnoId?: true
    evaluacionId?: true
    publicacionId?: true
    _all?: true
  }

  export type EvaluacionAsignacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EvaluacionAsignacion to aggregate.
     */
    where?: EvaluacionAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluacionAsignacions to fetch.
     */
    orderBy?: EvaluacionAsignacionOrderByWithRelationInput | EvaluacionAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EvaluacionAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluacionAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluacionAsignacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EvaluacionAsignacions
    **/
    _count?: true | EvaluacionAsignacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EvaluacionAsignacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EvaluacionAsignacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EvaluacionAsignacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EvaluacionAsignacionMaxAggregateInputType
  }

  export type GetEvaluacionAsignacionAggregateType<T extends EvaluacionAsignacionAggregateArgs> = {
        [P in keyof T & keyof AggregateEvaluacionAsignacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvaluacionAsignacion[P]>
      : GetScalarType<T[P], AggregateEvaluacionAsignacion[P]>
  }




  export type EvaluacionAsignacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionAsignacionWhereInput
    orderBy?: EvaluacionAsignacionOrderByWithAggregationInput | EvaluacionAsignacionOrderByWithAggregationInput[]
    by: EvaluacionAsignacionScalarFieldEnum[] | EvaluacionAsignacionScalarFieldEnum
    having?: EvaluacionAsignacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EvaluacionAsignacionCountAggregateInputType | true
    _avg?: EvaluacionAsignacionAvgAggregateInputType
    _sum?: EvaluacionAsignacionSumAggregateInputType
    _min?: EvaluacionAsignacionMinAggregateInputType
    _max?: EvaluacionAsignacionMaxAggregateInputType
  }

  export type EvaluacionAsignacionGroupByOutputType = {
    id: number
    estado: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega: Date | null
    created_at: Date
    updated_at: Date
    alumnoId: number
    evaluacionId: number
    publicacionId: number | null
    _count: EvaluacionAsignacionCountAggregateOutputType | null
    _avg: EvaluacionAsignacionAvgAggregateOutputType | null
    _sum: EvaluacionAsignacionSumAggregateOutputType | null
    _min: EvaluacionAsignacionMinAggregateOutputType | null
    _max: EvaluacionAsignacionMaxAggregateOutputType | null
  }

  type GetEvaluacionAsignacionGroupByPayload<T extends EvaluacionAsignacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EvaluacionAsignacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EvaluacionAsignacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EvaluacionAsignacionGroupByOutputType[P]>
            : GetScalarType<T[P], EvaluacionAsignacionGroupByOutputType[P]>
        }
      >
    >


  export type EvaluacionAsignacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estado?: boolean
    fecha_entrega?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    evaluacionId?: boolean
    publicacionId?: boolean
    CalificacionEvaluacion?: boolean | EvaluacionAsignacion$CalificacionEvaluacionArgs<ExtArgs>
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
    Publicacion?: boolean | EvaluacionAsignacion$PublicacionArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacionAsignacion"]>

  export type EvaluacionAsignacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estado?: boolean
    fecha_entrega?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    evaluacionId?: boolean
    publicacionId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacionAsignacion"]>

  export type EvaluacionAsignacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estado?: boolean
    fecha_entrega?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    evaluacionId?: boolean
    publicacionId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacionAsignacion"]>

  export type EvaluacionAsignacionSelectScalar = {
    id?: boolean
    estado?: boolean
    fecha_entrega?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    evaluacionId?: boolean
    publicacionId?: boolean
  }

  export type EvaluacionAsignacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "estado" | "fecha_entrega" | "created_at" | "updated_at" | "alumnoId" | "evaluacionId" | "publicacionId", ExtArgs["result"]["evaluacionAsignacion"]>
  export type EvaluacionAsignacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CalificacionEvaluacion?: boolean | EvaluacionAsignacion$CalificacionEvaluacionArgs<ExtArgs>
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
    Publicacion?: boolean | EvaluacionAsignacion$PublicacionArgs<ExtArgs>
  }
  export type EvaluacionAsignacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }
  export type EvaluacionAsignacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }

  export type $EvaluacionAsignacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EvaluacionAsignacion"
    objects: {
      CalificacionEvaluacion: Prisma.$CalificacionEvaluacionPayload<ExtArgs> | null
      Alumno: Prisma.$AlumnoPayload<ExtArgs>
      Evaluacion: Prisma.$EvaluacionPayload<ExtArgs>
      Publicacion: Prisma.$PublicacionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      estado: $Enums.EstadoEvaluacionAsignacion
      fecha_entrega: Date | null
      created_at: Date
      updated_at: Date
      alumnoId: number
      evaluacionId: number
      publicacionId: number | null
    }, ExtArgs["result"]["evaluacionAsignacion"]>
    composites: {}
  }

  type EvaluacionAsignacionGetPayload<S extends boolean | null | undefined | EvaluacionAsignacionDefaultArgs> = $Result.GetResult<Prisma.$EvaluacionAsignacionPayload, S>

  type EvaluacionAsignacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EvaluacionAsignacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EvaluacionAsignacionCountAggregateInputType | true
    }

  export interface EvaluacionAsignacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EvaluacionAsignacion'], meta: { name: 'EvaluacionAsignacion' } }
    /**
     * Find zero or one EvaluacionAsignacion that matches the filter.
     * @param {EvaluacionAsignacionFindUniqueArgs} args - Arguments to find a EvaluacionAsignacion
     * @example
     * // Get one EvaluacionAsignacion
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EvaluacionAsignacionFindUniqueArgs>(args: SelectSubset<T, EvaluacionAsignacionFindUniqueArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EvaluacionAsignacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EvaluacionAsignacionFindUniqueOrThrowArgs} args - Arguments to find a EvaluacionAsignacion
     * @example
     * // Get one EvaluacionAsignacion
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EvaluacionAsignacionFindUniqueOrThrowArgs>(args: SelectSubset<T, EvaluacionAsignacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EvaluacionAsignacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAsignacionFindFirstArgs} args - Arguments to find a EvaluacionAsignacion
     * @example
     * // Get one EvaluacionAsignacion
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EvaluacionAsignacionFindFirstArgs>(args?: SelectSubset<T, EvaluacionAsignacionFindFirstArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EvaluacionAsignacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAsignacionFindFirstOrThrowArgs} args - Arguments to find a EvaluacionAsignacion
     * @example
     * // Get one EvaluacionAsignacion
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EvaluacionAsignacionFindFirstOrThrowArgs>(args?: SelectSubset<T, EvaluacionAsignacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EvaluacionAsignacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAsignacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EvaluacionAsignacions
     * const evaluacionAsignacions = await prisma.evaluacionAsignacion.findMany()
     * 
     * // Get first 10 EvaluacionAsignacions
     * const evaluacionAsignacions = await prisma.evaluacionAsignacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const evaluacionAsignacionWithIdOnly = await prisma.evaluacionAsignacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EvaluacionAsignacionFindManyArgs>(args?: SelectSubset<T, EvaluacionAsignacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EvaluacionAsignacion.
     * @param {EvaluacionAsignacionCreateArgs} args - Arguments to create a EvaluacionAsignacion.
     * @example
     * // Create one EvaluacionAsignacion
     * const EvaluacionAsignacion = await prisma.evaluacionAsignacion.create({
     *   data: {
     *     // ... data to create a EvaluacionAsignacion
     *   }
     * })
     * 
     */
    create<T extends EvaluacionAsignacionCreateArgs>(args: SelectSubset<T, EvaluacionAsignacionCreateArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EvaluacionAsignacions.
     * @param {EvaluacionAsignacionCreateManyArgs} args - Arguments to create many EvaluacionAsignacions.
     * @example
     * // Create many EvaluacionAsignacions
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EvaluacionAsignacionCreateManyArgs>(args?: SelectSubset<T, EvaluacionAsignacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EvaluacionAsignacions and returns the data saved in the database.
     * @param {EvaluacionAsignacionCreateManyAndReturnArgs} args - Arguments to create many EvaluacionAsignacions.
     * @example
     * // Create many EvaluacionAsignacions
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EvaluacionAsignacions and only return the `id`
     * const evaluacionAsignacionWithIdOnly = await prisma.evaluacionAsignacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EvaluacionAsignacionCreateManyAndReturnArgs>(args?: SelectSubset<T, EvaluacionAsignacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EvaluacionAsignacion.
     * @param {EvaluacionAsignacionDeleteArgs} args - Arguments to delete one EvaluacionAsignacion.
     * @example
     * // Delete one EvaluacionAsignacion
     * const EvaluacionAsignacion = await prisma.evaluacionAsignacion.delete({
     *   where: {
     *     // ... filter to delete one EvaluacionAsignacion
     *   }
     * })
     * 
     */
    delete<T extends EvaluacionAsignacionDeleteArgs>(args: SelectSubset<T, EvaluacionAsignacionDeleteArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EvaluacionAsignacion.
     * @param {EvaluacionAsignacionUpdateArgs} args - Arguments to update one EvaluacionAsignacion.
     * @example
     * // Update one EvaluacionAsignacion
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EvaluacionAsignacionUpdateArgs>(args: SelectSubset<T, EvaluacionAsignacionUpdateArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EvaluacionAsignacions.
     * @param {EvaluacionAsignacionDeleteManyArgs} args - Arguments to filter EvaluacionAsignacions to delete.
     * @example
     * // Delete a few EvaluacionAsignacions
     * const { count } = await prisma.evaluacionAsignacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EvaluacionAsignacionDeleteManyArgs>(args?: SelectSubset<T, EvaluacionAsignacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EvaluacionAsignacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAsignacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EvaluacionAsignacions
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EvaluacionAsignacionUpdateManyArgs>(args: SelectSubset<T, EvaluacionAsignacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EvaluacionAsignacions and returns the data updated in the database.
     * @param {EvaluacionAsignacionUpdateManyAndReturnArgs} args - Arguments to update many EvaluacionAsignacions.
     * @example
     * // Update many EvaluacionAsignacions
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EvaluacionAsignacions and only return the `id`
     * const evaluacionAsignacionWithIdOnly = await prisma.evaluacionAsignacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EvaluacionAsignacionUpdateManyAndReturnArgs>(args: SelectSubset<T, EvaluacionAsignacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EvaluacionAsignacion.
     * @param {EvaluacionAsignacionUpsertArgs} args - Arguments to update or create a EvaluacionAsignacion.
     * @example
     * // Update or create a EvaluacionAsignacion
     * const evaluacionAsignacion = await prisma.evaluacionAsignacion.upsert({
     *   create: {
     *     // ... data to create a EvaluacionAsignacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EvaluacionAsignacion we want to update
     *   }
     * })
     */
    upsert<T extends EvaluacionAsignacionUpsertArgs>(args: SelectSubset<T, EvaluacionAsignacionUpsertArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EvaluacionAsignacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAsignacionCountArgs} args - Arguments to filter EvaluacionAsignacions to count.
     * @example
     * // Count the number of EvaluacionAsignacions
     * const count = await prisma.evaluacionAsignacion.count({
     *   where: {
     *     // ... the filter for the EvaluacionAsignacions we want to count
     *   }
     * })
    **/
    count<T extends EvaluacionAsignacionCountArgs>(
      args?: Subset<T, EvaluacionAsignacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EvaluacionAsignacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EvaluacionAsignacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAsignacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EvaluacionAsignacionAggregateArgs>(args: Subset<T, EvaluacionAsignacionAggregateArgs>): Prisma.PrismaPromise<GetEvaluacionAsignacionAggregateType<T>>

    /**
     * Group by EvaluacionAsignacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAsignacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EvaluacionAsignacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EvaluacionAsignacionGroupByArgs['orderBy'] }
        : { orderBy?: EvaluacionAsignacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EvaluacionAsignacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvaluacionAsignacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EvaluacionAsignacion model
   */
  readonly fields: EvaluacionAsignacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EvaluacionAsignacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EvaluacionAsignacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CalificacionEvaluacion<T extends EvaluacionAsignacion$CalificacionEvaluacionArgs<ExtArgs> = {}>(args?: Subset<T, EvaluacionAsignacion$CalificacionEvaluacionArgs<ExtArgs>>): Prisma__CalificacionEvaluacionClient<$Result.GetResult<Prisma.$CalificacionEvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Alumno<T extends AlumnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlumnoDefaultArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Evaluacion<T extends EvaluacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EvaluacionDefaultArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Publicacion<T extends EvaluacionAsignacion$PublicacionArgs<ExtArgs> = {}>(args?: Subset<T, EvaluacionAsignacion$PublicacionArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EvaluacionAsignacion model
   */
  interface EvaluacionAsignacionFieldRefs {
    readonly id: FieldRef<"EvaluacionAsignacion", 'Int'>
    readonly estado: FieldRef<"EvaluacionAsignacion", 'EstadoEvaluacionAsignacion'>
    readonly fecha_entrega: FieldRef<"EvaluacionAsignacion", 'DateTime'>
    readonly created_at: FieldRef<"EvaluacionAsignacion", 'DateTime'>
    readonly updated_at: FieldRef<"EvaluacionAsignacion", 'DateTime'>
    readonly alumnoId: FieldRef<"EvaluacionAsignacion", 'Int'>
    readonly evaluacionId: FieldRef<"EvaluacionAsignacion", 'Int'>
    readonly publicacionId: FieldRef<"EvaluacionAsignacion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * EvaluacionAsignacion findUnique
   */
  export type EvaluacionAsignacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which EvaluacionAsignacion to fetch.
     */
    where: EvaluacionAsignacionWhereUniqueInput
  }

  /**
   * EvaluacionAsignacion findUniqueOrThrow
   */
  export type EvaluacionAsignacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which EvaluacionAsignacion to fetch.
     */
    where: EvaluacionAsignacionWhereUniqueInput
  }

  /**
   * EvaluacionAsignacion findFirst
   */
  export type EvaluacionAsignacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which EvaluacionAsignacion to fetch.
     */
    where?: EvaluacionAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluacionAsignacions to fetch.
     */
    orderBy?: EvaluacionAsignacionOrderByWithRelationInput | EvaluacionAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EvaluacionAsignacions.
     */
    cursor?: EvaluacionAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluacionAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluacionAsignacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EvaluacionAsignacions.
     */
    distinct?: EvaluacionAsignacionScalarFieldEnum | EvaluacionAsignacionScalarFieldEnum[]
  }

  /**
   * EvaluacionAsignacion findFirstOrThrow
   */
  export type EvaluacionAsignacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which EvaluacionAsignacion to fetch.
     */
    where?: EvaluacionAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluacionAsignacions to fetch.
     */
    orderBy?: EvaluacionAsignacionOrderByWithRelationInput | EvaluacionAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EvaluacionAsignacions.
     */
    cursor?: EvaluacionAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluacionAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluacionAsignacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EvaluacionAsignacions.
     */
    distinct?: EvaluacionAsignacionScalarFieldEnum | EvaluacionAsignacionScalarFieldEnum[]
  }

  /**
   * EvaluacionAsignacion findMany
   */
  export type EvaluacionAsignacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which EvaluacionAsignacions to fetch.
     */
    where?: EvaluacionAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EvaluacionAsignacions to fetch.
     */
    orderBy?: EvaluacionAsignacionOrderByWithRelationInput | EvaluacionAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EvaluacionAsignacions.
     */
    cursor?: EvaluacionAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EvaluacionAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EvaluacionAsignacions.
     */
    skip?: number
    distinct?: EvaluacionAsignacionScalarFieldEnum | EvaluacionAsignacionScalarFieldEnum[]
  }

  /**
   * EvaluacionAsignacion create
   */
  export type EvaluacionAsignacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * The data needed to create a EvaluacionAsignacion.
     */
    data: XOR<EvaluacionAsignacionCreateInput, EvaluacionAsignacionUncheckedCreateInput>
  }

  /**
   * EvaluacionAsignacion createMany
   */
  export type EvaluacionAsignacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EvaluacionAsignacions.
     */
    data: EvaluacionAsignacionCreateManyInput | EvaluacionAsignacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EvaluacionAsignacion createManyAndReturn
   */
  export type EvaluacionAsignacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * The data used to create many EvaluacionAsignacions.
     */
    data: EvaluacionAsignacionCreateManyInput | EvaluacionAsignacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EvaluacionAsignacion update
   */
  export type EvaluacionAsignacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * The data needed to update a EvaluacionAsignacion.
     */
    data: XOR<EvaluacionAsignacionUpdateInput, EvaluacionAsignacionUncheckedUpdateInput>
    /**
     * Choose, which EvaluacionAsignacion to update.
     */
    where: EvaluacionAsignacionWhereUniqueInput
  }

  /**
   * EvaluacionAsignacion updateMany
   */
  export type EvaluacionAsignacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EvaluacionAsignacions.
     */
    data: XOR<EvaluacionAsignacionUpdateManyMutationInput, EvaluacionAsignacionUncheckedUpdateManyInput>
    /**
     * Filter which EvaluacionAsignacions to update
     */
    where?: EvaluacionAsignacionWhereInput
    /**
     * Limit how many EvaluacionAsignacions to update.
     */
    limit?: number
  }

  /**
   * EvaluacionAsignacion updateManyAndReturn
   */
  export type EvaluacionAsignacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * The data used to update EvaluacionAsignacions.
     */
    data: XOR<EvaluacionAsignacionUpdateManyMutationInput, EvaluacionAsignacionUncheckedUpdateManyInput>
    /**
     * Filter which EvaluacionAsignacions to update
     */
    where?: EvaluacionAsignacionWhereInput
    /**
     * Limit how many EvaluacionAsignacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EvaluacionAsignacion upsert
   */
  export type EvaluacionAsignacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * The filter to search for the EvaluacionAsignacion to update in case it exists.
     */
    where: EvaluacionAsignacionWhereUniqueInput
    /**
     * In case the EvaluacionAsignacion found by the `where` argument doesn't exist, create a new EvaluacionAsignacion with this data.
     */
    create: XOR<EvaluacionAsignacionCreateInput, EvaluacionAsignacionUncheckedCreateInput>
    /**
     * In case the EvaluacionAsignacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EvaluacionAsignacionUpdateInput, EvaluacionAsignacionUncheckedUpdateInput>
  }

  /**
   * EvaluacionAsignacion delete
   */
  export type EvaluacionAsignacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    /**
     * Filter which EvaluacionAsignacion to delete.
     */
    where: EvaluacionAsignacionWhereUniqueInput
  }

  /**
   * EvaluacionAsignacion deleteMany
   */
  export type EvaluacionAsignacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EvaluacionAsignacions to delete
     */
    where?: EvaluacionAsignacionWhereInput
    /**
     * Limit how many EvaluacionAsignacions to delete.
     */
    limit?: number
  }

  /**
   * EvaluacionAsignacion.CalificacionEvaluacion
   */
  export type EvaluacionAsignacion$CalificacionEvaluacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CalificacionEvaluacion
     */
    select?: CalificacionEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CalificacionEvaluacion
     */
    omit?: CalificacionEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionEvaluacionInclude<ExtArgs> | null
    where?: CalificacionEvaluacionWhereInput
  }

  /**
   * EvaluacionAsignacion.Publicacion
   */
  export type EvaluacionAsignacion$PublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    where?: PublicacionWhereInput
  }

  /**
   * EvaluacionAsignacion without action
   */
  export type EvaluacionAsignacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
  }


  /**
   * Model Opcion
   */

  export type AggregateOpcion = {
    _count: OpcionCountAggregateOutputType | null
    _avg: OpcionAvgAggregateOutputType | null
    _sum: OpcionSumAggregateOutputType | null
    _min: OpcionMinAggregateOutputType | null
    _max: OpcionMaxAggregateOutputType | null
  }

  export type OpcionAvgAggregateOutputType = {
    id: number | null
    preguntaId: number | null
  }

  export type OpcionSumAggregateOutputType = {
    id: number | null
    preguntaId: number | null
  }

  export type OpcionMinAggregateOutputType = {
    id: number | null
    texto: string | null
    es_correcta: boolean | null
    preguntaId: number | null
  }

  export type OpcionMaxAggregateOutputType = {
    id: number | null
    texto: string | null
    es_correcta: boolean | null
    preguntaId: number | null
  }

  export type OpcionCountAggregateOutputType = {
    id: number
    texto: number
    es_correcta: number
    preguntaId: number
    _all: number
  }


  export type OpcionAvgAggregateInputType = {
    id?: true
    preguntaId?: true
  }

  export type OpcionSumAggregateInputType = {
    id?: true
    preguntaId?: true
  }

  export type OpcionMinAggregateInputType = {
    id?: true
    texto?: true
    es_correcta?: true
    preguntaId?: true
  }

  export type OpcionMaxAggregateInputType = {
    id?: true
    texto?: true
    es_correcta?: true
    preguntaId?: true
  }

  export type OpcionCountAggregateInputType = {
    id?: true
    texto?: true
    es_correcta?: true
    preguntaId?: true
    _all?: true
  }

  export type OpcionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Opcion to aggregate.
     */
    where?: OpcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opcions to fetch.
     */
    orderBy?: OpcionOrderByWithRelationInput | OpcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OpcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opcions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Opcions
    **/
    _count?: true | OpcionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OpcionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OpcionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OpcionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OpcionMaxAggregateInputType
  }

  export type GetOpcionAggregateType<T extends OpcionAggregateArgs> = {
        [P in keyof T & keyof AggregateOpcion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOpcion[P]>
      : GetScalarType<T[P], AggregateOpcion[P]>
  }




  export type OpcionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpcionWhereInput
    orderBy?: OpcionOrderByWithAggregationInput | OpcionOrderByWithAggregationInput[]
    by: OpcionScalarFieldEnum[] | OpcionScalarFieldEnum
    having?: OpcionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OpcionCountAggregateInputType | true
    _avg?: OpcionAvgAggregateInputType
    _sum?: OpcionSumAggregateInputType
    _min?: OpcionMinAggregateInputType
    _max?: OpcionMaxAggregateInputType
  }

  export type OpcionGroupByOutputType = {
    id: number
    texto: string
    es_correcta: boolean
    preguntaId: number
    _count: OpcionCountAggregateOutputType | null
    _avg: OpcionAvgAggregateOutputType | null
    _sum: OpcionSumAggregateOutputType | null
    _min: OpcionMinAggregateOutputType | null
    _max: OpcionMaxAggregateOutputType | null
  }

  type GetOpcionGroupByPayload<T extends OpcionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OpcionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OpcionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OpcionGroupByOutputType[P]>
            : GetScalarType<T[P], OpcionGroupByOutputType[P]>
        }
      >
    >


  export type OpcionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    es_correcta?: boolean
    preguntaId?: boolean
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
    RespuestaAlumno?: boolean | Opcion$RespuestaAlumnoArgs<ExtArgs>
    _count?: boolean | OpcionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["opcion"]>

  export type OpcionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    es_correcta?: boolean
    preguntaId?: boolean
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["opcion"]>

  export type OpcionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    es_correcta?: boolean
    preguntaId?: boolean
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["opcion"]>

  export type OpcionSelectScalar = {
    id?: boolean
    texto?: boolean
    es_correcta?: boolean
    preguntaId?: boolean
  }

  export type OpcionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "texto" | "es_correcta" | "preguntaId", ExtArgs["result"]["opcion"]>
  export type OpcionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
    RespuestaAlumno?: boolean | Opcion$RespuestaAlumnoArgs<ExtArgs>
    _count?: boolean | OpcionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OpcionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }
  export type OpcionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }

  export type $OpcionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Opcion"
    objects: {
      Pregunta: Prisma.$PreguntaPayload<ExtArgs>
      RespuestaAlumno: Prisma.$RespuestaAlumnoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      texto: string
      es_correcta: boolean
      preguntaId: number
    }, ExtArgs["result"]["opcion"]>
    composites: {}
  }

  type OpcionGetPayload<S extends boolean | null | undefined | OpcionDefaultArgs> = $Result.GetResult<Prisma.$OpcionPayload, S>

  type OpcionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OpcionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OpcionCountAggregateInputType | true
    }

  export interface OpcionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Opcion'], meta: { name: 'Opcion' } }
    /**
     * Find zero or one Opcion that matches the filter.
     * @param {OpcionFindUniqueArgs} args - Arguments to find a Opcion
     * @example
     * // Get one Opcion
     * const opcion = await prisma.opcion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OpcionFindUniqueArgs>(args: SelectSubset<T, OpcionFindUniqueArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Opcion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OpcionFindUniqueOrThrowArgs} args - Arguments to find a Opcion
     * @example
     * // Get one Opcion
     * const opcion = await prisma.opcion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OpcionFindUniqueOrThrowArgs>(args: SelectSubset<T, OpcionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Opcion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpcionFindFirstArgs} args - Arguments to find a Opcion
     * @example
     * // Get one Opcion
     * const opcion = await prisma.opcion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OpcionFindFirstArgs>(args?: SelectSubset<T, OpcionFindFirstArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Opcion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpcionFindFirstOrThrowArgs} args - Arguments to find a Opcion
     * @example
     * // Get one Opcion
     * const opcion = await prisma.opcion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OpcionFindFirstOrThrowArgs>(args?: SelectSubset<T, OpcionFindFirstOrThrowArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Opcions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpcionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Opcions
     * const opcions = await prisma.opcion.findMany()
     * 
     * // Get first 10 Opcions
     * const opcions = await prisma.opcion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const opcionWithIdOnly = await prisma.opcion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OpcionFindManyArgs>(args?: SelectSubset<T, OpcionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Opcion.
     * @param {OpcionCreateArgs} args - Arguments to create a Opcion.
     * @example
     * // Create one Opcion
     * const Opcion = await prisma.opcion.create({
     *   data: {
     *     // ... data to create a Opcion
     *   }
     * })
     * 
     */
    create<T extends OpcionCreateArgs>(args: SelectSubset<T, OpcionCreateArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Opcions.
     * @param {OpcionCreateManyArgs} args - Arguments to create many Opcions.
     * @example
     * // Create many Opcions
     * const opcion = await prisma.opcion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OpcionCreateManyArgs>(args?: SelectSubset<T, OpcionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Opcions and returns the data saved in the database.
     * @param {OpcionCreateManyAndReturnArgs} args - Arguments to create many Opcions.
     * @example
     * // Create many Opcions
     * const opcion = await prisma.opcion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Opcions and only return the `id`
     * const opcionWithIdOnly = await prisma.opcion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OpcionCreateManyAndReturnArgs>(args?: SelectSubset<T, OpcionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Opcion.
     * @param {OpcionDeleteArgs} args - Arguments to delete one Opcion.
     * @example
     * // Delete one Opcion
     * const Opcion = await prisma.opcion.delete({
     *   where: {
     *     // ... filter to delete one Opcion
     *   }
     * })
     * 
     */
    delete<T extends OpcionDeleteArgs>(args: SelectSubset<T, OpcionDeleteArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Opcion.
     * @param {OpcionUpdateArgs} args - Arguments to update one Opcion.
     * @example
     * // Update one Opcion
     * const opcion = await prisma.opcion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OpcionUpdateArgs>(args: SelectSubset<T, OpcionUpdateArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Opcions.
     * @param {OpcionDeleteManyArgs} args - Arguments to filter Opcions to delete.
     * @example
     * // Delete a few Opcions
     * const { count } = await prisma.opcion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OpcionDeleteManyArgs>(args?: SelectSubset<T, OpcionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opcions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpcionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Opcions
     * const opcion = await prisma.opcion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OpcionUpdateManyArgs>(args: SelectSubset<T, OpcionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opcions and returns the data updated in the database.
     * @param {OpcionUpdateManyAndReturnArgs} args - Arguments to update many Opcions.
     * @example
     * // Update many Opcions
     * const opcion = await prisma.opcion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Opcions and only return the `id`
     * const opcionWithIdOnly = await prisma.opcion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OpcionUpdateManyAndReturnArgs>(args: SelectSubset<T, OpcionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Opcion.
     * @param {OpcionUpsertArgs} args - Arguments to update or create a Opcion.
     * @example
     * // Update or create a Opcion
     * const opcion = await prisma.opcion.upsert({
     *   create: {
     *     // ... data to create a Opcion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Opcion we want to update
     *   }
     * })
     */
    upsert<T extends OpcionUpsertArgs>(args: SelectSubset<T, OpcionUpsertArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Opcions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpcionCountArgs} args - Arguments to filter Opcions to count.
     * @example
     * // Count the number of Opcions
     * const count = await prisma.opcion.count({
     *   where: {
     *     // ... the filter for the Opcions we want to count
     *   }
     * })
    **/
    count<T extends OpcionCountArgs>(
      args?: Subset<T, OpcionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OpcionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Opcion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpcionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OpcionAggregateArgs>(args: Subset<T, OpcionAggregateArgs>): Prisma.PrismaPromise<GetOpcionAggregateType<T>>

    /**
     * Group by Opcion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpcionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OpcionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OpcionGroupByArgs['orderBy'] }
        : { orderBy?: OpcionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OpcionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpcionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Opcion model
   */
  readonly fields: OpcionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Opcion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OpcionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Pregunta<T extends PreguntaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PreguntaDefaultArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    RespuestaAlumno<T extends Opcion$RespuestaAlumnoArgs<ExtArgs> = {}>(args?: Subset<T, Opcion$RespuestaAlumnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Opcion model
   */
  interface OpcionFieldRefs {
    readonly id: FieldRef<"Opcion", 'Int'>
    readonly texto: FieldRef<"Opcion", 'String'>
    readonly es_correcta: FieldRef<"Opcion", 'Boolean'>
    readonly preguntaId: FieldRef<"Opcion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Opcion findUnique
   */
  export type OpcionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * Filter, which Opcion to fetch.
     */
    where: OpcionWhereUniqueInput
  }

  /**
   * Opcion findUniqueOrThrow
   */
  export type OpcionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * Filter, which Opcion to fetch.
     */
    where: OpcionWhereUniqueInput
  }

  /**
   * Opcion findFirst
   */
  export type OpcionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * Filter, which Opcion to fetch.
     */
    where?: OpcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opcions to fetch.
     */
    orderBy?: OpcionOrderByWithRelationInput | OpcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Opcions.
     */
    cursor?: OpcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opcions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Opcions.
     */
    distinct?: OpcionScalarFieldEnum | OpcionScalarFieldEnum[]
  }

  /**
   * Opcion findFirstOrThrow
   */
  export type OpcionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * Filter, which Opcion to fetch.
     */
    where?: OpcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opcions to fetch.
     */
    orderBy?: OpcionOrderByWithRelationInput | OpcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Opcions.
     */
    cursor?: OpcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opcions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Opcions.
     */
    distinct?: OpcionScalarFieldEnum | OpcionScalarFieldEnum[]
  }

  /**
   * Opcion findMany
   */
  export type OpcionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * Filter, which Opcions to fetch.
     */
    where?: OpcionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Opcions to fetch.
     */
    orderBy?: OpcionOrderByWithRelationInput | OpcionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Opcions.
     */
    cursor?: OpcionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Opcions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Opcions.
     */
    skip?: number
    distinct?: OpcionScalarFieldEnum | OpcionScalarFieldEnum[]
  }

  /**
   * Opcion create
   */
  export type OpcionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * The data needed to create a Opcion.
     */
    data: XOR<OpcionCreateInput, OpcionUncheckedCreateInput>
  }

  /**
   * Opcion createMany
   */
  export type OpcionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Opcions.
     */
    data: OpcionCreateManyInput | OpcionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Opcion createManyAndReturn
   */
  export type OpcionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * The data used to create many Opcions.
     */
    data: OpcionCreateManyInput | OpcionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Opcion update
   */
  export type OpcionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * The data needed to update a Opcion.
     */
    data: XOR<OpcionUpdateInput, OpcionUncheckedUpdateInput>
    /**
     * Choose, which Opcion to update.
     */
    where: OpcionWhereUniqueInput
  }

  /**
   * Opcion updateMany
   */
  export type OpcionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Opcions.
     */
    data: XOR<OpcionUpdateManyMutationInput, OpcionUncheckedUpdateManyInput>
    /**
     * Filter which Opcions to update
     */
    where?: OpcionWhereInput
    /**
     * Limit how many Opcions to update.
     */
    limit?: number
  }

  /**
   * Opcion updateManyAndReturn
   */
  export type OpcionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * The data used to update Opcions.
     */
    data: XOR<OpcionUpdateManyMutationInput, OpcionUncheckedUpdateManyInput>
    /**
     * Filter which Opcions to update
     */
    where?: OpcionWhereInput
    /**
     * Limit how many Opcions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Opcion upsert
   */
  export type OpcionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * The filter to search for the Opcion to update in case it exists.
     */
    where: OpcionWhereUniqueInput
    /**
     * In case the Opcion found by the `where` argument doesn't exist, create a new Opcion with this data.
     */
    create: XOR<OpcionCreateInput, OpcionUncheckedCreateInput>
    /**
     * In case the Opcion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OpcionUpdateInput, OpcionUncheckedUpdateInput>
  }

  /**
   * Opcion delete
   */
  export type OpcionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    /**
     * Filter which Opcion to delete.
     */
    where: OpcionWhereUniqueInput
  }

  /**
   * Opcion deleteMany
   */
  export type OpcionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Opcions to delete
     */
    where?: OpcionWhereInput
    /**
     * Limit how many Opcions to delete.
     */
    limit?: number
  }

  /**
   * Opcion.RespuestaAlumno
   */
  export type Opcion$RespuestaAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    where?: RespuestaAlumnoWhereInput
    orderBy?: RespuestaAlumnoOrderByWithRelationInput | RespuestaAlumnoOrderByWithRelationInput[]
    cursor?: RespuestaAlumnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RespuestaAlumnoScalarFieldEnum | RespuestaAlumnoScalarFieldEnum[]
  }

  /**
   * Opcion without action
   */
  export type OpcionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
  }


  /**
   * Model Pago
   */

  export type AggregatePago = {
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  export type PagoAvgAggregateOutputType = {
    id: number | null
    catedraAlumnoId: number | null
    monto_pagado: number | null
    confirmadoPorId: number | null
  }

  export type PagoSumAggregateOutputType = {
    id: number | null
    catedraAlumnoId: number | null
    monto_pagado: number | null
    confirmadoPorId: number | null
  }

  export type PagoMinAggregateOutputType = {
    id: number | null
    catedraAlumnoId: number | null
    fecha_pago: Date | null
    monto_pagado: number | null
    tipo_pago: $Enums.TipoPago | null
    periodo_cubierto: string | null
    confirmadoPorId: number | null
    created_at: Date | null
  }

  export type PagoMaxAggregateOutputType = {
    id: number | null
    catedraAlumnoId: number | null
    fecha_pago: Date | null
    monto_pagado: number | null
    tipo_pago: $Enums.TipoPago | null
    periodo_cubierto: string | null
    confirmadoPorId: number | null
    created_at: Date | null
  }

  export type PagoCountAggregateOutputType = {
    id: number
    catedraAlumnoId: number
    fecha_pago: number
    monto_pagado: number
    tipo_pago: number
    periodo_cubierto: number
    confirmadoPorId: number
    created_at: number
    _all: number
  }


  export type PagoAvgAggregateInputType = {
    id?: true
    catedraAlumnoId?: true
    monto_pagado?: true
    confirmadoPorId?: true
  }

  export type PagoSumAggregateInputType = {
    id?: true
    catedraAlumnoId?: true
    monto_pagado?: true
    confirmadoPorId?: true
  }

  export type PagoMinAggregateInputType = {
    id?: true
    catedraAlumnoId?: true
    fecha_pago?: true
    monto_pagado?: true
    tipo_pago?: true
    periodo_cubierto?: true
    confirmadoPorId?: true
    created_at?: true
  }

  export type PagoMaxAggregateInputType = {
    id?: true
    catedraAlumnoId?: true
    fecha_pago?: true
    monto_pagado?: true
    tipo_pago?: true
    periodo_cubierto?: true
    confirmadoPorId?: true
    created_at?: true
  }

  export type PagoCountAggregateInputType = {
    id?: true
    catedraAlumnoId?: true
    fecha_pago?: true
    monto_pagado?: true
    tipo_pago?: true
    periodo_cubierto?: true
    confirmadoPorId?: true
    created_at?: true
    _all?: true
  }

  export type PagoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pago to aggregate.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagos
    **/
    _count?: true | PagoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagoMaxAggregateInputType
  }

  export type GetPagoAggregateType<T extends PagoAggregateArgs> = {
        [P in keyof T & keyof AggregatePago]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePago[P]>
      : GetScalarType<T[P], AggregatePago[P]>
  }




  export type PagoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagoWhereInput
    orderBy?: PagoOrderByWithAggregationInput | PagoOrderByWithAggregationInput[]
    by: PagoScalarFieldEnum[] | PagoScalarFieldEnum
    having?: PagoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagoCountAggregateInputType | true
    _avg?: PagoAvgAggregateInputType
    _sum?: PagoSumAggregateInputType
    _min?: PagoMinAggregateInputType
    _max?: PagoMaxAggregateInputType
  }

  export type PagoGroupByOutputType = {
    id: number
    catedraAlumnoId: number
    fecha_pago: Date
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto: string | null
    confirmadoPorId: number | null
    created_at: Date
    _count: PagoCountAggregateOutputType | null
    _avg: PagoAvgAggregateOutputType | null
    _sum: PagoSumAggregateOutputType | null
    _min: PagoMinAggregateOutputType | null
    _max: PagoMaxAggregateOutputType | null
  }

  type GetPagoGroupByPayload<T extends PagoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagoGroupByOutputType[P]>
            : GetScalarType<T[P], PagoGroupByOutputType[P]>
        }
      >
    >


  export type PagoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    catedraAlumnoId?: boolean
    fecha_pago?: boolean
    monto_pagado?: boolean
    tipo_pago?: boolean
    periodo_cubierto?: boolean
    confirmadoPorId?: boolean
    created_at?: boolean
    CatedraAlumno?: boolean | CatedraAlumnoDefaultArgs<ExtArgs>
    Docente?: boolean | Pago$DocenteArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    catedraAlumnoId?: boolean
    fecha_pago?: boolean
    monto_pagado?: boolean
    tipo_pago?: boolean
    periodo_cubierto?: boolean
    confirmadoPorId?: boolean
    created_at?: boolean
    CatedraAlumno?: boolean | CatedraAlumnoDefaultArgs<ExtArgs>
    Docente?: boolean | Pago$DocenteArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    catedraAlumnoId?: boolean
    fecha_pago?: boolean
    monto_pagado?: boolean
    tipo_pago?: boolean
    periodo_cubierto?: boolean
    confirmadoPorId?: boolean
    created_at?: boolean
    CatedraAlumno?: boolean | CatedraAlumnoDefaultArgs<ExtArgs>
    Docente?: boolean | Pago$DocenteArgs<ExtArgs>
  }, ExtArgs["result"]["pago"]>

  export type PagoSelectScalar = {
    id?: boolean
    catedraAlumnoId?: boolean
    fecha_pago?: boolean
    monto_pagado?: boolean
    tipo_pago?: boolean
    periodo_cubierto?: boolean
    confirmadoPorId?: boolean
    created_at?: boolean
  }

  export type PagoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "catedraAlumnoId" | "fecha_pago" | "monto_pagado" | "tipo_pago" | "periodo_cubierto" | "confirmadoPorId" | "created_at", ExtArgs["result"]["pago"]>
  export type PagoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CatedraAlumno?: boolean | CatedraAlumnoDefaultArgs<ExtArgs>
    Docente?: boolean | Pago$DocenteArgs<ExtArgs>
  }
  export type PagoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CatedraAlumno?: boolean | CatedraAlumnoDefaultArgs<ExtArgs>
    Docente?: boolean | Pago$DocenteArgs<ExtArgs>
  }
  export type PagoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CatedraAlumno?: boolean | CatedraAlumnoDefaultArgs<ExtArgs>
    Docente?: boolean | Pago$DocenteArgs<ExtArgs>
  }

  export type $PagoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pago"
    objects: {
      CatedraAlumno: Prisma.$CatedraAlumnoPayload<ExtArgs>
      Docente: Prisma.$DocentePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      catedraAlumnoId: number
      fecha_pago: Date
      monto_pagado: number
      tipo_pago: $Enums.TipoPago
      periodo_cubierto: string | null
      confirmadoPorId: number | null
      created_at: Date
    }, ExtArgs["result"]["pago"]>
    composites: {}
  }

  type PagoGetPayload<S extends boolean | null | undefined | PagoDefaultArgs> = $Result.GetResult<Prisma.$PagoPayload, S>

  type PagoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PagoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PagoCountAggregateInputType | true
    }

  export interface PagoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pago'], meta: { name: 'Pago' } }
    /**
     * Find zero or one Pago that matches the filter.
     * @param {PagoFindUniqueArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagoFindUniqueArgs>(args: SelectSubset<T, PagoFindUniqueArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pago that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PagoFindUniqueOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagoFindUniqueOrThrowArgs>(args: SelectSubset<T, PagoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pago that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagoFindFirstArgs>(args?: SelectSubset<T, PagoFindFirstArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pago that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindFirstOrThrowArgs} args - Arguments to find a Pago
     * @example
     * // Get one Pago
     * const pago = await prisma.pago.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagoFindFirstOrThrowArgs>(args?: SelectSubset<T, PagoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagos
     * const pagos = await prisma.pago.findMany()
     * 
     * // Get first 10 Pagos
     * const pagos = await prisma.pago.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pagoWithIdOnly = await prisma.pago.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PagoFindManyArgs>(args?: SelectSubset<T, PagoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pago.
     * @param {PagoCreateArgs} args - Arguments to create a Pago.
     * @example
     * // Create one Pago
     * const Pago = await prisma.pago.create({
     *   data: {
     *     // ... data to create a Pago
     *   }
     * })
     * 
     */
    create<T extends PagoCreateArgs>(args: SelectSubset<T, PagoCreateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pagos.
     * @param {PagoCreateManyArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagoCreateManyArgs>(args?: SelectSubset<T, PagoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagos and returns the data saved in the database.
     * @param {PagoCreateManyAndReturnArgs} args - Arguments to create many Pagos.
     * @example
     * // Create many Pagos
     * const pago = await prisma.pago.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagos and only return the `id`
     * const pagoWithIdOnly = await prisma.pago.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagoCreateManyAndReturnArgs>(args?: SelectSubset<T, PagoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pago.
     * @param {PagoDeleteArgs} args - Arguments to delete one Pago.
     * @example
     * // Delete one Pago
     * const Pago = await prisma.pago.delete({
     *   where: {
     *     // ... filter to delete one Pago
     *   }
     * })
     * 
     */
    delete<T extends PagoDeleteArgs>(args: SelectSubset<T, PagoDeleteArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pago.
     * @param {PagoUpdateArgs} args - Arguments to update one Pago.
     * @example
     * // Update one Pago
     * const pago = await prisma.pago.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagoUpdateArgs>(args: SelectSubset<T, PagoUpdateArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pagos.
     * @param {PagoDeleteManyArgs} args - Arguments to filter Pagos to delete.
     * @example
     * // Delete a few Pagos
     * const { count } = await prisma.pago.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagoDeleteManyArgs>(args?: SelectSubset<T, PagoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagos
     * const pago = await prisma.pago.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagoUpdateManyArgs>(args: SelectSubset<T, PagoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagos and returns the data updated in the database.
     * @param {PagoUpdateManyAndReturnArgs} args - Arguments to update many Pagos.
     * @example
     * // Update many Pagos
     * const pago = await prisma.pago.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pagos and only return the `id`
     * const pagoWithIdOnly = await prisma.pago.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PagoUpdateManyAndReturnArgs>(args: SelectSubset<T, PagoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pago.
     * @param {PagoUpsertArgs} args - Arguments to update or create a Pago.
     * @example
     * // Update or create a Pago
     * const pago = await prisma.pago.upsert({
     *   create: {
     *     // ... data to create a Pago
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pago we want to update
     *   }
     * })
     */
    upsert<T extends PagoUpsertArgs>(args: SelectSubset<T, PagoUpsertArgs<ExtArgs>>): Prisma__PagoClient<$Result.GetResult<Prisma.$PagoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoCountArgs} args - Arguments to filter Pagos to count.
     * @example
     * // Count the number of Pagos
     * const count = await prisma.pago.count({
     *   where: {
     *     // ... the filter for the Pagos we want to count
     *   }
     * })
    **/
    count<T extends PagoCountArgs>(
      args?: Subset<T, PagoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagoAggregateArgs>(args: Subset<T, PagoAggregateArgs>): Prisma.PrismaPromise<GetPagoAggregateType<T>>

    /**
     * Group by Pago.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagoGroupByArgs['orderBy'] }
        : { orderBy?: PagoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pago model
   */
  readonly fields: PagoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pago.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CatedraAlumno<T extends CatedraAlumnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraAlumnoDefaultArgs<ExtArgs>>): Prisma__CatedraAlumnoClient<$Result.GetResult<Prisma.$CatedraAlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Docente<T extends Pago$DocenteArgs<ExtArgs> = {}>(args?: Subset<T, Pago$DocenteArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pago model
   */
  interface PagoFieldRefs {
    readonly id: FieldRef<"Pago", 'Int'>
    readonly catedraAlumnoId: FieldRef<"Pago", 'Int'>
    readonly fecha_pago: FieldRef<"Pago", 'DateTime'>
    readonly monto_pagado: FieldRef<"Pago", 'Float'>
    readonly tipo_pago: FieldRef<"Pago", 'TipoPago'>
    readonly periodo_cubierto: FieldRef<"Pago", 'String'>
    readonly confirmadoPorId: FieldRef<"Pago", 'Int'>
    readonly created_at: FieldRef<"Pago", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pago findUnique
   */
  export type PagoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findUniqueOrThrow
   */
  export type PagoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago findFirst
   */
  export type PagoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findFirstOrThrow
   */
  export type PagoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pago to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagos.
     */
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago findMany
   */
  export type PagoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter, which Pagos to fetch.
     */
    where?: PagoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagos to fetch.
     */
    orderBy?: PagoOrderByWithRelationInput | PagoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagos.
     */
    cursor?: PagoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagos.
     */
    skip?: number
    distinct?: PagoScalarFieldEnum | PagoScalarFieldEnum[]
  }

  /**
   * Pago create
   */
  export type PagoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pago.
     */
    data: XOR<PagoCreateInput, PagoUncheckedCreateInput>
  }

  /**
   * Pago createMany
   */
  export type PagoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pago createManyAndReturn
   */
  export type PagoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * The data used to create many Pagos.
     */
    data: PagoCreateManyInput | PagoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pago update
   */
  export type PagoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pago.
     */
    data: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
    /**
     * Choose, which Pago to update.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago updateMany
   */
  export type PagoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to update.
     */
    limit?: number
  }

  /**
   * Pago updateManyAndReturn
   */
  export type PagoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * The data used to update Pagos.
     */
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyInput>
    /**
     * Filter which Pagos to update
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pago upsert
   */
  export type PagoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pago to update in case it exists.
     */
    where: PagoWhereUniqueInput
    /**
     * In case the Pago found by the `where` argument doesn't exist, create a new Pago with this data.
     */
    create: XOR<PagoCreateInput, PagoUncheckedCreateInput>
    /**
     * In case the Pago was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagoUpdateInput, PagoUncheckedUpdateInput>
  }

  /**
   * Pago delete
   */
  export type PagoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
    /**
     * Filter which Pago to delete.
     */
    where: PagoWhereUniqueInput
  }

  /**
   * Pago deleteMany
   */
  export type PagoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagos to delete
     */
    where?: PagoWhereInput
    /**
     * Limit how many Pagos to delete.
     */
    limit?: number
  }

  /**
   * Pago.Docente
   */
  export type Pago$DocenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    where?: DocenteWhereInput
  }

  /**
   * Pago without action
   */
  export type PagoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pago
     */
    select?: PagoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pago
     */
    omit?: PagoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagoInclude<ExtArgs> | null
  }


  /**
   * Model PlanDeClases
   */

  export type AggregatePlanDeClases = {
    _count: PlanDeClasesCountAggregateOutputType | null
    _avg: PlanDeClasesAvgAggregateOutputType | null
    _sum: PlanDeClasesSumAggregateOutputType | null
    _min: PlanDeClasesMinAggregateOutputType | null
    _max: PlanDeClasesMaxAggregateOutputType | null
  }

  export type PlanDeClasesAvgAggregateOutputType = {
    id: number | null
    docenteId: number | null
    catedraId: number | null
  }

  export type PlanDeClasesSumAggregateOutputType = {
    id: number | null
    docenteId: number | null
    catedraId: number | null
  }

  export type PlanDeClasesMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    tipoOrganizacion: $Enums.TipoOrganizacionPlan | null
    docenteId: number | null
    catedraId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PlanDeClasesMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    tipoOrganizacion: $Enums.TipoOrganizacionPlan | null
    docenteId: number | null
    catedraId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PlanDeClasesCountAggregateOutputType = {
    id: number
    titulo: number
    tipoOrganizacion: number
    docenteId: number
    catedraId: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PlanDeClasesAvgAggregateInputType = {
    id?: true
    docenteId?: true
    catedraId?: true
  }

  export type PlanDeClasesSumAggregateInputType = {
    id?: true
    docenteId?: true
    catedraId?: true
  }

  export type PlanDeClasesMinAggregateInputType = {
    id?: true
    titulo?: true
    tipoOrganizacion?: true
    docenteId?: true
    catedraId?: true
    created_at?: true
    updated_at?: true
  }

  export type PlanDeClasesMaxAggregateInputType = {
    id?: true
    titulo?: true
    tipoOrganizacion?: true
    docenteId?: true
    catedraId?: true
    created_at?: true
    updated_at?: true
  }

  export type PlanDeClasesCountAggregateInputType = {
    id?: true
    titulo?: true
    tipoOrganizacion?: true
    docenteId?: true
    catedraId?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PlanDeClasesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlanDeClases to aggregate.
     */
    where?: PlanDeClasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanDeClases to fetch.
     */
    orderBy?: PlanDeClasesOrderByWithRelationInput | PlanDeClasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlanDeClasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanDeClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanDeClases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PlanDeClases
    **/
    _count?: true | PlanDeClasesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlanDeClasesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlanDeClasesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlanDeClasesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlanDeClasesMaxAggregateInputType
  }

  export type GetPlanDeClasesAggregateType<T extends PlanDeClasesAggregateArgs> = {
        [P in keyof T & keyof AggregatePlanDeClases]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlanDeClases[P]>
      : GetScalarType<T[P], AggregatePlanDeClases[P]>
  }




  export type PlanDeClasesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlanDeClasesWhereInput
    orderBy?: PlanDeClasesOrderByWithAggregationInput | PlanDeClasesOrderByWithAggregationInput[]
    by: PlanDeClasesScalarFieldEnum[] | PlanDeClasesScalarFieldEnum
    having?: PlanDeClasesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlanDeClasesCountAggregateInputType | true
    _avg?: PlanDeClasesAvgAggregateInputType
    _sum?: PlanDeClasesSumAggregateInputType
    _min?: PlanDeClasesMinAggregateInputType
    _max?: PlanDeClasesMaxAggregateInputType
  }

  export type PlanDeClasesGroupByOutputType = {
    id: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    docenteId: number
    catedraId: number
    created_at: Date
    updated_at: Date
    _count: PlanDeClasesCountAggregateOutputType | null
    _avg: PlanDeClasesAvgAggregateOutputType | null
    _sum: PlanDeClasesSumAggregateOutputType | null
    _min: PlanDeClasesMinAggregateOutputType | null
    _max: PlanDeClasesMaxAggregateOutputType | null
  }

  type GetPlanDeClasesGroupByPayload<T extends PlanDeClasesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlanDeClasesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlanDeClasesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlanDeClasesGroupByOutputType[P]>
            : GetScalarType<T[P], PlanDeClasesGroupByOutputType[P]>
        }
      >
    >


  export type PlanDeClasesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    tipoOrganizacion?: boolean
    docenteId?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Docente?: boolean | DocenteDefaultArgs<ExtArgs>
    UnidadPlan?: boolean | PlanDeClases$UnidadPlanArgs<ExtArgs>
    _count?: boolean | PlanDeClasesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["planDeClases"]>

  export type PlanDeClasesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    tipoOrganizacion?: boolean
    docenteId?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Docente?: boolean | DocenteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["planDeClases"]>

  export type PlanDeClasesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    tipoOrganizacion?: boolean
    docenteId?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Docente?: boolean | DocenteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["planDeClases"]>

  export type PlanDeClasesSelectScalar = {
    id?: boolean
    titulo?: boolean
    tipoOrganizacion?: boolean
    docenteId?: boolean
    catedraId?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type PlanDeClasesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "tipoOrganizacion" | "docenteId" | "catedraId" | "created_at" | "updated_at", ExtArgs["result"]["planDeClases"]>
  export type PlanDeClasesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Docente?: boolean | DocenteDefaultArgs<ExtArgs>
    UnidadPlan?: boolean | PlanDeClases$UnidadPlanArgs<ExtArgs>
    _count?: boolean | PlanDeClasesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PlanDeClasesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Docente?: boolean | DocenteDefaultArgs<ExtArgs>
  }
  export type PlanDeClasesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    Docente?: boolean | DocenteDefaultArgs<ExtArgs>
  }

  export type $PlanDeClasesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PlanDeClases"
    objects: {
      Catedra: Prisma.$CatedraPayload<ExtArgs>
      Docente: Prisma.$DocentePayload<ExtArgs>
      UnidadPlan: Prisma.$UnidadPlanPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      tipoOrganizacion: $Enums.TipoOrganizacionPlan
      docenteId: number
      catedraId: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["planDeClases"]>
    composites: {}
  }

  type PlanDeClasesGetPayload<S extends boolean | null | undefined | PlanDeClasesDefaultArgs> = $Result.GetResult<Prisma.$PlanDeClasesPayload, S>

  type PlanDeClasesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PlanDeClasesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PlanDeClasesCountAggregateInputType | true
    }

  export interface PlanDeClasesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PlanDeClases'], meta: { name: 'PlanDeClases' } }
    /**
     * Find zero or one PlanDeClases that matches the filter.
     * @param {PlanDeClasesFindUniqueArgs} args - Arguments to find a PlanDeClases
     * @example
     * // Get one PlanDeClases
     * const planDeClases = await prisma.planDeClases.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PlanDeClasesFindUniqueArgs>(args: SelectSubset<T, PlanDeClasesFindUniqueArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PlanDeClases that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PlanDeClasesFindUniqueOrThrowArgs} args - Arguments to find a PlanDeClases
     * @example
     * // Get one PlanDeClases
     * const planDeClases = await prisma.planDeClases.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PlanDeClasesFindUniqueOrThrowArgs>(args: SelectSubset<T, PlanDeClasesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PlanDeClases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanDeClasesFindFirstArgs} args - Arguments to find a PlanDeClases
     * @example
     * // Get one PlanDeClases
     * const planDeClases = await prisma.planDeClases.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PlanDeClasesFindFirstArgs>(args?: SelectSubset<T, PlanDeClasesFindFirstArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PlanDeClases that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanDeClasesFindFirstOrThrowArgs} args - Arguments to find a PlanDeClases
     * @example
     * // Get one PlanDeClases
     * const planDeClases = await prisma.planDeClases.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PlanDeClasesFindFirstOrThrowArgs>(args?: SelectSubset<T, PlanDeClasesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PlanDeClases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanDeClasesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PlanDeClases
     * const planDeClases = await prisma.planDeClases.findMany()
     * 
     * // Get first 10 PlanDeClases
     * const planDeClases = await prisma.planDeClases.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const planDeClasesWithIdOnly = await prisma.planDeClases.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PlanDeClasesFindManyArgs>(args?: SelectSubset<T, PlanDeClasesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PlanDeClases.
     * @param {PlanDeClasesCreateArgs} args - Arguments to create a PlanDeClases.
     * @example
     * // Create one PlanDeClases
     * const PlanDeClases = await prisma.planDeClases.create({
     *   data: {
     *     // ... data to create a PlanDeClases
     *   }
     * })
     * 
     */
    create<T extends PlanDeClasesCreateArgs>(args: SelectSubset<T, PlanDeClasesCreateArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PlanDeClases.
     * @param {PlanDeClasesCreateManyArgs} args - Arguments to create many PlanDeClases.
     * @example
     * // Create many PlanDeClases
     * const planDeClases = await prisma.planDeClases.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PlanDeClasesCreateManyArgs>(args?: SelectSubset<T, PlanDeClasesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PlanDeClases and returns the data saved in the database.
     * @param {PlanDeClasesCreateManyAndReturnArgs} args - Arguments to create many PlanDeClases.
     * @example
     * // Create many PlanDeClases
     * const planDeClases = await prisma.planDeClases.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PlanDeClases and only return the `id`
     * const planDeClasesWithIdOnly = await prisma.planDeClases.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PlanDeClasesCreateManyAndReturnArgs>(args?: SelectSubset<T, PlanDeClasesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PlanDeClases.
     * @param {PlanDeClasesDeleteArgs} args - Arguments to delete one PlanDeClases.
     * @example
     * // Delete one PlanDeClases
     * const PlanDeClases = await prisma.planDeClases.delete({
     *   where: {
     *     // ... filter to delete one PlanDeClases
     *   }
     * })
     * 
     */
    delete<T extends PlanDeClasesDeleteArgs>(args: SelectSubset<T, PlanDeClasesDeleteArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PlanDeClases.
     * @param {PlanDeClasesUpdateArgs} args - Arguments to update one PlanDeClases.
     * @example
     * // Update one PlanDeClases
     * const planDeClases = await prisma.planDeClases.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PlanDeClasesUpdateArgs>(args: SelectSubset<T, PlanDeClasesUpdateArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PlanDeClases.
     * @param {PlanDeClasesDeleteManyArgs} args - Arguments to filter PlanDeClases to delete.
     * @example
     * // Delete a few PlanDeClases
     * const { count } = await prisma.planDeClases.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PlanDeClasesDeleteManyArgs>(args?: SelectSubset<T, PlanDeClasesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlanDeClases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanDeClasesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PlanDeClases
     * const planDeClases = await prisma.planDeClases.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PlanDeClasesUpdateManyArgs>(args: SelectSubset<T, PlanDeClasesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PlanDeClases and returns the data updated in the database.
     * @param {PlanDeClasesUpdateManyAndReturnArgs} args - Arguments to update many PlanDeClases.
     * @example
     * // Update many PlanDeClases
     * const planDeClases = await prisma.planDeClases.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PlanDeClases and only return the `id`
     * const planDeClasesWithIdOnly = await prisma.planDeClases.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PlanDeClasesUpdateManyAndReturnArgs>(args: SelectSubset<T, PlanDeClasesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PlanDeClases.
     * @param {PlanDeClasesUpsertArgs} args - Arguments to update or create a PlanDeClases.
     * @example
     * // Update or create a PlanDeClases
     * const planDeClases = await prisma.planDeClases.upsert({
     *   create: {
     *     // ... data to create a PlanDeClases
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PlanDeClases we want to update
     *   }
     * })
     */
    upsert<T extends PlanDeClasesUpsertArgs>(args: SelectSubset<T, PlanDeClasesUpsertArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PlanDeClases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanDeClasesCountArgs} args - Arguments to filter PlanDeClases to count.
     * @example
     * // Count the number of PlanDeClases
     * const count = await prisma.planDeClases.count({
     *   where: {
     *     // ... the filter for the PlanDeClases we want to count
     *   }
     * })
    **/
    count<T extends PlanDeClasesCountArgs>(
      args?: Subset<T, PlanDeClasesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlanDeClasesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PlanDeClases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanDeClasesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlanDeClasesAggregateArgs>(args: Subset<T, PlanDeClasesAggregateArgs>): Prisma.PrismaPromise<GetPlanDeClasesAggregateType<T>>

    /**
     * Group by PlanDeClases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlanDeClasesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlanDeClasesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlanDeClasesGroupByArgs['orderBy'] }
        : { orderBy?: PlanDeClasesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlanDeClasesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlanDeClasesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PlanDeClases model
   */
  readonly fields: PlanDeClasesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PlanDeClases.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PlanDeClasesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Docente<T extends DocenteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DocenteDefaultArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    UnidadPlan<T extends PlanDeClases$UnidadPlanArgs<ExtArgs> = {}>(args?: Subset<T, PlanDeClases$UnidadPlanArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PlanDeClases model
   */
  interface PlanDeClasesFieldRefs {
    readonly id: FieldRef<"PlanDeClases", 'Int'>
    readonly titulo: FieldRef<"PlanDeClases", 'String'>
    readonly tipoOrganizacion: FieldRef<"PlanDeClases", 'TipoOrganizacionPlan'>
    readonly docenteId: FieldRef<"PlanDeClases", 'Int'>
    readonly catedraId: FieldRef<"PlanDeClases", 'Int'>
    readonly created_at: FieldRef<"PlanDeClases", 'DateTime'>
    readonly updated_at: FieldRef<"PlanDeClases", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PlanDeClases findUnique
   */
  export type PlanDeClasesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * Filter, which PlanDeClases to fetch.
     */
    where: PlanDeClasesWhereUniqueInput
  }

  /**
   * PlanDeClases findUniqueOrThrow
   */
  export type PlanDeClasesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * Filter, which PlanDeClases to fetch.
     */
    where: PlanDeClasesWhereUniqueInput
  }

  /**
   * PlanDeClases findFirst
   */
  export type PlanDeClasesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * Filter, which PlanDeClases to fetch.
     */
    where?: PlanDeClasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanDeClases to fetch.
     */
    orderBy?: PlanDeClasesOrderByWithRelationInput | PlanDeClasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlanDeClases.
     */
    cursor?: PlanDeClasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanDeClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanDeClases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlanDeClases.
     */
    distinct?: PlanDeClasesScalarFieldEnum | PlanDeClasesScalarFieldEnum[]
  }

  /**
   * PlanDeClases findFirstOrThrow
   */
  export type PlanDeClasesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * Filter, which PlanDeClases to fetch.
     */
    where?: PlanDeClasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanDeClases to fetch.
     */
    orderBy?: PlanDeClasesOrderByWithRelationInput | PlanDeClasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PlanDeClases.
     */
    cursor?: PlanDeClasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanDeClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanDeClases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PlanDeClases.
     */
    distinct?: PlanDeClasesScalarFieldEnum | PlanDeClasesScalarFieldEnum[]
  }

  /**
   * PlanDeClases findMany
   */
  export type PlanDeClasesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * Filter, which PlanDeClases to fetch.
     */
    where?: PlanDeClasesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PlanDeClases to fetch.
     */
    orderBy?: PlanDeClasesOrderByWithRelationInput | PlanDeClasesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PlanDeClases.
     */
    cursor?: PlanDeClasesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PlanDeClases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PlanDeClases.
     */
    skip?: number
    distinct?: PlanDeClasesScalarFieldEnum | PlanDeClasesScalarFieldEnum[]
  }

  /**
   * PlanDeClases create
   */
  export type PlanDeClasesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * The data needed to create a PlanDeClases.
     */
    data: XOR<PlanDeClasesCreateInput, PlanDeClasesUncheckedCreateInput>
  }

  /**
   * PlanDeClases createMany
   */
  export type PlanDeClasesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PlanDeClases.
     */
    data: PlanDeClasesCreateManyInput | PlanDeClasesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PlanDeClases createManyAndReturn
   */
  export type PlanDeClasesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * The data used to create many PlanDeClases.
     */
    data: PlanDeClasesCreateManyInput | PlanDeClasesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PlanDeClases update
   */
  export type PlanDeClasesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * The data needed to update a PlanDeClases.
     */
    data: XOR<PlanDeClasesUpdateInput, PlanDeClasesUncheckedUpdateInput>
    /**
     * Choose, which PlanDeClases to update.
     */
    where: PlanDeClasesWhereUniqueInput
  }

  /**
   * PlanDeClases updateMany
   */
  export type PlanDeClasesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PlanDeClases.
     */
    data: XOR<PlanDeClasesUpdateManyMutationInput, PlanDeClasesUncheckedUpdateManyInput>
    /**
     * Filter which PlanDeClases to update
     */
    where?: PlanDeClasesWhereInput
    /**
     * Limit how many PlanDeClases to update.
     */
    limit?: number
  }

  /**
   * PlanDeClases updateManyAndReturn
   */
  export type PlanDeClasesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * The data used to update PlanDeClases.
     */
    data: XOR<PlanDeClasesUpdateManyMutationInput, PlanDeClasesUncheckedUpdateManyInput>
    /**
     * Filter which PlanDeClases to update
     */
    where?: PlanDeClasesWhereInput
    /**
     * Limit how many PlanDeClases to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PlanDeClases upsert
   */
  export type PlanDeClasesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * The filter to search for the PlanDeClases to update in case it exists.
     */
    where: PlanDeClasesWhereUniqueInput
    /**
     * In case the PlanDeClases found by the `where` argument doesn't exist, create a new PlanDeClases with this data.
     */
    create: XOR<PlanDeClasesCreateInput, PlanDeClasesUncheckedCreateInput>
    /**
     * In case the PlanDeClases was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlanDeClasesUpdateInput, PlanDeClasesUncheckedUpdateInput>
  }

  /**
   * PlanDeClases delete
   */
  export type PlanDeClasesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
    /**
     * Filter which PlanDeClases to delete.
     */
    where: PlanDeClasesWhereUniqueInput
  }

  /**
   * PlanDeClases deleteMany
   */
  export type PlanDeClasesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PlanDeClases to delete
     */
    where?: PlanDeClasesWhereInput
    /**
     * Limit how many PlanDeClases to delete.
     */
    limit?: number
  }

  /**
   * PlanDeClases.UnidadPlan
   */
  export type PlanDeClases$UnidadPlanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    where?: UnidadPlanWhereInput
    orderBy?: UnidadPlanOrderByWithRelationInput | UnidadPlanOrderByWithRelationInput[]
    cursor?: UnidadPlanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UnidadPlanScalarFieldEnum | UnidadPlanScalarFieldEnum[]
  }

  /**
   * PlanDeClases without action
   */
  export type PlanDeClasesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PlanDeClases
     */
    select?: PlanDeClasesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PlanDeClases
     */
    omit?: PlanDeClasesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlanDeClasesInclude<ExtArgs> | null
  }


  /**
   * Model Pregunta
   */

  export type AggregatePregunta = {
    _count: PreguntaCountAggregateOutputType | null
    _avg: PreguntaAvgAggregateOutputType | null
    _sum: PreguntaSumAggregateOutputType | null
    _min: PreguntaMinAggregateOutputType | null
    _max: PreguntaMaxAggregateOutputType | null
  }

  export type PreguntaAvgAggregateOutputType = {
    id: number | null
    evaluacionId: number | null
  }

  export type PreguntaSumAggregateOutputType = {
    id: number | null
    evaluacionId: number | null
  }

  export type PreguntaMinAggregateOutputType = {
    id: number | null
    texto: string | null
    evaluacionId: number | null
  }

  export type PreguntaMaxAggregateOutputType = {
    id: number | null
    texto: string | null
    evaluacionId: number | null
  }

  export type PreguntaCountAggregateOutputType = {
    id: number
    texto: number
    evaluacionId: number
    _all: number
  }


  export type PreguntaAvgAggregateInputType = {
    id?: true
    evaluacionId?: true
  }

  export type PreguntaSumAggregateInputType = {
    id?: true
    evaluacionId?: true
  }

  export type PreguntaMinAggregateInputType = {
    id?: true
    texto?: true
    evaluacionId?: true
  }

  export type PreguntaMaxAggregateInputType = {
    id?: true
    texto?: true
    evaluacionId?: true
  }

  export type PreguntaCountAggregateInputType = {
    id?: true
    texto?: true
    evaluacionId?: true
    _all?: true
  }

  export type PreguntaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pregunta to aggregate.
     */
    where?: PreguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Preguntas to fetch.
     */
    orderBy?: PreguntaOrderByWithRelationInput | PreguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PreguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Preguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Preguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Preguntas
    **/
    _count?: true | PreguntaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PreguntaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PreguntaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PreguntaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PreguntaMaxAggregateInputType
  }

  export type GetPreguntaAggregateType<T extends PreguntaAggregateArgs> = {
        [P in keyof T & keyof AggregatePregunta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePregunta[P]>
      : GetScalarType<T[P], AggregatePregunta[P]>
  }




  export type PreguntaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PreguntaWhereInput
    orderBy?: PreguntaOrderByWithAggregationInput | PreguntaOrderByWithAggregationInput[]
    by: PreguntaScalarFieldEnum[] | PreguntaScalarFieldEnum
    having?: PreguntaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PreguntaCountAggregateInputType | true
    _avg?: PreguntaAvgAggregateInputType
    _sum?: PreguntaSumAggregateInputType
    _min?: PreguntaMinAggregateInputType
    _max?: PreguntaMaxAggregateInputType
  }

  export type PreguntaGroupByOutputType = {
    id: number
    texto: string
    evaluacionId: number
    _count: PreguntaCountAggregateOutputType | null
    _avg: PreguntaAvgAggregateOutputType | null
    _sum: PreguntaSumAggregateOutputType | null
    _min: PreguntaMinAggregateOutputType | null
    _max: PreguntaMaxAggregateOutputType | null
  }

  type GetPreguntaGroupByPayload<T extends PreguntaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PreguntaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PreguntaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PreguntaGroupByOutputType[P]>
            : GetScalarType<T[P], PreguntaGroupByOutputType[P]>
        }
      >
    >


  export type PreguntaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    evaluacionId?: boolean
    Opcion?: boolean | Pregunta$OpcionArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
    RespuestaAlumno?: boolean | Pregunta$RespuestaAlumnoArgs<ExtArgs>
    _count?: boolean | PreguntaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pregunta"]>

  export type PreguntaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    evaluacionId?: boolean
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pregunta"]>

  export type PreguntaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    texto?: boolean
    evaluacionId?: boolean
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pregunta"]>

  export type PreguntaSelectScalar = {
    id?: boolean
    texto?: boolean
    evaluacionId?: boolean
  }

  export type PreguntaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "texto" | "evaluacionId", ExtArgs["result"]["pregunta"]>
  export type PreguntaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Opcion?: boolean | Pregunta$OpcionArgs<ExtArgs>
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
    RespuestaAlumno?: boolean | Pregunta$RespuestaAlumnoArgs<ExtArgs>
    _count?: boolean | PreguntaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PreguntaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }
  export type PreguntaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }

  export type $PreguntaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pregunta"
    objects: {
      Opcion: Prisma.$OpcionPayload<ExtArgs>[]
      Evaluacion: Prisma.$EvaluacionPayload<ExtArgs>
      RespuestaAlumno: Prisma.$RespuestaAlumnoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      texto: string
      evaluacionId: number
    }, ExtArgs["result"]["pregunta"]>
    composites: {}
  }

  type PreguntaGetPayload<S extends boolean | null | undefined | PreguntaDefaultArgs> = $Result.GetResult<Prisma.$PreguntaPayload, S>

  type PreguntaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PreguntaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PreguntaCountAggregateInputType | true
    }

  export interface PreguntaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pregunta'], meta: { name: 'Pregunta' } }
    /**
     * Find zero or one Pregunta that matches the filter.
     * @param {PreguntaFindUniqueArgs} args - Arguments to find a Pregunta
     * @example
     * // Get one Pregunta
     * const pregunta = await prisma.pregunta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PreguntaFindUniqueArgs>(args: SelectSubset<T, PreguntaFindUniqueArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pregunta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PreguntaFindUniqueOrThrowArgs} args - Arguments to find a Pregunta
     * @example
     * // Get one Pregunta
     * const pregunta = await prisma.pregunta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PreguntaFindUniqueOrThrowArgs>(args: SelectSubset<T, PreguntaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pregunta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreguntaFindFirstArgs} args - Arguments to find a Pregunta
     * @example
     * // Get one Pregunta
     * const pregunta = await prisma.pregunta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PreguntaFindFirstArgs>(args?: SelectSubset<T, PreguntaFindFirstArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pregunta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreguntaFindFirstOrThrowArgs} args - Arguments to find a Pregunta
     * @example
     * // Get one Pregunta
     * const pregunta = await prisma.pregunta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PreguntaFindFirstOrThrowArgs>(args?: SelectSubset<T, PreguntaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Preguntas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreguntaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Preguntas
     * const preguntas = await prisma.pregunta.findMany()
     * 
     * // Get first 10 Preguntas
     * const preguntas = await prisma.pregunta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const preguntaWithIdOnly = await prisma.pregunta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PreguntaFindManyArgs>(args?: SelectSubset<T, PreguntaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pregunta.
     * @param {PreguntaCreateArgs} args - Arguments to create a Pregunta.
     * @example
     * // Create one Pregunta
     * const Pregunta = await prisma.pregunta.create({
     *   data: {
     *     // ... data to create a Pregunta
     *   }
     * })
     * 
     */
    create<T extends PreguntaCreateArgs>(args: SelectSubset<T, PreguntaCreateArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Preguntas.
     * @param {PreguntaCreateManyArgs} args - Arguments to create many Preguntas.
     * @example
     * // Create many Preguntas
     * const pregunta = await prisma.pregunta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PreguntaCreateManyArgs>(args?: SelectSubset<T, PreguntaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Preguntas and returns the data saved in the database.
     * @param {PreguntaCreateManyAndReturnArgs} args - Arguments to create many Preguntas.
     * @example
     * // Create many Preguntas
     * const pregunta = await prisma.pregunta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Preguntas and only return the `id`
     * const preguntaWithIdOnly = await prisma.pregunta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PreguntaCreateManyAndReturnArgs>(args?: SelectSubset<T, PreguntaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pregunta.
     * @param {PreguntaDeleteArgs} args - Arguments to delete one Pregunta.
     * @example
     * // Delete one Pregunta
     * const Pregunta = await prisma.pregunta.delete({
     *   where: {
     *     // ... filter to delete one Pregunta
     *   }
     * })
     * 
     */
    delete<T extends PreguntaDeleteArgs>(args: SelectSubset<T, PreguntaDeleteArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pregunta.
     * @param {PreguntaUpdateArgs} args - Arguments to update one Pregunta.
     * @example
     * // Update one Pregunta
     * const pregunta = await prisma.pregunta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PreguntaUpdateArgs>(args: SelectSubset<T, PreguntaUpdateArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Preguntas.
     * @param {PreguntaDeleteManyArgs} args - Arguments to filter Preguntas to delete.
     * @example
     * // Delete a few Preguntas
     * const { count } = await prisma.pregunta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PreguntaDeleteManyArgs>(args?: SelectSubset<T, PreguntaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Preguntas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreguntaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Preguntas
     * const pregunta = await prisma.pregunta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PreguntaUpdateManyArgs>(args: SelectSubset<T, PreguntaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Preguntas and returns the data updated in the database.
     * @param {PreguntaUpdateManyAndReturnArgs} args - Arguments to update many Preguntas.
     * @example
     * // Update many Preguntas
     * const pregunta = await prisma.pregunta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Preguntas and only return the `id`
     * const preguntaWithIdOnly = await prisma.pregunta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PreguntaUpdateManyAndReturnArgs>(args: SelectSubset<T, PreguntaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pregunta.
     * @param {PreguntaUpsertArgs} args - Arguments to update or create a Pregunta.
     * @example
     * // Update or create a Pregunta
     * const pregunta = await prisma.pregunta.upsert({
     *   create: {
     *     // ... data to create a Pregunta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pregunta we want to update
     *   }
     * })
     */
    upsert<T extends PreguntaUpsertArgs>(args: SelectSubset<T, PreguntaUpsertArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Preguntas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreguntaCountArgs} args - Arguments to filter Preguntas to count.
     * @example
     * // Count the number of Preguntas
     * const count = await prisma.pregunta.count({
     *   where: {
     *     // ... the filter for the Preguntas we want to count
     *   }
     * })
    **/
    count<T extends PreguntaCountArgs>(
      args?: Subset<T, PreguntaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PreguntaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pregunta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreguntaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PreguntaAggregateArgs>(args: Subset<T, PreguntaAggregateArgs>): Prisma.PrismaPromise<GetPreguntaAggregateType<T>>

    /**
     * Group by Pregunta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PreguntaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PreguntaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PreguntaGroupByArgs['orderBy'] }
        : { orderBy?: PreguntaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PreguntaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPreguntaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pregunta model
   */
  readonly fields: PreguntaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pregunta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PreguntaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Opcion<T extends Pregunta$OpcionArgs<ExtArgs> = {}>(args?: Subset<T, Pregunta$OpcionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Evaluacion<T extends EvaluacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EvaluacionDefaultArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    RespuestaAlumno<T extends Pregunta$RespuestaAlumnoArgs<ExtArgs> = {}>(args?: Subset<T, Pregunta$RespuestaAlumnoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pregunta model
   */
  interface PreguntaFieldRefs {
    readonly id: FieldRef<"Pregunta", 'Int'>
    readonly texto: FieldRef<"Pregunta", 'String'>
    readonly evaluacionId: FieldRef<"Pregunta", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Pregunta findUnique
   */
  export type PreguntaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * Filter, which Pregunta to fetch.
     */
    where: PreguntaWhereUniqueInput
  }

  /**
   * Pregunta findUniqueOrThrow
   */
  export type PreguntaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * Filter, which Pregunta to fetch.
     */
    where: PreguntaWhereUniqueInput
  }

  /**
   * Pregunta findFirst
   */
  export type PreguntaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * Filter, which Pregunta to fetch.
     */
    where?: PreguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Preguntas to fetch.
     */
    orderBy?: PreguntaOrderByWithRelationInput | PreguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Preguntas.
     */
    cursor?: PreguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Preguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Preguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Preguntas.
     */
    distinct?: PreguntaScalarFieldEnum | PreguntaScalarFieldEnum[]
  }

  /**
   * Pregunta findFirstOrThrow
   */
  export type PreguntaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * Filter, which Pregunta to fetch.
     */
    where?: PreguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Preguntas to fetch.
     */
    orderBy?: PreguntaOrderByWithRelationInput | PreguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Preguntas.
     */
    cursor?: PreguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Preguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Preguntas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Preguntas.
     */
    distinct?: PreguntaScalarFieldEnum | PreguntaScalarFieldEnum[]
  }

  /**
   * Pregunta findMany
   */
  export type PreguntaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * Filter, which Preguntas to fetch.
     */
    where?: PreguntaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Preguntas to fetch.
     */
    orderBy?: PreguntaOrderByWithRelationInput | PreguntaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Preguntas.
     */
    cursor?: PreguntaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Preguntas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Preguntas.
     */
    skip?: number
    distinct?: PreguntaScalarFieldEnum | PreguntaScalarFieldEnum[]
  }

  /**
   * Pregunta create
   */
  export type PreguntaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * The data needed to create a Pregunta.
     */
    data: XOR<PreguntaCreateInput, PreguntaUncheckedCreateInput>
  }

  /**
   * Pregunta createMany
   */
  export type PreguntaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Preguntas.
     */
    data: PreguntaCreateManyInput | PreguntaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pregunta createManyAndReturn
   */
  export type PreguntaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * The data used to create many Preguntas.
     */
    data: PreguntaCreateManyInput | PreguntaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pregunta update
   */
  export type PreguntaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * The data needed to update a Pregunta.
     */
    data: XOR<PreguntaUpdateInput, PreguntaUncheckedUpdateInput>
    /**
     * Choose, which Pregunta to update.
     */
    where: PreguntaWhereUniqueInput
  }

  /**
   * Pregunta updateMany
   */
  export type PreguntaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Preguntas.
     */
    data: XOR<PreguntaUpdateManyMutationInput, PreguntaUncheckedUpdateManyInput>
    /**
     * Filter which Preguntas to update
     */
    where?: PreguntaWhereInput
    /**
     * Limit how many Preguntas to update.
     */
    limit?: number
  }

  /**
   * Pregunta updateManyAndReturn
   */
  export type PreguntaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * The data used to update Preguntas.
     */
    data: XOR<PreguntaUpdateManyMutationInput, PreguntaUncheckedUpdateManyInput>
    /**
     * Filter which Preguntas to update
     */
    where?: PreguntaWhereInput
    /**
     * Limit how many Preguntas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pregunta upsert
   */
  export type PreguntaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * The filter to search for the Pregunta to update in case it exists.
     */
    where: PreguntaWhereUniqueInput
    /**
     * In case the Pregunta found by the `where` argument doesn't exist, create a new Pregunta with this data.
     */
    create: XOR<PreguntaCreateInput, PreguntaUncheckedCreateInput>
    /**
     * In case the Pregunta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PreguntaUpdateInput, PreguntaUncheckedUpdateInput>
  }

  /**
   * Pregunta delete
   */
  export type PreguntaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
    /**
     * Filter which Pregunta to delete.
     */
    where: PreguntaWhereUniqueInput
  }

  /**
   * Pregunta deleteMany
   */
  export type PreguntaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Preguntas to delete
     */
    where?: PreguntaWhereInput
    /**
     * Limit how many Preguntas to delete.
     */
    limit?: number
  }

  /**
   * Pregunta.Opcion
   */
  export type Pregunta$OpcionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Opcion
     */
    select?: OpcionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Opcion
     */
    omit?: OpcionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpcionInclude<ExtArgs> | null
    where?: OpcionWhereInput
    orderBy?: OpcionOrderByWithRelationInput | OpcionOrderByWithRelationInput[]
    cursor?: OpcionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpcionScalarFieldEnum | OpcionScalarFieldEnum[]
  }

  /**
   * Pregunta.RespuestaAlumno
   */
  export type Pregunta$RespuestaAlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    where?: RespuestaAlumnoWhereInput
    orderBy?: RespuestaAlumnoOrderByWithRelationInput | RespuestaAlumnoOrderByWithRelationInput[]
    cursor?: RespuestaAlumnoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RespuestaAlumnoScalarFieldEnum | RespuestaAlumnoScalarFieldEnum[]
  }

  /**
   * Pregunta without action
   */
  export type PreguntaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pregunta
     */
    select?: PreguntaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pregunta
     */
    omit?: PreguntaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PreguntaInclude<ExtArgs> | null
  }


  /**
   * Model Publicacion
   */

  export type AggregatePublicacion = {
    _count: PublicacionCountAggregateOutputType | null
    _avg: PublicacionAvgAggregateOutputType | null
    _sum: PublicacionSumAggregateOutputType | null
    _min: PublicacionMinAggregateOutputType | null
    _max: PublicacionMaxAggregateOutputType | null
  }

  export type PublicacionAvgAggregateOutputType = {
    id: number | null
    catedraId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
    tareaMaestraId: number | null
    evaluacionAsignacionId: number | null
    evaluacionMaestraId: number | null
  }

  export type PublicacionSumAggregateOutputType = {
    id: number | null
    catedraId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
    tareaMaestraId: number | null
    evaluacionAsignacionId: number | null
    evaluacionMaestraId: number | null
  }

  export type PublicacionMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    contenido: string | null
    tipo: $Enums.TipoPublicacion | null
    catedraId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
    created_at: Date | null
    updated_at: Date | null
    tareaMaestraId: number | null
    visibleToStudents: boolean | null
    evaluacionAsignacionId: number | null
    evaluacionMaestraId: number | null
  }

  export type PublicacionMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    contenido: string | null
    tipo: $Enums.TipoPublicacion | null
    catedraId: number | null
    autorAlumnoId: number | null
    autorDocenteId: number | null
    created_at: Date | null
    updated_at: Date | null
    tareaMaestraId: number | null
    visibleToStudents: boolean | null
    evaluacionAsignacionId: number | null
    evaluacionMaestraId: number | null
  }

  export type PublicacionCountAggregateOutputType = {
    id: number
    titulo: number
    contenido: number
    tipo: number
    catedraId: number
    autorAlumnoId: number
    autorDocenteId: number
    created_at: number
    updated_at: number
    tareaMaestraId: number
    visibleToStudents: number
    evaluacionAsignacionId: number
    evaluacionMaestraId: number
    _all: number
  }


  export type PublicacionAvgAggregateInputType = {
    id?: true
    catedraId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    tareaMaestraId?: true
    evaluacionAsignacionId?: true
    evaluacionMaestraId?: true
  }

  export type PublicacionSumAggregateInputType = {
    id?: true
    catedraId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    tareaMaestraId?: true
    evaluacionAsignacionId?: true
    evaluacionMaestraId?: true
  }

  export type PublicacionMinAggregateInputType = {
    id?: true
    titulo?: true
    contenido?: true
    tipo?: true
    catedraId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    created_at?: true
    updated_at?: true
    tareaMaestraId?: true
    visibleToStudents?: true
    evaluacionAsignacionId?: true
    evaluacionMaestraId?: true
  }

  export type PublicacionMaxAggregateInputType = {
    id?: true
    titulo?: true
    contenido?: true
    tipo?: true
    catedraId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    created_at?: true
    updated_at?: true
    tareaMaestraId?: true
    visibleToStudents?: true
    evaluacionAsignacionId?: true
    evaluacionMaestraId?: true
  }

  export type PublicacionCountAggregateInputType = {
    id?: true
    titulo?: true
    contenido?: true
    tipo?: true
    catedraId?: true
    autorAlumnoId?: true
    autorDocenteId?: true
    created_at?: true
    updated_at?: true
    tareaMaestraId?: true
    visibleToStudents?: true
    evaluacionAsignacionId?: true
    evaluacionMaestraId?: true
    _all?: true
  }

  export type PublicacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicacion to aggregate.
     */
    where?: PublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacions to fetch.
     */
    orderBy?: PublicacionOrderByWithRelationInput | PublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Publicacions
    **/
    _count?: true | PublicacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PublicacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PublicacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PublicacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PublicacionMaxAggregateInputType
  }

  export type GetPublicacionAggregateType<T extends PublicacionAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicacion[P]>
      : GetScalarType<T[P], AggregatePublicacion[P]>
  }




  export type PublicacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionWhereInput
    orderBy?: PublicacionOrderByWithAggregationInput | PublicacionOrderByWithAggregationInput[]
    by: PublicacionScalarFieldEnum[] | PublicacionScalarFieldEnum
    having?: PublicacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PublicacionCountAggregateInputType | true
    _avg?: PublicacionAvgAggregateInputType
    _sum?: PublicacionSumAggregateInputType
    _min?: PublicacionMinAggregateInputType
    _max?: PublicacionMaxAggregateInputType
  }

  export type PublicacionGroupByOutputType = {
    id: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId: number | null
    autorDocenteId: number | null
    created_at: Date
    updated_at: Date
    tareaMaestraId: number | null
    visibleToStudents: boolean
    evaluacionAsignacionId: number | null
    evaluacionMaestraId: number | null
    _count: PublicacionCountAggregateOutputType | null
    _avg: PublicacionAvgAggregateOutputType | null
    _sum: PublicacionSumAggregateOutputType | null
    _min: PublicacionMinAggregateOutputType | null
    _max: PublicacionMaxAggregateOutputType | null
  }

  type GetPublicacionGroupByPayload<T extends PublicacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PublicacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PublicacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PublicacionGroupByOutputType[P]>
            : GetScalarType<T[P], PublicacionGroupByOutputType[P]>
        }
      >
    >


  export type PublicacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    contenido?: boolean
    tipo?: boolean
    catedraId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
    tareaMaestraId?: boolean
    visibleToStudents?: boolean
    evaluacionAsignacionId?: boolean
    evaluacionMaestraId?: boolean
    ComentarioPublicacion?: boolean | Publicacion$ComentarioPublicacionArgs<ExtArgs>
    Alumno?: boolean | Publicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | Publicacion$DocenteArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Publicacion$EvaluacionAsignacionArgs<ExtArgs>
    Evaluacion?: boolean | Publicacion$EvaluacionArgs<ExtArgs>
    TareaMaestra?: boolean | Publicacion$TareaMaestraArgs<ExtArgs>
    PublicacionInteraccion?: boolean | Publicacion$PublicacionInteraccionArgs<ExtArgs>
    _count?: boolean | PublicacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicacion"]>

  export type PublicacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    contenido?: boolean
    tipo?: boolean
    catedraId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
    tareaMaestraId?: boolean
    visibleToStudents?: boolean
    evaluacionAsignacionId?: boolean
    evaluacionMaestraId?: boolean
    Alumno?: boolean | Publicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | Publicacion$DocenteArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Publicacion$EvaluacionAsignacionArgs<ExtArgs>
    Evaluacion?: boolean | Publicacion$EvaluacionArgs<ExtArgs>
    TareaMaestra?: boolean | Publicacion$TareaMaestraArgs<ExtArgs>
  }, ExtArgs["result"]["publicacion"]>

  export type PublicacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    contenido?: boolean
    tipo?: boolean
    catedraId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
    tareaMaestraId?: boolean
    visibleToStudents?: boolean
    evaluacionAsignacionId?: boolean
    evaluacionMaestraId?: boolean
    Alumno?: boolean | Publicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | Publicacion$DocenteArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Publicacion$EvaluacionAsignacionArgs<ExtArgs>
    Evaluacion?: boolean | Publicacion$EvaluacionArgs<ExtArgs>
    TareaMaestra?: boolean | Publicacion$TareaMaestraArgs<ExtArgs>
  }, ExtArgs["result"]["publicacion"]>

  export type PublicacionSelectScalar = {
    id?: boolean
    titulo?: boolean
    contenido?: boolean
    tipo?: boolean
    catedraId?: boolean
    autorAlumnoId?: boolean
    autorDocenteId?: boolean
    created_at?: boolean
    updated_at?: boolean
    tareaMaestraId?: boolean
    visibleToStudents?: boolean
    evaluacionAsignacionId?: boolean
    evaluacionMaestraId?: boolean
  }

  export type PublicacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "contenido" | "tipo" | "catedraId" | "autorAlumnoId" | "autorDocenteId" | "created_at" | "updated_at" | "tareaMaestraId" | "visibleToStudents" | "evaluacionAsignacionId" | "evaluacionMaestraId", ExtArgs["result"]["publicacion"]>
  export type PublicacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ComentarioPublicacion?: boolean | Publicacion$ComentarioPublicacionArgs<ExtArgs>
    Alumno?: boolean | Publicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | Publicacion$DocenteArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Publicacion$EvaluacionAsignacionArgs<ExtArgs>
    Evaluacion?: boolean | Publicacion$EvaluacionArgs<ExtArgs>
    TareaMaestra?: boolean | Publicacion$TareaMaestraArgs<ExtArgs>
    PublicacionInteraccion?: boolean | Publicacion$PublicacionInteraccionArgs<ExtArgs>
    _count?: boolean | PublicacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PublicacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | Publicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | Publicacion$DocenteArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Publicacion$EvaluacionAsignacionArgs<ExtArgs>
    Evaluacion?: boolean | Publicacion$EvaluacionArgs<ExtArgs>
    TareaMaestra?: boolean | Publicacion$TareaMaestraArgs<ExtArgs>
  }
  export type PublicacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | Publicacion$AlumnoArgs<ExtArgs>
    Docente?: boolean | Publicacion$DocenteArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    EvaluacionAsignacion?: boolean | Publicacion$EvaluacionAsignacionArgs<ExtArgs>
    Evaluacion?: boolean | Publicacion$EvaluacionArgs<ExtArgs>
    TareaMaestra?: boolean | Publicacion$TareaMaestraArgs<ExtArgs>
  }

  export type $PublicacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Publicacion"
    objects: {
      ComentarioPublicacion: Prisma.$ComentarioPublicacionPayload<ExtArgs>[]
      Alumno: Prisma.$AlumnoPayload<ExtArgs> | null
      Docente: Prisma.$DocentePayload<ExtArgs> | null
      Catedra: Prisma.$CatedraPayload<ExtArgs>
      EvaluacionAsignacion: Prisma.$EvaluacionAsignacionPayload<ExtArgs> | null
      Evaluacion: Prisma.$EvaluacionPayload<ExtArgs> | null
      TareaMaestra: Prisma.$TareaMaestraPayload<ExtArgs> | null
      PublicacionInteraccion: Prisma.$PublicacionInteraccionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      contenido: string
      tipo: $Enums.TipoPublicacion
      catedraId: number
      autorAlumnoId: number | null
      autorDocenteId: number | null
      created_at: Date
      updated_at: Date
      tareaMaestraId: number | null
      visibleToStudents: boolean
      evaluacionAsignacionId: number | null
      evaluacionMaestraId: number | null
    }, ExtArgs["result"]["publicacion"]>
    composites: {}
  }

  type PublicacionGetPayload<S extends boolean | null | undefined | PublicacionDefaultArgs> = $Result.GetResult<Prisma.$PublicacionPayload, S>

  type PublicacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PublicacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PublicacionCountAggregateInputType | true
    }

  export interface PublicacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Publicacion'], meta: { name: 'Publicacion' } }
    /**
     * Find zero or one Publicacion that matches the filter.
     * @param {PublicacionFindUniqueArgs} args - Arguments to find a Publicacion
     * @example
     * // Get one Publicacion
     * const publicacion = await prisma.publicacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PublicacionFindUniqueArgs>(args: SelectSubset<T, PublicacionFindUniqueArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Publicacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PublicacionFindUniqueOrThrowArgs} args - Arguments to find a Publicacion
     * @example
     * // Get one Publicacion
     * const publicacion = await prisma.publicacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PublicacionFindUniqueOrThrowArgs>(args: SelectSubset<T, PublicacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionFindFirstArgs} args - Arguments to find a Publicacion
     * @example
     * // Get one Publicacion
     * const publicacion = await prisma.publicacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PublicacionFindFirstArgs>(args?: SelectSubset<T, PublicacionFindFirstArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionFindFirstOrThrowArgs} args - Arguments to find a Publicacion
     * @example
     * // Get one Publicacion
     * const publicacion = await prisma.publicacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PublicacionFindFirstOrThrowArgs>(args?: SelectSubset<T, PublicacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Publicacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Publicacions
     * const publicacions = await prisma.publicacion.findMany()
     * 
     * // Get first 10 Publicacions
     * const publicacions = await prisma.publicacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const publicacionWithIdOnly = await prisma.publicacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PublicacionFindManyArgs>(args?: SelectSubset<T, PublicacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Publicacion.
     * @param {PublicacionCreateArgs} args - Arguments to create a Publicacion.
     * @example
     * // Create one Publicacion
     * const Publicacion = await prisma.publicacion.create({
     *   data: {
     *     // ... data to create a Publicacion
     *   }
     * })
     * 
     */
    create<T extends PublicacionCreateArgs>(args: SelectSubset<T, PublicacionCreateArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Publicacions.
     * @param {PublicacionCreateManyArgs} args - Arguments to create many Publicacions.
     * @example
     * // Create many Publicacions
     * const publicacion = await prisma.publicacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PublicacionCreateManyArgs>(args?: SelectSubset<T, PublicacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Publicacions and returns the data saved in the database.
     * @param {PublicacionCreateManyAndReturnArgs} args - Arguments to create many Publicacions.
     * @example
     * // Create many Publicacions
     * const publicacion = await prisma.publicacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Publicacions and only return the `id`
     * const publicacionWithIdOnly = await prisma.publicacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PublicacionCreateManyAndReturnArgs>(args?: SelectSubset<T, PublicacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Publicacion.
     * @param {PublicacionDeleteArgs} args - Arguments to delete one Publicacion.
     * @example
     * // Delete one Publicacion
     * const Publicacion = await prisma.publicacion.delete({
     *   where: {
     *     // ... filter to delete one Publicacion
     *   }
     * })
     * 
     */
    delete<T extends PublicacionDeleteArgs>(args: SelectSubset<T, PublicacionDeleteArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Publicacion.
     * @param {PublicacionUpdateArgs} args - Arguments to update one Publicacion.
     * @example
     * // Update one Publicacion
     * const publicacion = await prisma.publicacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PublicacionUpdateArgs>(args: SelectSubset<T, PublicacionUpdateArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Publicacions.
     * @param {PublicacionDeleteManyArgs} args - Arguments to filter Publicacions to delete.
     * @example
     * // Delete a few Publicacions
     * const { count } = await prisma.publicacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PublicacionDeleteManyArgs>(args?: SelectSubset<T, PublicacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Publicacions
     * const publicacion = await prisma.publicacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PublicacionUpdateManyArgs>(args: SelectSubset<T, PublicacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicacions and returns the data updated in the database.
     * @param {PublicacionUpdateManyAndReturnArgs} args - Arguments to update many Publicacions.
     * @example
     * // Update many Publicacions
     * const publicacion = await prisma.publicacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Publicacions and only return the `id`
     * const publicacionWithIdOnly = await prisma.publicacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PublicacionUpdateManyAndReturnArgs>(args: SelectSubset<T, PublicacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Publicacion.
     * @param {PublicacionUpsertArgs} args - Arguments to update or create a Publicacion.
     * @example
     * // Update or create a Publicacion
     * const publicacion = await prisma.publicacion.upsert({
     *   create: {
     *     // ... data to create a Publicacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Publicacion we want to update
     *   }
     * })
     */
    upsert<T extends PublicacionUpsertArgs>(args: SelectSubset<T, PublicacionUpsertArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Publicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionCountArgs} args - Arguments to filter Publicacions to count.
     * @example
     * // Count the number of Publicacions
     * const count = await prisma.publicacion.count({
     *   where: {
     *     // ... the filter for the Publicacions we want to count
     *   }
     * })
    **/
    count<T extends PublicacionCountArgs>(
      args?: Subset<T, PublicacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PublicacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Publicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PublicacionAggregateArgs>(args: Subset<T, PublicacionAggregateArgs>): Prisma.PrismaPromise<GetPublicacionAggregateType<T>>

    /**
     * Group by Publicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PublicacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PublicacionGroupByArgs['orderBy'] }
        : { orderBy?: PublicacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PublicacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Publicacion model
   */
  readonly fields: PublicacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Publicacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PublicacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ComentarioPublicacion<T extends Publicacion$ComentarioPublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Publicacion$ComentarioPublicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentarioPublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Alumno<T extends Publicacion$AlumnoArgs<ExtArgs> = {}>(args?: Subset<T, Publicacion$AlumnoArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Docente<T extends Publicacion$DocenteArgs<ExtArgs> = {}>(args?: Subset<T, Publicacion$DocenteArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EvaluacionAsignacion<T extends Publicacion$EvaluacionAsignacionArgs<ExtArgs> = {}>(args?: Subset<T, Publicacion$EvaluacionAsignacionArgs<ExtArgs>>): Prisma__EvaluacionAsignacionClient<$Result.GetResult<Prisma.$EvaluacionAsignacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Evaluacion<T extends Publicacion$EvaluacionArgs<ExtArgs> = {}>(args?: Subset<T, Publicacion$EvaluacionArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    TareaMaestra<T extends Publicacion$TareaMaestraArgs<ExtArgs> = {}>(args?: Subset<T, Publicacion$TareaMaestraArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    PublicacionInteraccion<T extends Publicacion$PublicacionInteraccionArgs<ExtArgs> = {}>(args?: Subset<T, Publicacion$PublicacionInteraccionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Publicacion model
   */
  interface PublicacionFieldRefs {
    readonly id: FieldRef<"Publicacion", 'Int'>
    readonly titulo: FieldRef<"Publicacion", 'String'>
    readonly contenido: FieldRef<"Publicacion", 'String'>
    readonly tipo: FieldRef<"Publicacion", 'TipoPublicacion'>
    readonly catedraId: FieldRef<"Publicacion", 'Int'>
    readonly autorAlumnoId: FieldRef<"Publicacion", 'Int'>
    readonly autorDocenteId: FieldRef<"Publicacion", 'Int'>
    readonly created_at: FieldRef<"Publicacion", 'DateTime'>
    readonly updated_at: FieldRef<"Publicacion", 'DateTime'>
    readonly tareaMaestraId: FieldRef<"Publicacion", 'Int'>
    readonly visibleToStudents: FieldRef<"Publicacion", 'Boolean'>
    readonly evaluacionAsignacionId: FieldRef<"Publicacion", 'Int'>
    readonly evaluacionMaestraId: FieldRef<"Publicacion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Publicacion findUnique
   */
  export type PublicacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * Filter, which Publicacion to fetch.
     */
    where: PublicacionWhereUniqueInput
  }

  /**
   * Publicacion findUniqueOrThrow
   */
  export type PublicacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * Filter, which Publicacion to fetch.
     */
    where: PublicacionWhereUniqueInput
  }

  /**
   * Publicacion findFirst
   */
  export type PublicacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * Filter, which Publicacion to fetch.
     */
    where?: PublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacions to fetch.
     */
    orderBy?: PublicacionOrderByWithRelationInput | PublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicacions.
     */
    cursor?: PublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicacions.
     */
    distinct?: PublicacionScalarFieldEnum | PublicacionScalarFieldEnum[]
  }

  /**
   * Publicacion findFirstOrThrow
   */
  export type PublicacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * Filter, which Publicacion to fetch.
     */
    where?: PublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacions to fetch.
     */
    orderBy?: PublicacionOrderByWithRelationInput | PublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicacions.
     */
    cursor?: PublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicacions.
     */
    distinct?: PublicacionScalarFieldEnum | PublicacionScalarFieldEnum[]
  }

  /**
   * Publicacion findMany
   */
  export type PublicacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * Filter, which Publicacions to fetch.
     */
    where?: PublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicacions to fetch.
     */
    orderBy?: PublicacionOrderByWithRelationInput | PublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Publicacions.
     */
    cursor?: PublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicacions.
     */
    skip?: number
    distinct?: PublicacionScalarFieldEnum | PublicacionScalarFieldEnum[]
  }

  /**
   * Publicacion create
   */
  export type PublicacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Publicacion.
     */
    data: XOR<PublicacionCreateInput, PublicacionUncheckedCreateInput>
  }

  /**
   * Publicacion createMany
   */
  export type PublicacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Publicacions.
     */
    data: PublicacionCreateManyInput | PublicacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Publicacion createManyAndReturn
   */
  export type PublicacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * The data used to create many Publicacions.
     */
    data: PublicacionCreateManyInput | PublicacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Publicacion update
   */
  export type PublicacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Publicacion.
     */
    data: XOR<PublicacionUpdateInput, PublicacionUncheckedUpdateInput>
    /**
     * Choose, which Publicacion to update.
     */
    where: PublicacionWhereUniqueInput
  }

  /**
   * Publicacion updateMany
   */
  export type PublicacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Publicacions.
     */
    data: XOR<PublicacionUpdateManyMutationInput, PublicacionUncheckedUpdateManyInput>
    /**
     * Filter which Publicacions to update
     */
    where?: PublicacionWhereInput
    /**
     * Limit how many Publicacions to update.
     */
    limit?: number
  }

  /**
   * Publicacion updateManyAndReturn
   */
  export type PublicacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * The data used to update Publicacions.
     */
    data: XOR<PublicacionUpdateManyMutationInput, PublicacionUncheckedUpdateManyInput>
    /**
     * Filter which Publicacions to update
     */
    where?: PublicacionWhereInput
    /**
     * Limit how many Publicacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Publicacion upsert
   */
  export type PublicacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Publicacion to update in case it exists.
     */
    where: PublicacionWhereUniqueInput
    /**
     * In case the Publicacion found by the `where` argument doesn't exist, create a new Publicacion with this data.
     */
    create: XOR<PublicacionCreateInput, PublicacionUncheckedCreateInput>
    /**
     * In case the Publicacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PublicacionUpdateInput, PublicacionUncheckedUpdateInput>
  }

  /**
   * Publicacion delete
   */
  export type PublicacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    /**
     * Filter which Publicacion to delete.
     */
    where: PublicacionWhereUniqueInput
  }

  /**
   * Publicacion deleteMany
   */
  export type PublicacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicacions to delete
     */
    where?: PublicacionWhereInput
    /**
     * Limit how many Publicacions to delete.
     */
    limit?: number
  }

  /**
   * Publicacion.ComentarioPublicacion
   */
  export type Publicacion$ComentarioPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentarioPublicacion
     */
    select?: ComentarioPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentarioPublicacion
     */
    omit?: ComentarioPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentarioPublicacionInclude<ExtArgs> | null
    where?: ComentarioPublicacionWhereInput
    orderBy?: ComentarioPublicacionOrderByWithRelationInput | ComentarioPublicacionOrderByWithRelationInput[]
    cursor?: ComentarioPublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentarioPublicacionScalarFieldEnum | ComentarioPublicacionScalarFieldEnum[]
  }

  /**
   * Publicacion.Alumno
   */
  export type Publicacion$AlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    where?: AlumnoWhereInput
  }

  /**
   * Publicacion.Docente
   */
  export type Publicacion$DocenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    where?: DocenteWhereInput
  }

  /**
   * Publicacion.EvaluacionAsignacion
   */
  export type Publicacion$EvaluacionAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionAsignacion
     */
    select?: EvaluacionAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EvaluacionAsignacion
     */
    omit?: EvaluacionAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionAsignacionInclude<ExtArgs> | null
    where?: EvaluacionAsignacionWhereInput
  }

  /**
   * Publicacion.Evaluacion
   */
  export type Publicacion$EvaluacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    where?: EvaluacionWhereInput
  }

  /**
   * Publicacion.TareaMaestra
   */
  export type Publicacion$TareaMaestraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    where?: TareaMaestraWhereInput
  }

  /**
   * Publicacion.PublicacionInteraccion
   */
  export type Publicacion$PublicacionInteraccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    where?: PublicacionInteraccionWhereInput
    orderBy?: PublicacionInteraccionOrderByWithRelationInput | PublicacionInteraccionOrderByWithRelationInput[]
    cursor?: PublicacionInteraccionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionInteraccionScalarFieldEnum | PublicacionInteraccionScalarFieldEnum[]
  }

  /**
   * Publicacion without action
   */
  export type PublicacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
  }


  /**
   * Model PublicacionInteraccion
   */

  export type AggregatePublicacionInteraccion = {
    _count: PublicacionInteraccionCountAggregateOutputType | null
    _avg: PublicacionInteraccionAvgAggregateOutputType | null
    _sum: PublicacionInteraccionSumAggregateOutputType | null
    _min: PublicacionInteraccionMinAggregateOutputType | null
    _max: PublicacionInteraccionMaxAggregateOutputType | null
  }

  export type PublicacionInteraccionAvgAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    alumnoId: number | null
    docenteId: number | null
  }

  export type PublicacionInteraccionSumAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    alumnoId: number | null
    docenteId: number | null
  }

  export type PublicacionInteraccionMinAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    alumnoId: number | null
    docenteId: number | null
    tipo: $Enums.TipoInteraccionPublicacion | null
    created_at: Date | null
  }

  export type PublicacionInteraccionMaxAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    alumnoId: number | null
    docenteId: number | null
    tipo: $Enums.TipoInteraccionPublicacion | null
    created_at: Date | null
  }

  export type PublicacionInteraccionCountAggregateOutputType = {
    id: number
    publicacionId: number
    alumnoId: number
    docenteId: number
    tipo: number
    created_at: number
    _all: number
  }


  export type PublicacionInteraccionAvgAggregateInputType = {
    id?: true
    publicacionId?: true
    alumnoId?: true
    docenteId?: true
  }

  export type PublicacionInteraccionSumAggregateInputType = {
    id?: true
    publicacionId?: true
    alumnoId?: true
    docenteId?: true
  }

  export type PublicacionInteraccionMinAggregateInputType = {
    id?: true
    publicacionId?: true
    alumnoId?: true
    docenteId?: true
    tipo?: true
    created_at?: true
  }

  export type PublicacionInteraccionMaxAggregateInputType = {
    id?: true
    publicacionId?: true
    alumnoId?: true
    docenteId?: true
    tipo?: true
    created_at?: true
  }

  export type PublicacionInteraccionCountAggregateInputType = {
    id?: true
    publicacionId?: true
    alumnoId?: true
    docenteId?: true
    tipo?: true
    created_at?: true
    _all?: true
  }

  export type PublicacionInteraccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PublicacionInteraccion to aggregate.
     */
    where?: PublicacionInteraccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionInteraccions to fetch.
     */
    orderBy?: PublicacionInteraccionOrderByWithRelationInput | PublicacionInteraccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PublicacionInteraccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionInteraccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionInteraccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PublicacionInteraccions
    **/
    _count?: true | PublicacionInteraccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PublicacionInteraccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PublicacionInteraccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PublicacionInteraccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PublicacionInteraccionMaxAggregateInputType
  }

  export type GetPublicacionInteraccionAggregateType<T extends PublicacionInteraccionAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicacionInteraccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicacionInteraccion[P]>
      : GetScalarType<T[P], AggregatePublicacionInteraccion[P]>
  }




  export type PublicacionInteraccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionInteraccionWhereInput
    orderBy?: PublicacionInteraccionOrderByWithAggregationInput | PublicacionInteraccionOrderByWithAggregationInput[]
    by: PublicacionInteraccionScalarFieldEnum[] | PublicacionInteraccionScalarFieldEnum
    having?: PublicacionInteraccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PublicacionInteraccionCountAggregateInputType | true
    _avg?: PublicacionInteraccionAvgAggregateInputType
    _sum?: PublicacionInteraccionSumAggregateInputType
    _min?: PublicacionInteraccionMinAggregateInputType
    _max?: PublicacionInteraccionMaxAggregateInputType
  }

  export type PublicacionInteraccionGroupByOutputType = {
    id: number
    publicacionId: number
    alumnoId: number | null
    docenteId: number | null
    tipo: $Enums.TipoInteraccionPublicacion
    created_at: Date
    _count: PublicacionInteraccionCountAggregateOutputType | null
    _avg: PublicacionInteraccionAvgAggregateOutputType | null
    _sum: PublicacionInteraccionSumAggregateOutputType | null
    _min: PublicacionInteraccionMinAggregateOutputType | null
    _max: PublicacionInteraccionMaxAggregateOutputType | null
  }

  type GetPublicacionInteraccionGroupByPayload<T extends PublicacionInteraccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PublicacionInteraccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PublicacionInteraccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PublicacionInteraccionGroupByOutputType[P]>
            : GetScalarType<T[P], PublicacionInteraccionGroupByOutputType[P]>
        }
      >
    >


  export type PublicacionInteraccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    publicacionId?: boolean
    alumnoId?: boolean
    docenteId?: boolean
    tipo?: boolean
    created_at?: boolean
    Alumno?: boolean | PublicacionInteraccion$AlumnoArgs<ExtArgs>
    Docente?: boolean | PublicacionInteraccion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicacionInteraccion"]>

  export type PublicacionInteraccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    publicacionId?: boolean
    alumnoId?: boolean
    docenteId?: boolean
    tipo?: boolean
    created_at?: boolean
    Alumno?: boolean | PublicacionInteraccion$AlumnoArgs<ExtArgs>
    Docente?: boolean | PublicacionInteraccion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicacionInteraccion"]>

  export type PublicacionInteraccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    publicacionId?: boolean
    alumnoId?: boolean
    docenteId?: boolean
    tipo?: boolean
    created_at?: boolean
    Alumno?: boolean | PublicacionInteraccion$AlumnoArgs<ExtArgs>
    Docente?: boolean | PublicacionInteraccion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicacionInteraccion"]>

  export type PublicacionInteraccionSelectScalar = {
    id?: boolean
    publicacionId?: boolean
    alumnoId?: boolean
    docenteId?: boolean
    tipo?: boolean
    created_at?: boolean
  }

  export type PublicacionInteraccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "publicacionId" | "alumnoId" | "docenteId" | "tipo" | "created_at", ExtArgs["result"]["publicacionInteraccion"]>
  export type PublicacionInteraccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | PublicacionInteraccion$AlumnoArgs<ExtArgs>
    Docente?: boolean | PublicacionInteraccion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }
  export type PublicacionInteraccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | PublicacionInteraccion$AlumnoArgs<ExtArgs>
    Docente?: boolean | PublicacionInteraccion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }
  export type PublicacionInteraccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | PublicacionInteraccion$AlumnoArgs<ExtArgs>
    Docente?: boolean | PublicacionInteraccion$DocenteArgs<ExtArgs>
    Publicacion?: boolean | PublicacionDefaultArgs<ExtArgs>
  }

  export type $PublicacionInteraccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PublicacionInteraccion"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs> | null
      Docente: Prisma.$DocentePayload<ExtArgs> | null
      Publicacion: Prisma.$PublicacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      publicacionId: number
      alumnoId: number | null
      docenteId: number | null
      tipo: $Enums.TipoInteraccionPublicacion
      created_at: Date
    }, ExtArgs["result"]["publicacionInteraccion"]>
    composites: {}
  }

  type PublicacionInteraccionGetPayload<S extends boolean | null | undefined | PublicacionInteraccionDefaultArgs> = $Result.GetResult<Prisma.$PublicacionInteraccionPayload, S>

  type PublicacionInteraccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PublicacionInteraccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PublicacionInteraccionCountAggregateInputType | true
    }

  export interface PublicacionInteraccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PublicacionInteraccion'], meta: { name: 'PublicacionInteraccion' } }
    /**
     * Find zero or one PublicacionInteraccion that matches the filter.
     * @param {PublicacionInteraccionFindUniqueArgs} args - Arguments to find a PublicacionInteraccion
     * @example
     * // Get one PublicacionInteraccion
     * const publicacionInteraccion = await prisma.publicacionInteraccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PublicacionInteraccionFindUniqueArgs>(args: SelectSubset<T, PublicacionInteraccionFindUniqueArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PublicacionInteraccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PublicacionInteraccionFindUniqueOrThrowArgs} args - Arguments to find a PublicacionInteraccion
     * @example
     * // Get one PublicacionInteraccion
     * const publicacionInteraccion = await prisma.publicacionInteraccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PublicacionInteraccionFindUniqueOrThrowArgs>(args: SelectSubset<T, PublicacionInteraccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PublicacionInteraccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionInteraccionFindFirstArgs} args - Arguments to find a PublicacionInteraccion
     * @example
     * // Get one PublicacionInteraccion
     * const publicacionInteraccion = await prisma.publicacionInteraccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PublicacionInteraccionFindFirstArgs>(args?: SelectSubset<T, PublicacionInteraccionFindFirstArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PublicacionInteraccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionInteraccionFindFirstOrThrowArgs} args - Arguments to find a PublicacionInteraccion
     * @example
     * // Get one PublicacionInteraccion
     * const publicacionInteraccion = await prisma.publicacionInteraccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PublicacionInteraccionFindFirstOrThrowArgs>(args?: SelectSubset<T, PublicacionInteraccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PublicacionInteraccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionInteraccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PublicacionInteraccions
     * const publicacionInteraccions = await prisma.publicacionInteraccion.findMany()
     * 
     * // Get first 10 PublicacionInteraccions
     * const publicacionInteraccions = await prisma.publicacionInteraccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const publicacionInteraccionWithIdOnly = await prisma.publicacionInteraccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PublicacionInteraccionFindManyArgs>(args?: SelectSubset<T, PublicacionInteraccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PublicacionInteraccion.
     * @param {PublicacionInteraccionCreateArgs} args - Arguments to create a PublicacionInteraccion.
     * @example
     * // Create one PublicacionInteraccion
     * const PublicacionInteraccion = await prisma.publicacionInteraccion.create({
     *   data: {
     *     // ... data to create a PublicacionInteraccion
     *   }
     * })
     * 
     */
    create<T extends PublicacionInteraccionCreateArgs>(args: SelectSubset<T, PublicacionInteraccionCreateArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PublicacionInteraccions.
     * @param {PublicacionInteraccionCreateManyArgs} args - Arguments to create many PublicacionInteraccions.
     * @example
     * // Create many PublicacionInteraccions
     * const publicacionInteraccion = await prisma.publicacionInteraccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PublicacionInteraccionCreateManyArgs>(args?: SelectSubset<T, PublicacionInteraccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PublicacionInteraccions and returns the data saved in the database.
     * @param {PublicacionInteraccionCreateManyAndReturnArgs} args - Arguments to create many PublicacionInteraccions.
     * @example
     * // Create many PublicacionInteraccions
     * const publicacionInteraccion = await prisma.publicacionInteraccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PublicacionInteraccions and only return the `id`
     * const publicacionInteraccionWithIdOnly = await prisma.publicacionInteraccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PublicacionInteraccionCreateManyAndReturnArgs>(args?: SelectSubset<T, PublicacionInteraccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PublicacionInteraccion.
     * @param {PublicacionInteraccionDeleteArgs} args - Arguments to delete one PublicacionInteraccion.
     * @example
     * // Delete one PublicacionInteraccion
     * const PublicacionInteraccion = await prisma.publicacionInteraccion.delete({
     *   where: {
     *     // ... filter to delete one PublicacionInteraccion
     *   }
     * })
     * 
     */
    delete<T extends PublicacionInteraccionDeleteArgs>(args: SelectSubset<T, PublicacionInteraccionDeleteArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PublicacionInteraccion.
     * @param {PublicacionInteraccionUpdateArgs} args - Arguments to update one PublicacionInteraccion.
     * @example
     * // Update one PublicacionInteraccion
     * const publicacionInteraccion = await prisma.publicacionInteraccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PublicacionInteraccionUpdateArgs>(args: SelectSubset<T, PublicacionInteraccionUpdateArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PublicacionInteraccions.
     * @param {PublicacionInteraccionDeleteManyArgs} args - Arguments to filter PublicacionInteraccions to delete.
     * @example
     * // Delete a few PublicacionInteraccions
     * const { count } = await prisma.publicacionInteraccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PublicacionInteraccionDeleteManyArgs>(args?: SelectSubset<T, PublicacionInteraccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PublicacionInteraccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionInteraccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PublicacionInteraccions
     * const publicacionInteraccion = await prisma.publicacionInteraccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PublicacionInteraccionUpdateManyArgs>(args: SelectSubset<T, PublicacionInteraccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PublicacionInteraccions and returns the data updated in the database.
     * @param {PublicacionInteraccionUpdateManyAndReturnArgs} args - Arguments to update many PublicacionInteraccions.
     * @example
     * // Update many PublicacionInteraccions
     * const publicacionInteraccion = await prisma.publicacionInteraccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PublicacionInteraccions and only return the `id`
     * const publicacionInteraccionWithIdOnly = await prisma.publicacionInteraccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PublicacionInteraccionUpdateManyAndReturnArgs>(args: SelectSubset<T, PublicacionInteraccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PublicacionInteraccion.
     * @param {PublicacionInteraccionUpsertArgs} args - Arguments to update or create a PublicacionInteraccion.
     * @example
     * // Update or create a PublicacionInteraccion
     * const publicacionInteraccion = await prisma.publicacionInteraccion.upsert({
     *   create: {
     *     // ... data to create a PublicacionInteraccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PublicacionInteraccion we want to update
     *   }
     * })
     */
    upsert<T extends PublicacionInteraccionUpsertArgs>(args: SelectSubset<T, PublicacionInteraccionUpsertArgs<ExtArgs>>): Prisma__PublicacionInteraccionClient<$Result.GetResult<Prisma.$PublicacionInteraccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PublicacionInteraccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionInteraccionCountArgs} args - Arguments to filter PublicacionInteraccions to count.
     * @example
     * // Count the number of PublicacionInteraccions
     * const count = await prisma.publicacionInteraccion.count({
     *   where: {
     *     // ... the filter for the PublicacionInteraccions we want to count
     *   }
     * })
    **/
    count<T extends PublicacionInteraccionCountArgs>(
      args?: Subset<T, PublicacionInteraccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PublicacionInteraccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PublicacionInteraccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionInteraccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PublicacionInteraccionAggregateArgs>(args: Subset<T, PublicacionInteraccionAggregateArgs>): Prisma.PrismaPromise<GetPublicacionInteraccionAggregateType<T>>

    /**
     * Group by PublicacionInteraccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionInteraccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PublicacionInteraccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PublicacionInteraccionGroupByArgs['orderBy'] }
        : { orderBy?: PublicacionInteraccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PublicacionInteraccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicacionInteraccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PublicacionInteraccion model
   */
  readonly fields: PublicacionInteraccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PublicacionInteraccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PublicacionInteraccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends PublicacionInteraccion$AlumnoArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionInteraccion$AlumnoArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Docente<T extends PublicacionInteraccion$DocenteArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionInteraccion$DocenteArgs<ExtArgs>>): Prisma__DocenteClient<$Result.GetResult<Prisma.$DocentePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Publicacion<T extends PublicacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionDefaultArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PublicacionInteraccion model
   */
  interface PublicacionInteraccionFieldRefs {
    readonly id: FieldRef<"PublicacionInteraccion", 'Int'>
    readonly publicacionId: FieldRef<"PublicacionInteraccion", 'Int'>
    readonly alumnoId: FieldRef<"PublicacionInteraccion", 'Int'>
    readonly docenteId: FieldRef<"PublicacionInteraccion", 'Int'>
    readonly tipo: FieldRef<"PublicacionInteraccion", 'TipoInteraccionPublicacion'>
    readonly created_at: FieldRef<"PublicacionInteraccion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PublicacionInteraccion findUnique
   */
  export type PublicacionInteraccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionInteraccion to fetch.
     */
    where: PublicacionInteraccionWhereUniqueInput
  }

  /**
   * PublicacionInteraccion findUniqueOrThrow
   */
  export type PublicacionInteraccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionInteraccion to fetch.
     */
    where: PublicacionInteraccionWhereUniqueInput
  }

  /**
   * PublicacionInteraccion findFirst
   */
  export type PublicacionInteraccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionInteraccion to fetch.
     */
    where?: PublicacionInteraccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionInteraccions to fetch.
     */
    orderBy?: PublicacionInteraccionOrderByWithRelationInput | PublicacionInteraccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PublicacionInteraccions.
     */
    cursor?: PublicacionInteraccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionInteraccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionInteraccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PublicacionInteraccions.
     */
    distinct?: PublicacionInteraccionScalarFieldEnum | PublicacionInteraccionScalarFieldEnum[]
  }

  /**
   * PublicacionInteraccion findFirstOrThrow
   */
  export type PublicacionInteraccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionInteraccion to fetch.
     */
    where?: PublicacionInteraccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionInteraccions to fetch.
     */
    orderBy?: PublicacionInteraccionOrderByWithRelationInput | PublicacionInteraccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PublicacionInteraccions.
     */
    cursor?: PublicacionInteraccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionInteraccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionInteraccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PublicacionInteraccions.
     */
    distinct?: PublicacionInteraccionScalarFieldEnum | PublicacionInteraccionScalarFieldEnum[]
  }

  /**
   * PublicacionInteraccion findMany
   */
  export type PublicacionInteraccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionInteraccions to fetch.
     */
    where?: PublicacionInteraccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionInteraccions to fetch.
     */
    orderBy?: PublicacionInteraccionOrderByWithRelationInput | PublicacionInteraccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PublicacionInteraccions.
     */
    cursor?: PublicacionInteraccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionInteraccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionInteraccions.
     */
    skip?: number
    distinct?: PublicacionInteraccionScalarFieldEnum | PublicacionInteraccionScalarFieldEnum[]
  }

  /**
   * PublicacionInteraccion create
   */
  export type PublicacionInteraccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * The data needed to create a PublicacionInteraccion.
     */
    data: XOR<PublicacionInteraccionCreateInput, PublicacionInteraccionUncheckedCreateInput>
  }

  /**
   * PublicacionInteraccion createMany
   */
  export type PublicacionInteraccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PublicacionInteraccions.
     */
    data: PublicacionInteraccionCreateManyInput | PublicacionInteraccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PublicacionInteraccion createManyAndReturn
   */
  export type PublicacionInteraccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * The data used to create many PublicacionInteraccions.
     */
    data: PublicacionInteraccionCreateManyInput | PublicacionInteraccionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PublicacionInteraccion update
   */
  export type PublicacionInteraccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * The data needed to update a PublicacionInteraccion.
     */
    data: XOR<PublicacionInteraccionUpdateInput, PublicacionInteraccionUncheckedUpdateInput>
    /**
     * Choose, which PublicacionInteraccion to update.
     */
    where: PublicacionInteraccionWhereUniqueInput
  }

  /**
   * PublicacionInteraccion updateMany
   */
  export type PublicacionInteraccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PublicacionInteraccions.
     */
    data: XOR<PublicacionInteraccionUpdateManyMutationInput, PublicacionInteraccionUncheckedUpdateManyInput>
    /**
     * Filter which PublicacionInteraccions to update
     */
    where?: PublicacionInteraccionWhereInput
    /**
     * Limit how many PublicacionInteraccions to update.
     */
    limit?: number
  }

  /**
   * PublicacionInteraccion updateManyAndReturn
   */
  export type PublicacionInteraccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * The data used to update PublicacionInteraccions.
     */
    data: XOR<PublicacionInteraccionUpdateManyMutationInput, PublicacionInteraccionUncheckedUpdateManyInput>
    /**
     * Filter which PublicacionInteraccions to update
     */
    where?: PublicacionInteraccionWhereInput
    /**
     * Limit how many PublicacionInteraccions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PublicacionInteraccion upsert
   */
  export type PublicacionInteraccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * The filter to search for the PublicacionInteraccion to update in case it exists.
     */
    where: PublicacionInteraccionWhereUniqueInput
    /**
     * In case the PublicacionInteraccion found by the `where` argument doesn't exist, create a new PublicacionInteraccion with this data.
     */
    create: XOR<PublicacionInteraccionCreateInput, PublicacionInteraccionUncheckedCreateInput>
    /**
     * In case the PublicacionInteraccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PublicacionInteraccionUpdateInput, PublicacionInteraccionUncheckedUpdateInput>
  }

  /**
   * PublicacionInteraccion delete
   */
  export type PublicacionInteraccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
    /**
     * Filter which PublicacionInteraccion to delete.
     */
    where: PublicacionInteraccionWhereUniqueInput
  }

  /**
   * PublicacionInteraccion deleteMany
   */
  export type PublicacionInteraccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PublicacionInteraccions to delete
     */
    where?: PublicacionInteraccionWhereInput
    /**
     * Limit how many PublicacionInteraccions to delete.
     */
    limit?: number
  }

  /**
   * PublicacionInteraccion.Alumno
   */
  export type PublicacionInteraccion$AlumnoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alumno
     */
    select?: AlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Alumno
     */
    omit?: AlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlumnoInclude<ExtArgs> | null
    where?: AlumnoWhereInput
  }

  /**
   * PublicacionInteraccion.Docente
   */
  export type PublicacionInteraccion$DocenteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Docente
     */
    select?: DocenteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Docente
     */
    omit?: DocenteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocenteInclude<ExtArgs> | null
    where?: DocenteWhereInput
  }

  /**
   * PublicacionInteraccion without action
   */
  export type PublicacionInteraccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionInteraccion
     */
    select?: PublicacionInteraccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionInteraccion
     */
    omit?: PublicacionInteraccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInteraccionInclude<ExtArgs> | null
  }


  /**
   * Model Puntuacion
   */

  export type AggregatePuntuacion = {
    _count: PuntuacionCountAggregateOutputType | null
    _avg: PuntuacionAvgAggregateOutputType | null
    _sum: PuntuacionSumAggregateOutputType | null
    _min: PuntuacionMinAggregateOutputType | null
    _max: PuntuacionMaxAggregateOutputType | null
  }

  export type PuntuacionAvgAggregateOutputType = {
    id: number | null
    puntos: number | null
    alumnoId: number | null
    catedraId: number | null
  }

  export type PuntuacionSumAggregateOutputType = {
    id: number | null
    puntos: number | null
    alumnoId: number | null
    catedraId: number | null
  }

  export type PuntuacionMinAggregateOutputType = {
    id: number | null
    puntos: number | null
    motivo: string | null
    created_at: Date | null
    alumnoId: number | null
    catedraId: number | null
    tipo: $Enums.TipoPuntuacion | null
  }

  export type PuntuacionMaxAggregateOutputType = {
    id: number | null
    puntos: number | null
    motivo: string | null
    created_at: Date | null
    alumnoId: number | null
    catedraId: number | null
    tipo: $Enums.TipoPuntuacion | null
  }

  export type PuntuacionCountAggregateOutputType = {
    id: number
    puntos: number
    motivo: number
    created_at: number
    alumnoId: number
    catedraId: number
    tipo: number
    _all: number
  }


  export type PuntuacionAvgAggregateInputType = {
    id?: true
    puntos?: true
    alumnoId?: true
    catedraId?: true
  }

  export type PuntuacionSumAggregateInputType = {
    id?: true
    puntos?: true
    alumnoId?: true
    catedraId?: true
  }

  export type PuntuacionMinAggregateInputType = {
    id?: true
    puntos?: true
    motivo?: true
    created_at?: true
    alumnoId?: true
    catedraId?: true
    tipo?: true
  }

  export type PuntuacionMaxAggregateInputType = {
    id?: true
    puntos?: true
    motivo?: true
    created_at?: true
    alumnoId?: true
    catedraId?: true
    tipo?: true
  }

  export type PuntuacionCountAggregateInputType = {
    id?: true
    puntos?: true
    motivo?: true
    created_at?: true
    alumnoId?: true
    catedraId?: true
    tipo?: true
    _all?: true
  }

  export type PuntuacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Puntuacion to aggregate.
     */
    where?: PuntuacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntuacions to fetch.
     */
    orderBy?: PuntuacionOrderByWithRelationInput | PuntuacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PuntuacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntuacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntuacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Puntuacions
    **/
    _count?: true | PuntuacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PuntuacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PuntuacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PuntuacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PuntuacionMaxAggregateInputType
  }

  export type GetPuntuacionAggregateType<T extends PuntuacionAggregateArgs> = {
        [P in keyof T & keyof AggregatePuntuacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePuntuacion[P]>
      : GetScalarType<T[P], AggregatePuntuacion[P]>
  }




  export type PuntuacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PuntuacionWhereInput
    orderBy?: PuntuacionOrderByWithAggregationInput | PuntuacionOrderByWithAggregationInput[]
    by: PuntuacionScalarFieldEnum[] | PuntuacionScalarFieldEnum
    having?: PuntuacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PuntuacionCountAggregateInputType | true
    _avg?: PuntuacionAvgAggregateInputType
    _sum?: PuntuacionSumAggregateInputType
    _min?: PuntuacionMinAggregateInputType
    _max?: PuntuacionMaxAggregateInputType
  }

  export type PuntuacionGroupByOutputType = {
    id: number
    puntos: number
    motivo: string
    created_at: Date
    alumnoId: number
    catedraId: number | null
    tipo: $Enums.TipoPuntuacion
    _count: PuntuacionCountAggregateOutputType | null
    _avg: PuntuacionAvgAggregateOutputType | null
    _sum: PuntuacionSumAggregateOutputType | null
    _min: PuntuacionMinAggregateOutputType | null
    _max: PuntuacionMaxAggregateOutputType | null
  }

  type GetPuntuacionGroupByPayload<T extends PuntuacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PuntuacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PuntuacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PuntuacionGroupByOutputType[P]>
            : GetScalarType<T[P], PuntuacionGroupByOutputType[P]>
        }
      >
    >


  export type PuntuacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    puntos?: boolean
    motivo?: boolean
    created_at?: boolean
    alumnoId?: boolean
    catedraId?: boolean
    tipo?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Catedra?: boolean | Puntuacion$CatedraArgs<ExtArgs>
  }, ExtArgs["result"]["puntuacion"]>

  export type PuntuacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    puntos?: boolean
    motivo?: boolean
    created_at?: boolean
    alumnoId?: boolean
    catedraId?: boolean
    tipo?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Catedra?: boolean | Puntuacion$CatedraArgs<ExtArgs>
  }, ExtArgs["result"]["puntuacion"]>

  export type PuntuacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    puntos?: boolean
    motivo?: boolean
    created_at?: boolean
    alumnoId?: boolean
    catedraId?: boolean
    tipo?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Catedra?: boolean | Puntuacion$CatedraArgs<ExtArgs>
  }, ExtArgs["result"]["puntuacion"]>

  export type PuntuacionSelectScalar = {
    id?: boolean
    puntos?: boolean
    motivo?: boolean
    created_at?: boolean
    alumnoId?: boolean
    catedraId?: boolean
    tipo?: boolean
  }

  export type PuntuacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "puntos" | "motivo" | "created_at" | "alumnoId" | "catedraId" | "tipo", ExtArgs["result"]["puntuacion"]>
  export type PuntuacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Catedra?: boolean | Puntuacion$CatedraArgs<ExtArgs>
  }
  export type PuntuacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Catedra?: boolean | Puntuacion$CatedraArgs<ExtArgs>
  }
  export type PuntuacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Catedra?: boolean | Puntuacion$CatedraArgs<ExtArgs>
  }

  export type $PuntuacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Puntuacion"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs>
      Catedra: Prisma.$CatedraPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      puntos: number
      motivo: string
      created_at: Date
      alumnoId: number
      catedraId: number | null
      tipo: $Enums.TipoPuntuacion
    }, ExtArgs["result"]["puntuacion"]>
    composites: {}
  }

  type PuntuacionGetPayload<S extends boolean | null | undefined | PuntuacionDefaultArgs> = $Result.GetResult<Prisma.$PuntuacionPayload, S>

  type PuntuacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PuntuacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PuntuacionCountAggregateInputType | true
    }

  export interface PuntuacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Puntuacion'], meta: { name: 'Puntuacion' } }
    /**
     * Find zero or one Puntuacion that matches the filter.
     * @param {PuntuacionFindUniqueArgs} args - Arguments to find a Puntuacion
     * @example
     * // Get one Puntuacion
     * const puntuacion = await prisma.puntuacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PuntuacionFindUniqueArgs>(args: SelectSubset<T, PuntuacionFindUniqueArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Puntuacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PuntuacionFindUniqueOrThrowArgs} args - Arguments to find a Puntuacion
     * @example
     * // Get one Puntuacion
     * const puntuacion = await prisma.puntuacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PuntuacionFindUniqueOrThrowArgs>(args: SelectSubset<T, PuntuacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Puntuacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntuacionFindFirstArgs} args - Arguments to find a Puntuacion
     * @example
     * // Get one Puntuacion
     * const puntuacion = await prisma.puntuacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PuntuacionFindFirstArgs>(args?: SelectSubset<T, PuntuacionFindFirstArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Puntuacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntuacionFindFirstOrThrowArgs} args - Arguments to find a Puntuacion
     * @example
     * // Get one Puntuacion
     * const puntuacion = await prisma.puntuacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PuntuacionFindFirstOrThrowArgs>(args?: SelectSubset<T, PuntuacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Puntuacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntuacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Puntuacions
     * const puntuacions = await prisma.puntuacion.findMany()
     * 
     * // Get first 10 Puntuacions
     * const puntuacions = await prisma.puntuacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const puntuacionWithIdOnly = await prisma.puntuacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PuntuacionFindManyArgs>(args?: SelectSubset<T, PuntuacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Puntuacion.
     * @param {PuntuacionCreateArgs} args - Arguments to create a Puntuacion.
     * @example
     * // Create one Puntuacion
     * const Puntuacion = await prisma.puntuacion.create({
     *   data: {
     *     // ... data to create a Puntuacion
     *   }
     * })
     * 
     */
    create<T extends PuntuacionCreateArgs>(args: SelectSubset<T, PuntuacionCreateArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Puntuacions.
     * @param {PuntuacionCreateManyArgs} args - Arguments to create many Puntuacions.
     * @example
     * // Create many Puntuacions
     * const puntuacion = await prisma.puntuacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PuntuacionCreateManyArgs>(args?: SelectSubset<T, PuntuacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Puntuacions and returns the data saved in the database.
     * @param {PuntuacionCreateManyAndReturnArgs} args - Arguments to create many Puntuacions.
     * @example
     * // Create many Puntuacions
     * const puntuacion = await prisma.puntuacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Puntuacions and only return the `id`
     * const puntuacionWithIdOnly = await prisma.puntuacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PuntuacionCreateManyAndReturnArgs>(args?: SelectSubset<T, PuntuacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Puntuacion.
     * @param {PuntuacionDeleteArgs} args - Arguments to delete one Puntuacion.
     * @example
     * // Delete one Puntuacion
     * const Puntuacion = await prisma.puntuacion.delete({
     *   where: {
     *     // ... filter to delete one Puntuacion
     *   }
     * })
     * 
     */
    delete<T extends PuntuacionDeleteArgs>(args: SelectSubset<T, PuntuacionDeleteArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Puntuacion.
     * @param {PuntuacionUpdateArgs} args - Arguments to update one Puntuacion.
     * @example
     * // Update one Puntuacion
     * const puntuacion = await prisma.puntuacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PuntuacionUpdateArgs>(args: SelectSubset<T, PuntuacionUpdateArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Puntuacions.
     * @param {PuntuacionDeleteManyArgs} args - Arguments to filter Puntuacions to delete.
     * @example
     * // Delete a few Puntuacions
     * const { count } = await prisma.puntuacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PuntuacionDeleteManyArgs>(args?: SelectSubset<T, PuntuacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Puntuacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntuacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Puntuacions
     * const puntuacion = await prisma.puntuacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PuntuacionUpdateManyArgs>(args: SelectSubset<T, PuntuacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Puntuacions and returns the data updated in the database.
     * @param {PuntuacionUpdateManyAndReturnArgs} args - Arguments to update many Puntuacions.
     * @example
     * // Update many Puntuacions
     * const puntuacion = await prisma.puntuacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Puntuacions and only return the `id`
     * const puntuacionWithIdOnly = await prisma.puntuacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PuntuacionUpdateManyAndReturnArgs>(args: SelectSubset<T, PuntuacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Puntuacion.
     * @param {PuntuacionUpsertArgs} args - Arguments to update or create a Puntuacion.
     * @example
     * // Update or create a Puntuacion
     * const puntuacion = await prisma.puntuacion.upsert({
     *   create: {
     *     // ... data to create a Puntuacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Puntuacion we want to update
     *   }
     * })
     */
    upsert<T extends PuntuacionUpsertArgs>(args: SelectSubset<T, PuntuacionUpsertArgs<ExtArgs>>): Prisma__PuntuacionClient<$Result.GetResult<Prisma.$PuntuacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Puntuacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntuacionCountArgs} args - Arguments to filter Puntuacions to count.
     * @example
     * // Count the number of Puntuacions
     * const count = await prisma.puntuacion.count({
     *   where: {
     *     // ... the filter for the Puntuacions we want to count
     *   }
     * })
    **/
    count<T extends PuntuacionCountArgs>(
      args?: Subset<T, PuntuacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PuntuacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Puntuacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntuacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PuntuacionAggregateArgs>(args: Subset<T, PuntuacionAggregateArgs>): Prisma.PrismaPromise<GetPuntuacionAggregateType<T>>

    /**
     * Group by Puntuacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PuntuacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PuntuacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PuntuacionGroupByArgs['orderBy'] }
        : { orderBy?: PuntuacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PuntuacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPuntuacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Puntuacion model
   */
  readonly fields: PuntuacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Puntuacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PuntuacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends AlumnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlumnoDefaultArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Catedra<T extends Puntuacion$CatedraArgs<ExtArgs> = {}>(args?: Subset<T, Puntuacion$CatedraArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Puntuacion model
   */
  interface PuntuacionFieldRefs {
    readonly id: FieldRef<"Puntuacion", 'Int'>
    readonly puntos: FieldRef<"Puntuacion", 'Int'>
    readonly motivo: FieldRef<"Puntuacion", 'String'>
    readonly created_at: FieldRef<"Puntuacion", 'DateTime'>
    readonly alumnoId: FieldRef<"Puntuacion", 'Int'>
    readonly catedraId: FieldRef<"Puntuacion", 'Int'>
    readonly tipo: FieldRef<"Puntuacion", 'TipoPuntuacion'>
  }
    

  // Custom InputTypes
  /**
   * Puntuacion findUnique
   */
  export type PuntuacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * Filter, which Puntuacion to fetch.
     */
    where: PuntuacionWhereUniqueInput
  }

  /**
   * Puntuacion findUniqueOrThrow
   */
  export type PuntuacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * Filter, which Puntuacion to fetch.
     */
    where: PuntuacionWhereUniqueInput
  }

  /**
   * Puntuacion findFirst
   */
  export type PuntuacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * Filter, which Puntuacion to fetch.
     */
    where?: PuntuacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntuacions to fetch.
     */
    orderBy?: PuntuacionOrderByWithRelationInput | PuntuacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Puntuacions.
     */
    cursor?: PuntuacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntuacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntuacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Puntuacions.
     */
    distinct?: PuntuacionScalarFieldEnum | PuntuacionScalarFieldEnum[]
  }

  /**
   * Puntuacion findFirstOrThrow
   */
  export type PuntuacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * Filter, which Puntuacion to fetch.
     */
    where?: PuntuacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntuacions to fetch.
     */
    orderBy?: PuntuacionOrderByWithRelationInput | PuntuacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Puntuacions.
     */
    cursor?: PuntuacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntuacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntuacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Puntuacions.
     */
    distinct?: PuntuacionScalarFieldEnum | PuntuacionScalarFieldEnum[]
  }

  /**
   * Puntuacion findMany
   */
  export type PuntuacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * Filter, which Puntuacions to fetch.
     */
    where?: PuntuacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Puntuacions to fetch.
     */
    orderBy?: PuntuacionOrderByWithRelationInput | PuntuacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Puntuacions.
     */
    cursor?: PuntuacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Puntuacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Puntuacions.
     */
    skip?: number
    distinct?: PuntuacionScalarFieldEnum | PuntuacionScalarFieldEnum[]
  }

  /**
   * Puntuacion create
   */
  export type PuntuacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Puntuacion.
     */
    data: XOR<PuntuacionCreateInput, PuntuacionUncheckedCreateInput>
  }

  /**
   * Puntuacion createMany
   */
  export type PuntuacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Puntuacions.
     */
    data: PuntuacionCreateManyInput | PuntuacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Puntuacion createManyAndReturn
   */
  export type PuntuacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * The data used to create many Puntuacions.
     */
    data: PuntuacionCreateManyInput | PuntuacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Puntuacion update
   */
  export type PuntuacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Puntuacion.
     */
    data: XOR<PuntuacionUpdateInput, PuntuacionUncheckedUpdateInput>
    /**
     * Choose, which Puntuacion to update.
     */
    where: PuntuacionWhereUniqueInput
  }

  /**
   * Puntuacion updateMany
   */
  export type PuntuacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Puntuacions.
     */
    data: XOR<PuntuacionUpdateManyMutationInput, PuntuacionUncheckedUpdateManyInput>
    /**
     * Filter which Puntuacions to update
     */
    where?: PuntuacionWhereInput
    /**
     * Limit how many Puntuacions to update.
     */
    limit?: number
  }

  /**
   * Puntuacion updateManyAndReturn
   */
  export type PuntuacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * The data used to update Puntuacions.
     */
    data: XOR<PuntuacionUpdateManyMutationInput, PuntuacionUncheckedUpdateManyInput>
    /**
     * Filter which Puntuacions to update
     */
    where?: PuntuacionWhereInput
    /**
     * Limit how many Puntuacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Puntuacion upsert
   */
  export type PuntuacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Puntuacion to update in case it exists.
     */
    where: PuntuacionWhereUniqueInput
    /**
     * In case the Puntuacion found by the `where` argument doesn't exist, create a new Puntuacion with this data.
     */
    create: XOR<PuntuacionCreateInput, PuntuacionUncheckedCreateInput>
    /**
     * In case the Puntuacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PuntuacionUpdateInput, PuntuacionUncheckedUpdateInput>
  }

  /**
   * Puntuacion delete
   */
  export type PuntuacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
    /**
     * Filter which Puntuacion to delete.
     */
    where: PuntuacionWhereUniqueInput
  }

  /**
   * Puntuacion deleteMany
   */
  export type PuntuacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Puntuacions to delete
     */
    where?: PuntuacionWhereInput
    /**
     * Limit how many Puntuacions to delete.
     */
    limit?: number
  }

  /**
   * Puntuacion.Catedra
   */
  export type Puntuacion$CatedraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Catedra
     */
    select?: CatedraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Catedra
     */
    omit?: CatedraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CatedraInclude<ExtArgs> | null
    where?: CatedraWhereInput
  }

  /**
   * Puntuacion without action
   */
  export type PuntuacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Puntuacion
     */
    select?: PuntuacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Puntuacion
     */
    omit?: PuntuacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PuntuacionInclude<ExtArgs> | null
  }


  /**
   * Model RespuestaAlumno
   */

  export type AggregateRespuestaAlumno = {
    _count: RespuestaAlumnoCountAggregateOutputType | null
    _avg: RespuestaAlumnoAvgAggregateOutputType | null
    _sum: RespuestaAlumnoSumAggregateOutputType | null
    _min: RespuestaAlumnoMinAggregateOutputType | null
    _max: RespuestaAlumnoMaxAggregateOutputType | null
  }

  export type RespuestaAlumnoAvgAggregateOutputType = {
    id: number | null
    alumnoId: number | null
    preguntaId: number | null
    opcionElegidaId: number | null
  }

  export type RespuestaAlumnoSumAggregateOutputType = {
    id: number | null
    alumnoId: number | null
    preguntaId: number | null
    opcionElegidaId: number | null
  }

  export type RespuestaAlumnoMinAggregateOutputType = {
    id: number | null
    created_at: Date | null
    alumnoId: number | null
    preguntaId: number | null
    opcionElegidaId: number | null
  }

  export type RespuestaAlumnoMaxAggregateOutputType = {
    id: number | null
    created_at: Date | null
    alumnoId: number | null
    preguntaId: number | null
    opcionElegidaId: number | null
  }

  export type RespuestaAlumnoCountAggregateOutputType = {
    id: number
    created_at: number
    alumnoId: number
    preguntaId: number
    opcionElegidaId: number
    _all: number
  }


  export type RespuestaAlumnoAvgAggregateInputType = {
    id?: true
    alumnoId?: true
    preguntaId?: true
    opcionElegidaId?: true
  }

  export type RespuestaAlumnoSumAggregateInputType = {
    id?: true
    alumnoId?: true
    preguntaId?: true
    opcionElegidaId?: true
  }

  export type RespuestaAlumnoMinAggregateInputType = {
    id?: true
    created_at?: true
    alumnoId?: true
    preguntaId?: true
    opcionElegidaId?: true
  }

  export type RespuestaAlumnoMaxAggregateInputType = {
    id?: true
    created_at?: true
    alumnoId?: true
    preguntaId?: true
    opcionElegidaId?: true
  }

  export type RespuestaAlumnoCountAggregateInputType = {
    id?: true
    created_at?: true
    alumnoId?: true
    preguntaId?: true
    opcionElegidaId?: true
    _all?: true
  }

  export type RespuestaAlumnoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RespuestaAlumno to aggregate.
     */
    where?: RespuestaAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RespuestaAlumnos to fetch.
     */
    orderBy?: RespuestaAlumnoOrderByWithRelationInput | RespuestaAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RespuestaAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RespuestaAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RespuestaAlumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RespuestaAlumnos
    **/
    _count?: true | RespuestaAlumnoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RespuestaAlumnoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RespuestaAlumnoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RespuestaAlumnoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RespuestaAlumnoMaxAggregateInputType
  }

  export type GetRespuestaAlumnoAggregateType<T extends RespuestaAlumnoAggregateArgs> = {
        [P in keyof T & keyof AggregateRespuestaAlumno]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRespuestaAlumno[P]>
      : GetScalarType<T[P], AggregateRespuestaAlumno[P]>
  }




  export type RespuestaAlumnoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RespuestaAlumnoWhereInput
    orderBy?: RespuestaAlumnoOrderByWithAggregationInput | RespuestaAlumnoOrderByWithAggregationInput[]
    by: RespuestaAlumnoScalarFieldEnum[] | RespuestaAlumnoScalarFieldEnum
    having?: RespuestaAlumnoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RespuestaAlumnoCountAggregateInputType | true
    _avg?: RespuestaAlumnoAvgAggregateInputType
    _sum?: RespuestaAlumnoSumAggregateInputType
    _min?: RespuestaAlumnoMinAggregateInputType
    _max?: RespuestaAlumnoMaxAggregateInputType
  }

  export type RespuestaAlumnoGroupByOutputType = {
    id: number
    created_at: Date
    alumnoId: number
    preguntaId: number
    opcionElegidaId: number
    _count: RespuestaAlumnoCountAggregateOutputType | null
    _avg: RespuestaAlumnoAvgAggregateOutputType | null
    _sum: RespuestaAlumnoSumAggregateOutputType | null
    _min: RespuestaAlumnoMinAggregateOutputType | null
    _max: RespuestaAlumnoMaxAggregateOutputType | null
  }

  type GetRespuestaAlumnoGroupByPayload<T extends RespuestaAlumnoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RespuestaAlumnoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RespuestaAlumnoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RespuestaAlumnoGroupByOutputType[P]>
            : GetScalarType<T[P], RespuestaAlumnoGroupByOutputType[P]>
        }
      >
    >


  export type RespuestaAlumnoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    alumnoId?: boolean
    preguntaId?: boolean
    opcionElegidaId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Opcion?: boolean | OpcionDefaultArgs<ExtArgs>
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["respuestaAlumno"]>

  export type RespuestaAlumnoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    alumnoId?: boolean
    preguntaId?: boolean
    opcionElegidaId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Opcion?: boolean | OpcionDefaultArgs<ExtArgs>
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["respuestaAlumno"]>

  export type RespuestaAlumnoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    alumnoId?: boolean
    preguntaId?: boolean
    opcionElegidaId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Opcion?: boolean | OpcionDefaultArgs<ExtArgs>
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["respuestaAlumno"]>

  export type RespuestaAlumnoSelectScalar = {
    id?: boolean
    created_at?: boolean
    alumnoId?: boolean
    preguntaId?: boolean
    opcionElegidaId?: boolean
  }

  export type RespuestaAlumnoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "alumnoId" | "preguntaId" | "opcionElegidaId", ExtArgs["result"]["respuestaAlumno"]>
  export type RespuestaAlumnoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Opcion?: boolean | OpcionDefaultArgs<ExtArgs>
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }
  export type RespuestaAlumnoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Opcion?: boolean | OpcionDefaultArgs<ExtArgs>
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }
  export type RespuestaAlumnoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    Opcion?: boolean | OpcionDefaultArgs<ExtArgs>
    Pregunta?: boolean | PreguntaDefaultArgs<ExtArgs>
  }

  export type $RespuestaAlumnoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RespuestaAlumno"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs>
      Opcion: Prisma.$OpcionPayload<ExtArgs>
      Pregunta: Prisma.$PreguntaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      created_at: Date
      alumnoId: number
      preguntaId: number
      opcionElegidaId: number
    }, ExtArgs["result"]["respuestaAlumno"]>
    composites: {}
  }

  type RespuestaAlumnoGetPayload<S extends boolean | null | undefined | RespuestaAlumnoDefaultArgs> = $Result.GetResult<Prisma.$RespuestaAlumnoPayload, S>

  type RespuestaAlumnoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RespuestaAlumnoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RespuestaAlumnoCountAggregateInputType | true
    }

  export interface RespuestaAlumnoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RespuestaAlumno'], meta: { name: 'RespuestaAlumno' } }
    /**
     * Find zero or one RespuestaAlumno that matches the filter.
     * @param {RespuestaAlumnoFindUniqueArgs} args - Arguments to find a RespuestaAlumno
     * @example
     * // Get one RespuestaAlumno
     * const respuestaAlumno = await prisma.respuestaAlumno.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RespuestaAlumnoFindUniqueArgs>(args: SelectSubset<T, RespuestaAlumnoFindUniqueArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RespuestaAlumno that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RespuestaAlumnoFindUniqueOrThrowArgs} args - Arguments to find a RespuestaAlumno
     * @example
     * // Get one RespuestaAlumno
     * const respuestaAlumno = await prisma.respuestaAlumno.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RespuestaAlumnoFindUniqueOrThrowArgs>(args: SelectSubset<T, RespuestaAlumnoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RespuestaAlumno that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RespuestaAlumnoFindFirstArgs} args - Arguments to find a RespuestaAlumno
     * @example
     * // Get one RespuestaAlumno
     * const respuestaAlumno = await prisma.respuestaAlumno.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RespuestaAlumnoFindFirstArgs>(args?: SelectSubset<T, RespuestaAlumnoFindFirstArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RespuestaAlumno that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RespuestaAlumnoFindFirstOrThrowArgs} args - Arguments to find a RespuestaAlumno
     * @example
     * // Get one RespuestaAlumno
     * const respuestaAlumno = await prisma.respuestaAlumno.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RespuestaAlumnoFindFirstOrThrowArgs>(args?: SelectSubset<T, RespuestaAlumnoFindFirstOrThrowArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RespuestaAlumnos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RespuestaAlumnoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RespuestaAlumnos
     * const respuestaAlumnos = await prisma.respuestaAlumno.findMany()
     * 
     * // Get first 10 RespuestaAlumnos
     * const respuestaAlumnos = await prisma.respuestaAlumno.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const respuestaAlumnoWithIdOnly = await prisma.respuestaAlumno.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RespuestaAlumnoFindManyArgs>(args?: SelectSubset<T, RespuestaAlumnoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RespuestaAlumno.
     * @param {RespuestaAlumnoCreateArgs} args - Arguments to create a RespuestaAlumno.
     * @example
     * // Create one RespuestaAlumno
     * const RespuestaAlumno = await prisma.respuestaAlumno.create({
     *   data: {
     *     // ... data to create a RespuestaAlumno
     *   }
     * })
     * 
     */
    create<T extends RespuestaAlumnoCreateArgs>(args: SelectSubset<T, RespuestaAlumnoCreateArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RespuestaAlumnos.
     * @param {RespuestaAlumnoCreateManyArgs} args - Arguments to create many RespuestaAlumnos.
     * @example
     * // Create many RespuestaAlumnos
     * const respuestaAlumno = await prisma.respuestaAlumno.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RespuestaAlumnoCreateManyArgs>(args?: SelectSubset<T, RespuestaAlumnoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RespuestaAlumnos and returns the data saved in the database.
     * @param {RespuestaAlumnoCreateManyAndReturnArgs} args - Arguments to create many RespuestaAlumnos.
     * @example
     * // Create many RespuestaAlumnos
     * const respuestaAlumno = await prisma.respuestaAlumno.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RespuestaAlumnos and only return the `id`
     * const respuestaAlumnoWithIdOnly = await prisma.respuestaAlumno.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RespuestaAlumnoCreateManyAndReturnArgs>(args?: SelectSubset<T, RespuestaAlumnoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RespuestaAlumno.
     * @param {RespuestaAlumnoDeleteArgs} args - Arguments to delete one RespuestaAlumno.
     * @example
     * // Delete one RespuestaAlumno
     * const RespuestaAlumno = await prisma.respuestaAlumno.delete({
     *   where: {
     *     // ... filter to delete one RespuestaAlumno
     *   }
     * })
     * 
     */
    delete<T extends RespuestaAlumnoDeleteArgs>(args: SelectSubset<T, RespuestaAlumnoDeleteArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RespuestaAlumno.
     * @param {RespuestaAlumnoUpdateArgs} args - Arguments to update one RespuestaAlumno.
     * @example
     * // Update one RespuestaAlumno
     * const respuestaAlumno = await prisma.respuestaAlumno.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RespuestaAlumnoUpdateArgs>(args: SelectSubset<T, RespuestaAlumnoUpdateArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RespuestaAlumnos.
     * @param {RespuestaAlumnoDeleteManyArgs} args - Arguments to filter RespuestaAlumnos to delete.
     * @example
     * // Delete a few RespuestaAlumnos
     * const { count } = await prisma.respuestaAlumno.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RespuestaAlumnoDeleteManyArgs>(args?: SelectSubset<T, RespuestaAlumnoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RespuestaAlumnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RespuestaAlumnoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RespuestaAlumnos
     * const respuestaAlumno = await prisma.respuestaAlumno.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RespuestaAlumnoUpdateManyArgs>(args: SelectSubset<T, RespuestaAlumnoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RespuestaAlumnos and returns the data updated in the database.
     * @param {RespuestaAlumnoUpdateManyAndReturnArgs} args - Arguments to update many RespuestaAlumnos.
     * @example
     * // Update many RespuestaAlumnos
     * const respuestaAlumno = await prisma.respuestaAlumno.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RespuestaAlumnos and only return the `id`
     * const respuestaAlumnoWithIdOnly = await prisma.respuestaAlumno.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RespuestaAlumnoUpdateManyAndReturnArgs>(args: SelectSubset<T, RespuestaAlumnoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RespuestaAlumno.
     * @param {RespuestaAlumnoUpsertArgs} args - Arguments to update or create a RespuestaAlumno.
     * @example
     * // Update or create a RespuestaAlumno
     * const respuestaAlumno = await prisma.respuestaAlumno.upsert({
     *   create: {
     *     // ... data to create a RespuestaAlumno
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RespuestaAlumno we want to update
     *   }
     * })
     */
    upsert<T extends RespuestaAlumnoUpsertArgs>(args: SelectSubset<T, RespuestaAlumnoUpsertArgs<ExtArgs>>): Prisma__RespuestaAlumnoClient<$Result.GetResult<Prisma.$RespuestaAlumnoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RespuestaAlumnos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RespuestaAlumnoCountArgs} args - Arguments to filter RespuestaAlumnos to count.
     * @example
     * // Count the number of RespuestaAlumnos
     * const count = await prisma.respuestaAlumno.count({
     *   where: {
     *     // ... the filter for the RespuestaAlumnos we want to count
     *   }
     * })
    **/
    count<T extends RespuestaAlumnoCountArgs>(
      args?: Subset<T, RespuestaAlumnoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RespuestaAlumnoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RespuestaAlumno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RespuestaAlumnoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RespuestaAlumnoAggregateArgs>(args: Subset<T, RespuestaAlumnoAggregateArgs>): Prisma.PrismaPromise<GetRespuestaAlumnoAggregateType<T>>

    /**
     * Group by RespuestaAlumno.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RespuestaAlumnoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RespuestaAlumnoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RespuestaAlumnoGroupByArgs['orderBy'] }
        : { orderBy?: RespuestaAlumnoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RespuestaAlumnoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRespuestaAlumnoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RespuestaAlumno model
   */
  readonly fields: RespuestaAlumnoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RespuestaAlumno.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RespuestaAlumnoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends AlumnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlumnoDefaultArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Opcion<T extends OpcionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OpcionDefaultArgs<ExtArgs>>): Prisma__OpcionClient<$Result.GetResult<Prisma.$OpcionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Pregunta<T extends PreguntaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PreguntaDefaultArgs<ExtArgs>>): Prisma__PreguntaClient<$Result.GetResult<Prisma.$PreguntaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RespuestaAlumno model
   */
  interface RespuestaAlumnoFieldRefs {
    readonly id: FieldRef<"RespuestaAlumno", 'Int'>
    readonly created_at: FieldRef<"RespuestaAlumno", 'DateTime'>
    readonly alumnoId: FieldRef<"RespuestaAlumno", 'Int'>
    readonly preguntaId: FieldRef<"RespuestaAlumno", 'Int'>
    readonly opcionElegidaId: FieldRef<"RespuestaAlumno", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RespuestaAlumno findUnique
   */
  export type RespuestaAlumnoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which RespuestaAlumno to fetch.
     */
    where: RespuestaAlumnoWhereUniqueInput
  }

  /**
   * RespuestaAlumno findUniqueOrThrow
   */
  export type RespuestaAlumnoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which RespuestaAlumno to fetch.
     */
    where: RespuestaAlumnoWhereUniqueInput
  }

  /**
   * RespuestaAlumno findFirst
   */
  export type RespuestaAlumnoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which RespuestaAlumno to fetch.
     */
    where?: RespuestaAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RespuestaAlumnos to fetch.
     */
    orderBy?: RespuestaAlumnoOrderByWithRelationInput | RespuestaAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RespuestaAlumnos.
     */
    cursor?: RespuestaAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RespuestaAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RespuestaAlumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RespuestaAlumnos.
     */
    distinct?: RespuestaAlumnoScalarFieldEnum | RespuestaAlumnoScalarFieldEnum[]
  }

  /**
   * RespuestaAlumno findFirstOrThrow
   */
  export type RespuestaAlumnoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which RespuestaAlumno to fetch.
     */
    where?: RespuestaAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RespuestaAlumnos to fetch.
     */
    orderBy?: RespuestaAlumnoOrderByWithRelationInput | RespuestaAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RespuestaAlumnos.
     */
    cursor?: RespuestaAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RespuestaAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RespuestaAlumnos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RespuestaAlumnos.
     */
    distinct?: RespuestaAlumnoScalarFieldEnum | RespuestaAlumnoScalarFieldEnum[]
  }

  /**
   * RespuestaAlumno findMany
   */
  export type RespuestaAlumnoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * Filter, which RespuestaAlumnos to fetch.
     */
    where?: RespuestaAlumnoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RespuestaAlumnos to fetch.
     */
    orderBy?: RespuestaAlumnoOrderByWithRelationInput | RespuestaAlumnoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RespuestaAlumnos.
     */
    cursor?: RespuestaAlumnoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RespuestaAlumnos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RespuestaAlumnos.
     */
    skip?: number
    distinct?: RespuestaAlumnoScalarFieldEnum | RespuestaAlumnoScalarFieldEnum[]
  }

  /**
   * RespuestaAlumno create
   */
  export type RespuestaAlumnoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * The data needed to create a RespuestaAlumno.
     */
    data: XOR<RespuestaAlumnoCreateInput, RespuestaAlumnoUncheckedCreateInput>
  }

  /**
   * RespuestaAlumno createMany
   */
  export type RespuestaAlumnoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RespuestaAlumnos.
     */
    data: RespuestaAlumnoCreateManyInput | RespuestaAlumnoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RespuestaAlumno createManyAndReturn
   */
  export type RespuestaAlumnoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * The data used to create many RespuestaAlumnos.
     */
    data: RespuestaAlumnoCreateManyInput | RespuestaAlumnoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RespuestaAlumno update
   */
  export type RespuestaAlumnoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * The data needed to update a RespuestaAlumno.
     */
    data: XOR<RespuestaAlumnoUpdateInput, RespuestaAlumnoUncheckedUpdateInput>
    /**
     * Choose, which RespuestaAlumno to update.
     */
    where: RespuestaAlumnoWhereUniqueInput
  }

  /**
   * RespuestaAlumno updateMany
   */
  export type RespuestaAlumnoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RespuestaAlumnos.
     */
    data: XOR<RespuestaAlumnoUpdateManyMutationInput, RespuestaAlumnoUncheckedUpdateManyInput>
    /**
     * Filter which RespuestaAlumnos to update
     */
    where?: RespuestaAlumnoWhereInput
    /**
     * Limit how many RespuestaAlumnos to update.
     */
    limit?: number
  }

  /**
   * RespuestaAlumno updateManyAndReturn
   */
  export type RespuestaAlumnoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * The data used to update RespuestaAlumnos.
     */
    data: XOR<RespuestaAlumnoUpdateManyMutationInput, RespuestaAlumnoUncheckedUpdateManyInput>
    /**
     * Filter which RespuestaAlumnos to update
     */
    where?: RespuestaAlumnoWhereInput
    /**
     * Limit how many RespuestaAlumnos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RespuestaAlumno upsert
   */
  export type RespuestaAlumnoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * The filter to search for the RespuestaAlumno to update in case it exists.
     */
    where: RespuestaAlumnoWhereUniqueInput
    /**
     * In case the RespuestaAlumno found by the `where` argument doesn't exist, create a new RespuestaAlumno with this data.
     */
    create: XOR<RespuestaAlumnoCreateInput, RespuestaAlumnoUncheckedCreateInput>
    /**
     * In case the RespuestaAlumno was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RespuestaAlumnoUpdateInput, RespuestaAlumnoUncheckedUpdateInput>
  }

  /**
   * RespuestaAlumno delete
   */
  export type RespuestaAlumnoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
    /**
     * Filter which RespuestaAlumno to delete.
     */
    where: RespuestaAlumnoWhereUniqueInput
  }

  /**
   * RespuestaAlumno deleteMany
   */
  export type RespuestaAlumnoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RespuestaAlumnos to delete
     */
    where?: RespuestaAlumnoWhereInput
    /**
     * Limit how many RespuestaAlumnos to delete.
     */
    limit?: number
  }

  /**
   * RespuestaAlumno without action
   */
  export type RespuestaAlumnoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RespuestaAlumno
     */
    select?: RespuestaAlumnoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RespuestaAlumno
     */
    omit?: RespuestaAlumnoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RespuestaAlumnoInclude<ExtArgs> | null
  }


  /**
   * Model TareaAsignacion
   */

  export type AggregateTareaAsignacion = {
    _count: TareaAsignacionCountAggregateOutputType | null
    _avg: TareaAsignacionAvgAggregateOutputType | null
    _sum: TareaAsignacionSumAggregateOutputType | null
    _min: TareaAsignacionMinAggregateOutputType | null
    _max: TareaAsignacionMaxAggregateOutputType | null
  }

  export type TareaAsignacionAvgAggregateOutputType = {
    id: number | null
    puntos_obtenidos: number | null
    alumnoId: number | null
    tareaMaestraId: number | null
  }

  export type TareaAsignacionSumAggregateOutputType = {
    id: number | null
    puntos_obtenidos: number | null
    alumnoId: number | null
    tareaMaestraId: number | null
  }

  export type TareaAsignacionMinAggregateOutputType = {
    id: number | null
    estado: $Enums.EstadoTarea | null
    submission_path: string | null
    submission_date: Date | null
    puntos_obtenidos: number | null
    created_at: Date | null
    updated_at: Date | null
    alumnoId: number | null
    tareaMaestraId: number | null
  }

  export type TareaAsignacionMaxAggregateOutputType = {
    id: number | null
    estado: $Enums.EstadoTarea | null
    submission_path: string | null
    submission_date: Date | null
    puntos_obtenidos: number | null
    created_at: Date | null
    updated_at: Date | null
    alumnoId: number | null
    tareaMaestraId: number | null
  }

  export type TareaAsignacionCountAggregateOutputType = {
    id: number
    estado: number
    submission_path: number
    submission_date: number
    puntos_obtenidos: number
    created_at: number
    updated_at: number
    alumnoId: number
    tareaMaestraId: number
    _all: number
  }


  export type TareaAsignacionAvgAggregateInputType = {
    id?: true
    puntos_obtenidos?: true
    alumnoId?: true
    tareaMaestraId?: true
  }

  export type TareaAsignacionSumAggregateInputType = {
    id?: true
    puntos_obtenidos?: true
    alumnoId?: true
    tareaMaestraId?: true
  }

  export type TareaAsignacionMinAggregateInputType = {
    id?: true
    estado?: true
    submission_path?: true
    submission_date?: true
    puntos_obtenidos?: true
    created_at?: true
    updated_at?: true
    alumnoId?: true
    tareaMaestraId?: true
  }

  export type TareaAsignacionMaxAggregateInputType = {
    id?: true
    estado?: true
    submission_path?: true
    submission_date?: true
    puntos_obtenidos?: true
    created_at?: true
    updated_at?: true
    alumnoId?: true
    tareaMaestraId?: true
  }

  export type TareaAsignacionCountAggregateInputType = {
    id?: true
    estado?: true
    submission_path?: true
    submission_date?: true
    puntos_obtenidos?: true
    created_at?: true
    updated_at?: true
    alumnoId?: true
    tareaMaestraId?: true
    _all?: true
  }

  export type TareaAsignacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TareaAsignacion to aggregate.
     */
    where?: TareaAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaAsignacions to fetch.
     */
    orderBy?: TareaAsignacionOrderByWithRelationInput | TareaAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TareaAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaAsignacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TareaAsignacions
    **/
    _count?: true | TareaAsignacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TareaAsignacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TareaAsignacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TareaAsignacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TareaAsignacionMaxAggregateInputType
  }

  export type GetTareaAsignacionAggregateType<T extends TareaAsignacionAggregateArgs> = {
        [P in keyof T & keyof AggregateTareaAsignacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTareaAsignacion[P]>
      : GetScalarType<T[P], AggregateTareaAsignacion[P]>
  }




  export type TareaAsignacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaAsignacionWhereInput
    orderBy?: TareaAsignacionOrderByWithAggregationInput | TareaAsignacionOrderByWithAggregationInput[]
    by: TareaAsignacionScalarFieldEnum[] | TareaAsignacionScalarFieldEnum
    having?: TareaAsignacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TareaAsignacionCountAggregateInputType | true
    _avg?: TareaAsignacionAvgAggregateInputType
    _sum?: TareaAsignacionSumAggregateInputType
    _min?: TareaAsignacionMinAggregateInputType
    _max?: TareaAsignacionMaxAggregateInputType
  }

  export type TareaAsignacionGroupByOutputType = {
    id: number
    estado: $Enums.EstadoTarea
    submission_path: string | null
    submission_date: Date | null
    puntos_obtenidos: number | null
    created_at: Date
    updated_at: Date
    alumnoId: number
    tareaMaestraId: number
    _count: TareaAsignacionCountAggregateOutputType | null
    _avg: TareaAsignacionAvgAggregateOutputType | null
    _sum: TareaAsignacionSumAggregateOutputType | null
    _min: TareaAsignacionMinAggregateOutputType | null
    _max: TareaAsignacionMaxAggregateOutputType | null
  }

  type GetTareaAsignacionGroupByPayload<T extends TareaAsignacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TareaAsignacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TareaAsignacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TareaAsignacionGroupByOutputType[P]>
            : GetScalarType<T[P], TareaAsignacionGroupByOutputType[P]>
        }
      >
    >


  export type TareaAsignacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estado?: boolean
    submission_path?: boolean
    submission_date?: boolean
    puntos_obtenidos?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    tareaMaestraId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    TareaMaestra?: boolean | TareaMaestraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tareaAsignacion"]>

  export type TareaAsignacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estado?: boolean
    submission_path?: boolean
    submission_date?: boolean
    puntos_obtenidos?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    tareaMaestraId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    TareaMaestra?: boolean | TareaMaestraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tareaAsignacion"]>

  export type TareaAsignacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    estado?: boolean
    submission_path?: boolean
    submission_date?: boolean
    puntos_obtenidos?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    tareaMaestraId?: boolean
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    TareaMaestra?: boolean | TareaMaestraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tareaAsignacion"]>

  export type TareaAsignacionSelectScalar = {
    id?: boolean
    estado?: boolean
    submission_path?: boolean
    submission_date?: boolean
    puntos_obtenidos?: boolean
    created_at?: boolean
    updated_at?: boolean
    alumnoId?: boolean
    tareaMaestraId?: boolean
  }

  export type TareaAsignacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "estado" | "submission_path" | "submission_date" | "puntos_obtenidos" | "created_at" | "updated_at" | "alumnoId" | "tareaMaestraId", ExtArgs["result"]["tareaAsignacion"]>
  export type TareaAsignacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    TareaMaestra?: boolean | TareaMaestraDefaultArgs<ExtArgs>
  }
  export type TareaAsignacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    TareaMaestra?: boolean | TareaMaestraDefaultArgs<ExtArgs>
  }
  export type TareaAsignacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Alumno?: boolean | AlumnoDefaultArgs<ExtArgs>
    TareaMaestra?: boolean | TareaMaestraDefaultArgs<ExtArgs>
  }

  export type $TareaAsignacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TareaAsignacion"
    objects: {
      Alumno: Prisma.$AlumnoPayload<ExtArgs>
      TareaMaestra: Prisma.$TareaMaestraPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      estado: $Enums.EstadoTarea
      submission_path: string | null
      submission_date: Date | null
      puntos_obtenidos: number | null
      created_at: Date
      updated_at: Date
      alumnoId: number
      tareaMaestraId: number
    }, ExtArgs["result"]["tareaAsignacion"]>
    composites: {}
  }

  type TareaAsignacionGetPayload<S extends boolean | null | undefined | TareaAsignacionDefaultArgs> = $Result.GetResult<Prisma.$TareaAsignacionPayload, S>

  type TareaAsignacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TareaAsignacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TareaAsignacionCountAggregateInputType | true
    }

  export interface TareaAsignacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TareaAsignacion'], meta: { name: 'TareaAsignacion' } }
    /**
     * Find zero or one TareaAsignacion that matches the filter.
     * @param {TareaAsignacionFindUniqueArgs} args - Arguments to find a TareaAsignacion
     * @example
     * // Get one TareaAsignacion
     * const tareaAsignacion = await prisma.tareaAsignacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TareaAsignacionFindUniqueArgs>(args: SelectSubset<T, TareaAsignacionFindUniqueArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TareaAsignacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TareaAsignacionFindUniqueOrThrowArgs} args - Arguments to find a TareaAsignacion
     * @example
     * // Get one TareaAsignacion
     * const tareaAsignacion = await prisma.tareaAsignacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TareaAsignacionFindUniqueOrThrowArgs>(args: SelectSubset<T, TareaAsignacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TareaAsignacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAsignacionFindFirstArgs} args - Arguments to find a TareaAsignacion
     * @example
     * // Get one TareaAsignacion
     * const tareaAsignacion = await prisma.tareaAsignacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TareaAsignacionFindFirstArgs>(args?: SelectSubset<T, TareaAsignacionFindFirstArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TareaAsignacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAsignacionFindFirstOrThrowArgs} args - Arguments to find a TareaAsignacion
     * @example
     * // Get one TareaAsignacion
     * const tareaAsignacion = await prisma.tareaAsignacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TareaAsignacionFindFirstOrThrowArgs>(args?: SelectSubset<T, TareaAsignacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TareaAsignacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAsignacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TareaAsignacions
     * const tareaAsignacions = await prisma.tareaAsignacion.findMany()
     * 
     * // Get first 10 TareaAsignacions
     * const tareaAsignacions = await prisma.tareaAsignacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tareaAsignacionWithIdOnly = await prisma.tareaAsignacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TareaAsignacionFindManyArgs>(args?: SelectSubset<T, TareaAsignacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TareaAsignacion.
     * @param {TareaAsignacionCreateArgs} args - Arguments to create a TareaAsignacion.
     * @example
     * // Create one TareaAsignacion
     * const TareaAsignacion = await prisma.tareaAsignacion.create({
     *   data: {
     *     // ... data to create a TareaAsignacion
     *   }
     * })
     * 
     */
    create<T extends TareaAsignacionCreateArgs>(args: SelectSubset<T, TareaAsignacionCreateArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TareaAsignacions.
     * @param {TareaAsignacionCreateManyArgs} args - Arguments to create many TareaAsignacions.
     * @example
     * // Create many TareaAsignacions
     * const tareaAsignacion = await prisma.tareaAsignacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TareaAsignacionCreateManyArgs>(args?: SelectSubset<T, TareaAsignacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TareaAsignacions and returns the data saved in the database.
     * @param {TareaAsignacionCreateManyAndReturnArgs} args - Arguments to create many TareaAsignacions.
     * @example
     * // Create many TareaAsignacions
     * const tareaAsignacion = await prisma.tareaAsignacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TareaAsignacions and only return the `id`
     * const tareaAsignacionWithIdOnly = await prisma.tareaAsignacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TareaAsignacionCreateManyAndReturnArgs>(args?: SelectSubset<T, TareaAsignacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TareaAsignacion.
     * @param {TareaAsignacionDeleteArgs} args - Arguments to delete one TareaAsignacion.
     * @example
     * // Delete one TareaAsignacion
     * const TareaAsignacion = await prisma.tareaAsignacion.delete({
     *   where: {
     *     // ... filter to delete one TareaAsignacion
     *   }
     * })
     * 
     */
    delete<T extends TareaAsignacionDeleteArgs>(args: SelectSubset<T, TareaAsignacionDeleteArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TareaAsignacion.
     * @param {TareaAsignacionUpdateArgs} args - Arguments to update one TareaAsignacion.
     * @example
     * // Update one TareaAsignacion
     * const tareaAsignacion = await prisma.tareaAsignacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TareaAsignacionUpdateArgs>(args: SelectSubset<T, TareaAsignacionUpdateArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TareaAsignacions.
     * @param {TareaAsignacionDeleteManyArgs} args - Arguments to filter TareaAsignacions to delete.
     * @example
     * // Delete a few TareaAsignacions
     * const { count } = await prisma.tareaAsignacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TareaAsignacionDeleteManyArgs>(args?: SelectSubset<T, TareaAsignacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TareaAsignacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAsignacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TareaAsignacions
     * const tareaAsignacion = await prisma.tareaAsignacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TareaAsignacionUpdateManyArgs>(args: SelectSubset<T, TareaAsignacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TareaAsignacions and returns the data updated in the database.
     * @param {TareaAsignacionUpdateManyAndReturnArgs} args - Arguments to update many TareaAsignacions.
     * @example
     * // Update many TareaAsignacions
     * const tareaAsignacion = await prisma.tareaAsignacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TareaAsignacions and only return the `id`
     * const tareaAsignacionWithIdOnly = await prisma.tareaAsignacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TareaAsignacionUpdateManyAndReturnArgs>(args: SelectSubset<T, TareaAsignacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TareaAsignacion.
     * @param {TareaAsignacionUpsertArgs} args - Arguments to update or create a TareaAsignacion.
     * @example
     * // Update or create a TareaAsignacion
     * const tareaAsignacion = await prisma.tareaAsignacion.upsert({
     *   create: {
     *     // ... data to create a TareaAsignacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TareaAsignacion we want to update
     *   }
     * })
     */
    upsert<T extends TareaAsignacionUpsertArgs>(args: SelectSubset<T, TareaAsignacionUpsertArgs<ExtArgs>>): Prisma__TareaAsignacionClient<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TareaAsignacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAsignacionCountArgs} args - Arguments to filter TareaAsignacions to count.
     * @example
     * // Count the number of TareaAsignacions
     * const count = await prisma.tareaAsignacion.count({
     *   where: {
     *     // ... the filter for the TareaAsignacions we want to count
     *   }
     * })
    **/
    count<T extends TareaAsignacionCountArgs>(
      args?: Subset<T, TareaAsignacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TareaAsignacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TareaAsignacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAsignacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TareaAsignacionAggregateArgs>(args: Subset<T, TareaAsignacionAggregateArgs>): Prisma.PrismaPromise<GetTareaAsignacionAggregateType<T>>

    /**
     * Group by TareaAsignacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaAsignacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TareaAsignacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TareaAsignacionGroupByArgs['orderBy'] }
        : { orderBy?: TareaAsignacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TareaAsignacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTareaAsignacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TareaAsignacion model
   */
  readonly fields: TareaAsignacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TareaAsignacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TareaAsignacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Alumno<T extends AlumnoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlumnoDefaultArgs<ExtArgs>>): Prisma__AlumnoClient<$Result.GetResult<Prisma.$AlumnoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    TareaMaestra<T extends TareaMaestraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TareaMaestraDefaultArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TareaAsignacion model
   */
  interface TareaAsignacionFieldRefs {
    readonly id: FieldRef<"TareaAsignacion", 'Int'>
    readonly estado: FieldRef<"TareaAsignacion", 'EstadoTarea'>
    readonly submission_path: FieldRef<"TareaAsignacion", 'String'>
    readonly submission_date: FieldRef<"TareaAsignacion", 'DateTime'>
    readonly puntos_obtenidos: FieldRef<"TareaAsignacion", 'Int'>
    readonly created_at: FieldRef<"TareaAsignacion", 'DateTime'>
    readonly updated_at: FieldRef<"TareaAsignacion", 'DateTime'>
    readonly alumnoId: FieldRef<"TareaAsignacion", 'Int'>
    readonly tareaMaestraId: FieldRef<"TareaAsignacion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TareaAsignacion findUnique
   */
  export type TareaAsignacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which TareaAsignacion to fetch.
     */
    where: TareaAsignacionWhereUniqueInput
  }

  /**
   * TareaAsignacion findUniqueOrThrow
   */
  export type TareaAsignacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which TareaAsignacion to fetch.
     */
    where: TareaAsignacionWhereUniqueInput
  }

  /**
   * TareaAsignacion findFirst
   */
  export type TareaAsignacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which TareaAsignacion to fetch.
     */
    where?: TareaAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaAsignacions to fetch.
     */
    orderBy?: TareaAsignacionOrderByWithRelationInput | TareaAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TareaAsignacions.
     */
    cursor?: TareaAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaAsignacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TareaAsignacions.
     */
    distinct?: TareaAsignacionScalarFieldEnum | TareaAsignacionScalarFieldEnum[]
  }

  /**
   * TareaAsignacion findFirstOrThrow
   */
  export type TareaAsignacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which TareaAsignacion to fetch.
     */
    where?: TareaAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaAsignacions to fetch.
     */
    orderBy?: TareaAsignacionOrderByWithRelationInput | TareaAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TareaAsignacions.
     */
    cursor?: TareaAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaAsignacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TareaAsignacions.
     */
    distinct?: TareaAsignacionScalarFieldEnum | TareaAsignacionScalarFieldEnum[]
  }

  /**
   * TareaAsignacion findMany
   */
  export type TareaAsignacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * Filter, which TareaAsignacions to fetch.
     */
    where?: TareaAsignacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaAsignacions to fetch.
     */
    orderBy?: TareaAsignacionOrderByWithRelationInput | TareaAsignacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TareaAsignacions.
     */
    cursor?: TareaAsignacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaAsignacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaAsignacions.
     */
    skip?: number
    distinct?: TareaAsignacionScalarFieldEnum | TareaAsignacionScalarFieldEnum[]
  }

  /**
   * TareaAsignacion create
   */
  export type TareaAsignacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * The data needed to create a TareaAsignacion.
     */
    data: XOR<TareaAsignacionCreateInput, TareaAsignacionUncheckedCreateInput>
  }

  /**
   * TareaAsignacion createMany
   */
  export type TareaAsignacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TareaAsignacions.
     */
    data: TareaAsignacionCreateManyInput | TareaAsignacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TareaAsignacion createManyAndReturn
   */
  export type TareaAsignacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * The data used to create many TareaAsignacions.
     */
    data: TareaAsignacionCreateManyInput | TareaAsignacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TareaAsignacion update
   */
  export type TareaAsignacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * The data needed to update a TareaAsignacion.
     */
    data: XOR<TareaAsignacionUpdateInput, TareaAsignacionUncheckedUpdateInput>
    /**
     * Choose, which TareaAsignacion to update.
     */
    where: TareaAsignacionWhereUniqueInput
  }

  /**
   * TareaAsignacion updateMany
   */
  export type TareaAsignacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TareaAsignacions.
     */
    data: XOR<TareaAsignacionUpdateManyMutationInput, TareaAsignacionUncheckedUpdateManyInput>
    /**
     * Filter which TareaAsignacions to update
     */
    where?: TareaAsignacionWhereInput
    /**
     * Limit how many TareaAsignacions to update.
     */
    limit?: number
  }

  /**
   * TareaAsignacion updateManyAndReturn
   */
  export type TareaAsignacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * The data used to update TareaAsignacions.
     */
    data: XOR<TareaAsignacionUpdateManyMutationInput, TareaAsignacionUncheckedUpdateManyInput>
    /**
     * Filter which TareaAsignacions to update
     */
    where?: TareaAsignacionWhereInput
    /**
     * Limit how many TareaAsignacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TareaAsignacion upsert
   */
  export type TareaAsignacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * The filter to search for the TareaAsignacion to update in case it exists.
     */
    where: TareaAsignacionWhereUniqueInput
    /**
     * In case the TareaAsignacion found by the `where` argument doesn't exist, create a new TareaAsignacion with this data.
     */
    create: XOR<TareaAsignacionCreateInput, TareaAsignacionUncheckedCreateInput>
    /**
     * In case the TareaAsignacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TareaAsignacionUpdateInput, TareaAsignacionUncheckedUpdateInput>
  }

  /**
   * TareaAsignacion delete
   */
  export type TareaAsignacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    /**
     * Filter which TareaAsignacion to delete.
     */
    where: TareaAsignacionWhereUniqueInput
  }

  /**
   * TareaAsignacion deleteMany
   */
  export type TareaAsignacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TareaAsignacions to delete
     */
    where?: TareaAsignacionWhereInput
    /**
     * Limit how many TareaAsignacions to delete.
     */
    limit?: number
  }

  /**
   * TareaAsignacion without action
   */
  export type TareaAsignacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
  }


  /**
   * Model TareaMaestra
   */

  export type AggregateTareaMaestra = {
    _count: TareaMaestraCountAggregateOutputType | null
    _avg: TareaMaestraAvgAggregateOutputType | null
    _sum: TareaMaestraSumAggregateOutputType | null
    _min: TareaMaestraMinAggregateOutputType | null
    _max: TareaMaestraMaxAggregateOutputType | null
  }

  export type TareaMaestraAvgAggregateOutputType = {
    id: number | null
    puntos_posibles: number | null
    catedraId: number | null
    publicacionId: number | null
  }

  export type TareaMaestraSumAggregateOutputType = {
    id: number | null
    puntos_posibles: number | null
    catedraId: number | null
    publicacionId: number | null
  }

  export type TareaMaestraMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    descripcion: string | null
    fecha_entrega: Date | null
    puntos_posibles: number | null
    multimedia_path: string | null
    created_at: Date | null
    updated_at: Date | null
    catedraId: number | null
    publicacionId: number | null
  }

  export type TareaMaestraMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    descripcion: string | null
    fecha_entrega: Date | null
    puntos_posibles: number | null
    multimedia_path: string | null
    created_at: Date | null
    updated_at: Date | null
    catedraId: number | null
    publicacionId: number | null
  }

  export type TareaMaestraCountAggregateOutputType = {
    id: number
    titulo: number
    descripcion: number
    fecha_entrega: number
    puntos_posibles: number
    recursos: number
    multimedia_path: number
    created_at: number
    updated_at: number
    catedraId: number
    publicacionId: number
    _all: number
  }


  export type TareaMaestraAvgAggregateInputType = {
    id?: true
    puntos_posibles?: true
    catedraId?: true
    publicacionId?: true
  }

  export type TareaMaestraSumAggregateInputType = {
    id?: true
    puntos_posibles?: true
    catedraId?: true
    publicacionId?: true
  }

  export type TareaMaestraMinAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    fecha_entrega?: true
    puntos_posibles?: true
    multimedia_path?: true
    created_at?: true
    updated_at?: true
    catedraId?: true
    publicacionId?: true
  }

  export type TareaMaestraMaxAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    fecha_entrega?: true
    puntos_posibles?: true
    multimedia_path?: true
    created_at?: true
    updated_at?: true
    catedraId?: true
    publicacionId?: true
  }

  export type TareaMaestraCountAggregateInputType = {
    id?: true
    titulo?: true
    descripcion?: true
    fecha_entrega?: true
    puntos_posibles?: true
    recursos?: true
    multimedia_path?: true
    created_at?: true
    updated_at?: true
    catedraId?: true
    publicacionId?: true
    _all?: true
  }

  export type TareaMaestraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TareaMaestra to aggregate.
     */
    where?: TareaMaestraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaMaestras to fetch.
     */
    orderBy?: TareaMaestraOrderByWithRelationInput | TareaMaestraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TareaMaestraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaMaestras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaMaestras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TareaMaestras
    **/
    _count?: true | TareaMaestraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TareaMaestraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TareaMaestraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TareaMaestraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TareaMaestraMaxAggregateInputType
  }

  export type GetTareaMaestraAggregateType<T extends TareaMaestraAggregateArgs> = {
        [P in keyof T & keyof AggregateTareaMaestra]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTareaMaestra[P]>
      : GetScalarType<T[P], AggregateTareaMaestra[P]>
  }




  export type TareaMaestraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TareaMaestraWhereInput
    orderBy?: TareaMaestraOrderByWithAggregationInput | TareaMaestraOrderByWithAggregationInput[]
    by: TareaMaestraScalarFieldEnum[] | TareaMaestraScalarFieldEnum
    having?: TareaMaestraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TareaMaestraCountAggregateInputType | true
    _avg?: TareaMaestraAvgAggregateInputType
    _sum?: TareaMaestraSumAggregateInputType
    _min?: TareaMaestraMinAggregateInputType
    _max?: TareaMaestraMaxAggregateInputType
  }

  export type TareaMaestraGroupByOutputType = {
    id: number
    titulo: string
    descripcion: string
    fecha_entrega: Date | null
    puntos_posibles: number
    recursos: string[]
    multimedia_path: string | null
    created_at: Date
    updated_at: Date
    catedraId: number
    publicacionId: number | null
    _count: TareaMaestraCountAggregateOutputType | null
    _avg: TareaMaestraAvgAggregateOutputType | null
    _sum: TareaMaestraSumAggregateOutputType | null
    _min: TareaMaestraMinAggregateOutputType | null
    _max: TareaMaestraMaxAggregateOutputType | null
  }

  type GetTareaMaestraGroupByPayload<T extends TareaMaestraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TareaMaestraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TareaMaestraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TareaMaestraGroupByOutputType[P]>
            : GetScalarType<T[P], TareaMaestraGroupByOutputType[P]>
        }
      >
    >


  export type TareaMaestraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    fecha_entrega?: boolean
    puntos_posibles?: boolean
    recursos?: boolean
    multimedia_path?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
    publicacionId?: boolean
    Publicacion?: boolean | TareaMaestra$PublicacionArgs<ExtArgs>
    TareaAsignacion?: boolean | TareaMaestra$TareaAsignacionArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    _count?: boolean | TareaMaestraCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tareaMaestra"]>

  export type TareaMaestraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    fecha_entrega?: boolean
    puntos_posibles?: boolean
    recursos?: boolean
    multimedia_path?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
    publicacionId?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tareaMaestra"]>

  export type TareaMaestraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    fecha_entrega?: boolean
    puntos_posibles?: boolean
    recursos?: boolean
    multimedia_path?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
    publicacionId?: boolean
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tareaMaestra"]>

  export type TareaMaestraSelectScalar = {
    id?: boolean
    titulo?: boolean
    descripcion?: boolean
    fecha_entrega?: boolean
    puntos_posibles?: boolean
    recursos?: boolean
    multimedia_path?: boolean
    created_at?: boolean
    updated_at?: boolean
    catedraId?: boolean
    publicacionId?: boolean
  }

  export type TareaMaestraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "descripcion" | "fecha_entrega" | "puntos_posibles" | "recursos" | "multimedia_path" | "created_at" | "updated_at" | "catedraId" | "publicacionId", ExtArgs["result"]["tareaMaestra"]>
  export type TareaMaestraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Publicacion?: boolean | TareaMaestra$PublicacionArgs<ExtArgs>
    TareaAsignacion?: boolean | TareaMaestra$TareaAsignacionArgs<ExtArgs>
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
    _count?: boolean | TareaMaestraCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TareaMaestraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }
  export type TareaMaestraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Catedra?: boolean | CatedraDefaultArgs<ExtArgs>
  }

  export type $TareaMaestraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TareaMaestra"
    objects: {
      Publicacion: Prisma.$PublicacionPayload<ExtArgs> | null
      TareaAsignacion: Prisma.$TareaAsignacionPayload<ExtArgs>[]
      Catedra: Prisma.$CatedraPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      descripcion: string
      fecha_entrega: Date | null
      puntos_posibles: number
      recursos: string[]
      multimedia_path: string | null
      created_at: Date
      updated_at: Date
      catedraId: number
      publicacionId: number | null
    }, ExtArgs["result"]["tareaMaestra"]>
    composites: {}
  }

  type TareaMaestraGetPayload<S extends boolean | null | undefined | TareaMaestraDefaultArgs> = $Result.GetResult<Prisma.$TareaMaestraPayload, S>

  type TareaMaestraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TareaMaestraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TareaMaestraCountAggregateInputType | true
    }

  export interface TareaMaestraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TareaMaestra'], meta: { name: 'TareaMaestra' } }
    /**
     * Find zero or one TareaMaestra that matches the filter.
     * @param {TareaMaestraFindUniqueArgs} args - Arguments to find a TareaMaestra
     * @example
     * // Get one TareaMaestra
     * const tareaMaestra = await prisma.tareaMaestra.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TareaMaestraFindUniqueArgs>(args: SelectSubset<T, TareaMaestraFindUniqueArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TareaMaestra that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TareaMaestraFindUniqueOrThrowArgs} args - Arguments to find a TareaMaestra
     * @example
     * // Get one TareaMaestra
     * const tareaMaestra = await prisma.tareaMaestra.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TareaMaestraFindUniqueOrThrowArgs>(args: SelectSubset<T, TareaMaestraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TareaMaestra that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaMaestraFindFirstArgs} args - Arguments to find a TareaMaestra
     * @example
     * // Get one TareaMaestra
     * const tareaMaestra = await prisma.tareaMaestra.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TareaMaestraFindFirstArgs>(args?: SelectSubset<T, TareaMaestraFindFirstArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TareaMaestra that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaMaestraFindFirstOrThrowArgs} args - Arguments to find a TareaMaestra
     * @example
     * // Get one TareaMaestra
     * const tareaMaestra = await prisma.tareaMaestra.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TareaMaestraFindFirstOrThrowArgs>(args?: SelectSubset<T, TareaMaestraFindFirstOrThrowArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TareaMaestras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaMaestraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TareaMaestras
     * const tareaMaestras = await prisma.tareaMaestra.findMany()
     * 
     * // Get first 10 TareaMaestras
     * const tareaMaestras = await prisma.tareaMaestra.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tareaMaestraWithIdOnly = await prisma.tareaMaestra.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TareaMaestraFindManyArgs>(args?: SelectSubset<T, TareaMaestraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TareaMaestra.
     * @param {TareaMaestraCreateArgs} args - Arguments to create a TareaMaestra.
     * @example
     * // Create one TareaMaestra
     * const TareaMaestra = await prisma.tareaMaestra.create({
     *   data: {
     *     // ... data to create a TareaMaestra
     *   }
     * })
     * 
     */
    create<T extends TareaMaestraCreateArgs>(args: SelectSubset<T, TareaMaestraCreateArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TareaMaestras.
     * @param {TareaMaestraCreateManyArgs} args - Arguments to create many TareaMaestras.
     * @example
     * // Create many TareaMaestras
     * const tareaMaestra = await prisma.tareaMaestra.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TareaMaestraCreateManyArgs>(args?: SelectSubset<T, TareaMaestraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TareaMaestras and returns the data saved in the database.
     * @param {TareaMaestraCreateManyAndReturnArgs} args - Arguments to create many TareaMaestras.
     * @example
     * // Create many TareaMaestras
     * const tareaMaestra = await prisma.tareaMaestra.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TareaMaestras and only return the `id`
     * const tareaMaestraWithIdOnly = await prisma.tareaMaestra.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TareaMaestraCreateManyAndReturnArgs>(args?: SelectSubset<T, TareaMaestraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a TareaMaestra.
     * @param {TareaMaestraDeleteArgs} args - Arguments to delete one TareaMaestra.
     * @example
     * // Delete one TareaMaestra
     * const TareaMaestra = await prisma.tareaMaestra.delete({
     *   where: {
     *     // ... filter to delete one TareaMaestra
     *   }
     * })
     * 
     */
    delete<T extends TareaMaestraDeleteArgs>(args: SelectSubset<T, TareaMaestraDeleteArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TareaMaestra.
     * @param {TareaMaestraUpdateArgs} args - Arguments to update one TareaMaestra.
     * @example
     * // Update one TareaMaestra
     * const tareaMaestra = await prisma.tareaMaestra.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TareaMaestraUpdateArgs>(args: SelectSubset<T, TareaMaestraUpdateArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TareaMaestras.
     * @param {TareaMaestraDeleteManyArgs} args - Arguments to filter TareaMaestras to delete.
     * @example
     * // Delete a few TareaMaestras
     * const { count } = await prisma.tareaMaestra.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TareaMaestraDeleteManyArgs>(args?: SelectSubset<T, TareaMaestraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TareaMaestras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaMaestraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TareaMaestras
     * const tareaMaestra = await prisma.tareaMaestra.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TareaMaestraUpdateManyArgs>(args: SelectSubset<T, TareaMaestraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TareaMaestras and returns the data updated in the database.
     * @param {TareaMaestraUpdateManyAndReturnArgs} args - Arguments to update many TareaMaestras.
     * @example
     * // Update many TareaMaestras
     * const tareaMaestra = await prisma.tareaMaestra.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more TareaMaestras and only return the `id`
     * const tareaMaestraWithIdOnly = await prisma.tareaMaestra.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TareaMaestraUpdateManyAndReturnArgs>(args: SelectSubset<T, TareaMaestraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one TareaMaestra.
     * @param {TareaMaestraUpsertArgs} args - Arguments to update or create a TareaMaestra.
     * @example
     * // Update or create a TareaMaestra
     * const tareaMaestra = await prisma.tareaMaestra.upsert({
     *   create: {
     *     // ... data to create a TareaMaestra
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TareaMaestra we want to update
     *   }
     * })
     */
    upsert<T extends TareaMaestraUpsertArgs>(args: SelectSubset<T, TareaMaestraUpsertArgs<ExtArgs>>): Prisma__TareaMaestraClient<$Result.GetResult<Prisma.$TareaMaestraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TareaMaestras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaMaestraCountArgs} args - Arguments to filter TareaMaestras to count.
     * @example
     * // Count the number of TareaMaestras
     * const count = await prisma.tareaMaestra.count({
     *   where: {
     *     // ... the filter for the TareaMaestras we want to count
     *   }
     * })
    **/
    count<T extends TareaMaestraCountArgs>(
      args?: Subset<T, TareaMaestraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TareaMaestraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TareaMaestra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaMaestraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TareaMaestraAggregateArgs>(args: Subset<T, TareaMaestraAggregateArgs>): Prisma.PrismaPromise<GetTareaMaestraAggregateType<T>>

    /**
     * Group by TareaMaestra.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TareaMaestraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TareaMaestraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TareaMaestraGroupByArgs['orderBy'] }
        : { orderBy?: TareaMaestraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TareaMaestraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTareaMaestraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TareaMaestra model
   */
  readonly fields: TareaMaestraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TareaMaestra.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TareaMaestraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Publicacion<T extends TareaMaestra$PublicacionArgs<ExtArgs> = {}>(args?: Subset<T, TareaMaestra$PublicacionArgs<ExtArgs>>): Prisma__PublicacionClient<$Result.GetResult<Prisma.$PublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    TareaAsignacion<T extends TareaMaestra$TareaAsignacionArgs<ExtArgs> = {}>(args?: Subset<T, TareaMaestra$TareaAsignacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TareaAsignacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Catedra<T extends CatedraDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CatedraDefaultArgs<ExtArgs>>): Prisma__CatedraClient<$Result.GetResult<Prisma.$CatedraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TareaMaestra model
   */
  interface TareaMaestraFieldRefs {
    readonly id: FieldRef<"TareaMaestra", 'Int'>
    readonly titulo: FieldRef<"TareaMaestra", 'String'>
    readonly descripcion: FieldRef<"TareaMaestra", 'String'>
    readonly fecha_entrega: FieldRef<"TareaMaestra", 'DateTime'>
    readonly puntos_posibles: FieldRef<"TareaMaestra", 'Int'>
    readonly recursos: FieldRef<"TareaMaestra", 'String[]'>
    readonly multimedia_path: FieldRef<"TareaMaestra", 'String'>
    readonly created_at: FieldRef<"TareaMaestra", 'DateTime'>
    readonly updated_at: FieldRef<"TareaMaestra", 'DateTime'>
    readonly catedraId: FieldRef<"TareaMaestra", 'Int'>
    readonly publicacionId: FieldRef<"TareaMaestra", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TareaMaestra findUnique
   */
  export type TareaMaestraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * Filter, which TareaMaestra to fetch.
     */
    where: TareaMaestraWhereUniqueInput
  }

  /**
   * TareaMaestra findUniqueOrThrow
   */
  export type TareaMaestraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * Filter, which TareaMaestra to fetch.
     */
    where: TareaMaestraWhereUniqueInput
  }

  /**
   * TareaMaestra findFirst
   */
  export type TareaMaestraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * Filter, which TareaMaestra to fetch.
     */
    where?: TareaMaestraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaMaestras to fetch.
     */
    orderBy?: TareaMaestraOrderByWithRelationInput | TareaMaestraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TareaMaestras.
     */
    cursor?: TareaMaestraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaMaestras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaMaestras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TareaMaestras.
     */
    distinct?: TareaMaestraScalarFieldEnum | TareaMaestraScalarFieldEnum[]
  }

  /**
   * TareaMaestra findFirstOrThrow
   */
  export type TareaMaestraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * Filter, which TareaMaestra to fetch.
     */
    where?: TareaMaestraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaMaestras to fetch.
     */
    orderBy?: TareaMaestraOrderByWithRelationInput | TareaMaestraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TareaMaestras.
     */
    cursor?: TareaMaestraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaMaestras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaMaestras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TareaMaestras.
     */
    distinct?: TareaMaestraScalarFieldEnum | TareaMaestraScalarFieldEnum[]
  }

  /**
   * TareaMaestra findMany
   */
  export type TareaMaestraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * Filter, which TareaMaestras to fetch.
     */
    where?: TareaMaestraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TareaMaestras to fetch.
     */
    orderBy?: TareaMaestraOrderByWithRelationInput | TareaMaestraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TareaMaestras.
     */
    cursor?: TareaMaestraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TareaMaestras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TareaMaestras.
     */
    skip?: number
    distinct?: TareaMaestraScalarFieldEnum | TareaMaestraScalarFieldEnum[]
  }

  /**
   * TareaMaestra create
   */
  export type TareaMaestraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * The data needed to create a TareaMaestra.
     */
    data: XOR<TareaMaestraCreateInput, TareaMaestraUncheckedCreateInput>
  }

  /**
   * TareaMaestra createMany
   */
  export type TareaMaestraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TareaMaestras.
     */
    data: TareaMaestraCreateManyInput | TareaMaestraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TareaMaestra createManyAndReturn
   */
  export type TareaMaestraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * The data used to create many TareaMaestras.
     */
    data: TareaMaestraCreateManyInput | TareaMaestraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TareaMaestra update
   */
  export type TareaMaestraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * The data needed to update a TareaMaestra.
     */
    data: XOR<TareaMaestraUpdateInput, TareaMaestraUncheckedUpdateInput>
    /**
     * Choose, which TareaMaestra to update.
     */
    where: TareaMaestraWhereUniqueInput
  }

  /**
   * TareaMaestra updateMany
   */
  export type TareaMaestraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TareaMaestras.
     */
    data: XOR<TareaMaestraUpdateManyMutationInput, TareaMaestraUncheckedUpdateManyInput>
    /**
     * Filter which TareaMaestras to update
     */
    where?: TareaMaestraWhereInput
    /**
     * Limit how many TareaMaestras to update.
     */
    limit?: number
  }

  /**
   * TareaMaestra updateManyAndReturn
   */
  export type TareaMaestraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * The data used to update TareaMaestras.
     */
    data: XOR<TareaMaestraUpdateManyMutationInput, TareaMaestraUncheckedUpdateManyInput>
    /**
     * Filter which TareaMaestras to update
     */
    where?: TareaMaestraWhereInput
    /**
     * Limit how many TareaMaestras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * TareaMaestra upsert
   */
  export type TareaMaestraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * The filter to search for the TareaMaestra to update in case it exists.
     */
    where: TareaMaestraWhereUniqueInput
    /**
     * In case the TareaMaestra found by the `where` argument doesn't exist, create a new TareaMaestra with this data.
     */
    create: XOR<TareaMaestraCreateInput, TareaMaestraUncheckedCreateInput>
    /**
     * In case the TareaMaestra was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TareaMaestraUpdateInput, TareaMaestraUncheckedUpdateInput>
  }

  /**
   * TareaMaestra delete
   */
  export type TareaMaestraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
    /**
     * Filter which TareaMaestra to delete.
     */
    where: TareaMaestraWhereUniqueInput
  }

  /**
   * TareaMaestra deleteMany
   */
  export type TareaMaestraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TareaMaestras to delete
     */
    where?: TareaMaestraWhereInput
    /**
     * Limit how many TareaMaestras to delete.
     */
    limit?: number
  }

  /**
   * TareaMaestra.Publicacion
   */
  export type TareaMaestra$PublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicacion
     */
    select?: PublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicacion
     */
    omit?: PublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionInclude<ExtArgs> | null
    where?: PublicacionWhereInput
  }

  /**
   * TareaMaestra.TareaAsignacion
   */
  export type TareaMaestra$TareaAsignacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaAsignacion
     */
    select?: TareaAsignacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaAsignacion
     */
    omit?: TareaAsignacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaAsignacionInclude<ExtArgs> | null
    where?: TareaAsignacionWhereInput
    orderBy?: TareaAsignacionOrderByWithRelationInput | TareaAsignacionOrderByWithRelationInput[]
    cursor?: TareaAsignacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TareaAsignacionScalarFieldEnum | TareaAsignacionScalarFieldEnum[]
  }

  /**
   * TareaMaestra without action
   */
  export type TareaMaestraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TareaMaestra
     */
    select?: TareaMaestraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TareaMaestra
     */
    omit?: TareaMaestraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TareaMaestraInclude<ExtArgs> | null
  }


  /**
   * Model UnidadPlan
   */

  export type AggregateUnidadPlan = {
    _count: UnidadPlanCountAggregateOutputType | null
    _avg: UnidadPlanAvgAggregateOutputType | null
    _sum: UnidadPlanSumAggregateOutputType | null
    _min: UnidadPlanMinAggregateOutputType | null
    _max: UnidadPlanMaxAggregateOutputType | null
  }

  export type UnidadPlanAvgAggregateOutputType = {
    id: number | null
    planDeClasesId: number | null
    horasTeoricas: number | null
    horasPracticas: number | null
  }

  export type UnidadPlanSumAggregateOutputType = {
    id: number | null
    planDeClasesId: number | null
    horasTeoricas: number | null
    horasPracticas: number | null
  }

  export type UnidadPlanMinAggregateOutputType = {
    id: number | null
    planDeClasesId: number | null
    periodo: string | null
    contenido: string | null
    capacidades: string | null
    horasTeoricas: number | null
    horasPracticas: number | null
    estrategiasMetodologicas: string | null
    mediosVerificacionEvaluacion: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UnidadPlanMaxAggregateOutputType = {
    id: number | null
    planDeClasesId: number | null
    periodo: string | null
    contenido: string | null
    capacidades: string | null
    horasTeoricas: number | null
    horasPracticas: number | null
    estrategiasMetodologicas: string | null
    mediosVerificacionEvaluacion: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UnidadPlanCountAggregateOutputType = {
    id: number
    planDeClasesId: number
    periodo: number
    contenido: number
    capacidades: number
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: number
    mediosVerificacionEvaluacion: number
    recursos: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UnidadPlanAvgAggregateInputType = {
    id?: true
    planDeClasesId?: true
    horasTeoricas?: true
    horasPracticas?: true
  }

  export type UnidadPlanSumAggregateInputType = {
    id?: true
    planDeClasesId?: true
    horasTeoricas?: true
    horasPracticas?: true
  }

  export type UnidadPlanMinAggregateInputType = {
    id?: true
    planDeClasesId?: true
    periodo?: true
    contenido?: true
    capacidades?: true
    horasTeoricas?: true
    horasPracticas?: true
    estrategiasMetodologicas?: true
    mediosVerificacionEvaluacion?: true
    created_at?: true
    updated_at?: true
  }

  export type UnidadPlanMaxAggregateInputType = {
    id?: true
    planDeClasesId?: true
    periodo?: true
    contenido?: true
    capacidades?: true
    horasTeoricas?: true
    horasPracticas?: true
    estrategiasMetodologicas?: true
    mediosVerificacionEvaluacion?: true
    created_at?: true
    updated_at?: true
  }

  export type UnidadPlanCountAggregateInputType = {
    id?: true
    planDeClasesId?: true
    periodo?: true
    contenido?: true
    capacidades?: true
    horasTeoricas?: true
    horasPracticas?: true
    estrategiasMetodologicas?: true
    mediosVerificacionEvaluacion?: true
    recursos?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UnidadPlanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UnidadPlan to aggregate.
     */
    where?: UnidadPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnidadPlans to fetch.
     */
    orderBy?: UnidadPlanOrderByWithRelationInput | UnidadPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UnidadPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnidadPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnidadPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UnidadPlans
    **/
    _count?: true | UnidadPlanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UnidadPlanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UnidadPlanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UnidadPlanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UnidadPlanMaxAggregateInputType
  }

  export type GetUnidadPlanAggregateType<T extends UnidadPlanAggregateArgs> = {
        [P in keyof T & keyof AggregateUnidadPlan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUnidadPlan[P]>
      : GetScalarType<T[P], AggregateUnidadPlan[P]>
  }




  export type UnidadPlanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UnidadPlanWhereInput
    orderBy?: UnidadPlanOrderByWithAggregationInput | UnidadPlanOrderByWithAggregationInput[]
    by: UnidadPlanScalarFieldEnum[] | UnidadPlanScalarFieldEnum
    having?: UnidadPlanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UnidadPlanCountAggregateInputType | true
    _avg?: UnidadPlanAvgAggregateInputType
    _sum?: UnidadPlanSumAggregateInputType
    _min?: UnidadPlanMinAggregateInputType
    _max?: UnidadPlanMaxAggregateInputType
  }

  export type UnidadPlanGroupByOutputType = {
    id: number
    planDeClasesId: number
    periodo: string
    contenido: string
    capacidades: string
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: string
    mediosVerificacionEvaluacion: string
    recursos: string[]
    created_at: Date
    updated_at: Date
    _count: UnidadPlanCountAggregateOutputType | null
    _avg: UnidadPlanAvgAggregateOutputType | null
    _sum: UnidadPlanSumAggregateOutputType | null
    _min: UnidadPlanMinAggregateOutputType | null
    _max: UnidadPlanMaxAggregateOutputType | null
  }

  type GetUnidadPlanGroupByPayload<T extends UnidadPlanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UnidadPlanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UnidadPlanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UnidadPlanGroupByOutputType[P]>
            : GetScalarType<T[P], UnidadPlanGroupByOutputType[P]>
        }
      >
    >


  export type UnidadPlanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    planDeClasesId?: boolean
    periodo?: boolean
    contenido?: boolean
    capacidades?: boolean
    horasTeoricas?: boolean
    horasPracticas?: boolean
    estrategiasMetodologicas?: boolean
    mediosVerificacionEvaluacion?: boolean
    recursos?: boolean
    created_at?: boolean
    updated_at?: boolean
    PlanDeClases?: boolean | PlanDeClasesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["unidadPlan"]>

  export type UnidadPlanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    planDeClasesId?: boolean
    periodo?: boolean
    contenido?: boolean
    capacidades?: boolean
    horasTeoricas?: boolean
    horasPracticas?: boolean
    estrategiasMetodologicas?: boolean
    mediosVerificacionEvaluacion?: boolean
    recursos?: boolean
    created_at?: boolean
    updated_at?: boolean
    PlanDeClases?: boolean | PlanDeClasesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["unidadPlan"]>

  export type UnidadPlanSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    planDeClasesId?: boolean
    periodo?: boolean
    contenido?: boolean
    capacidades?: boolean
    horasTeoricas?: boolean
    horasPracticas?: boolean
    estrategiasMetodologicas?: boolean
    mediosVerificacionEvaluacion?: boolean
    recursos?: boolean
    created_at?: boolean
    updated_at?: boolean
    PlanDeClases?: boolean | PlanDeClasesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["unidadPlan"]>

  export type UnidadPlanSelectScalar = {
    id?: boolean
    planDeClasesId?: boolean
    periodo?: boolean
    contenido?: boolean
    capacidades?: boolean
    horasTeoricas?: boolean
    horasPracticas?: boolean
    estrategiasMetodologicas?: boolean
    mediosVerificacionEvaluacion?: boolean
    recursos?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type UnidadPlanOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "planDeClasesId" | "periodo" | "contenido" | "capacidades" | "horasTeoricas" | "horasPracticas" | "estrategiasMetodologicas" | "mediosVerificacionEvaluacion" | "recursos" | "created_at" | "updated_at", ExtArgs["result"]["unidadPlan"]>
  export type UnidadPlanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PlanDeClases?: boolean | PlanDeClasesDefaultArgs<ExtArgs>
  }
  export type UnidadPlanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PlanDeClases?: boolean | PlanDeClasesDefaultArgs<ExtArgs>
  }
  export type UnidadPlanIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    PlanDeClases?: boolean | PlanDeClasesDefaultArgs<ExtArgs>
  }

  export type $UnidadPlanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UnidadPlan"
    objects: {
      PlanDeClases: Prisma.$PlanDeClasesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      planDeClasesId: number
      periodo: string
      contenido: string
      capacidades: string
      horasTeoricas: number
      horasPracticas: number
      estrategiasMetodologicas: string
      mediosVerificacionEvaluacion: string
      recursos: string[]
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["unidadPlan"]>
    composites: {}
  }

  type UnidadPlanGetPayload<S extends boolean | null | undefined | UnidadPlanDefaultArgs> = $Result.GetResult<Prisma.$UnidadPlanPayload, S>

  type UnidadPlanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UnidadPlanFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UnidadPlanCountAggregateInputType | true
    }

  export interface UnidadPlanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UnidadPlan'], meta: { name: 'UnidadPlan' } }
    /**
     * Find zero or one UnidadPlan that matches the filter.
     * @param {UnidadPlanFindUniqueArgs} args - Arguments to find a UnidadPlan
     * @example
     * // Get one UnidadPlan
     * const unidadPlan = await prisma.unidadPlan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UnidadPlanFindUniqueArgs>(args: SelectSubset<T, UnidadPlanFindUniqueArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UnidadPlan that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UnidadPlanFindUniqueOrThrowArgs} args - Arguments to find a UnidadPlan
     * @example
     * // Get one UnidadPlan
     * const unidadPlan = await prisma.unidadPlan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UnidadPlanFindUniqueOrThrowArgs>(args: SelectSubset<T, UnidadPlanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UnidadPlan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadPlanFindFirstArgs} args - Arguments to find a UnidadPlan
     * @example
     * // Get one UnidadPlan
     * const unidadPlan = await prisma.unidadPlan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UnidadPlanFindFirstArgs>(args?: SelectSubset<T, UnidadPlanFindFirstArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UnidadPlan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadPlanFindFirstOrThrowArgs} args - Arguments to find a UnidadPlan
     * @example
     * // Get one UnidadPlan
     * const unidadPlan = await prisma.unidadPlan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UnidadPlanFindFirstOrThrowArgs>(args?: SelectSubset<T, UnidadPlanFindFirstOrThrowArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UnidadPlans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadPlanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UnidadPlans
     * const unidadPlans = await prisma.unidadPlan.findMany()
     * 
     * // Get first 10 UnidadPlans
     * const unidadPlans = await prisma.unidadPlan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const unidadPlanWithIdOnly = await prisma.unidadPlan.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UnidadPlanFindManyArgs>(args?: SelectSubset<T, UnidadPlanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UnidadPlan.
     * @param {UnidadPlanCreateArgs} args - Arguments to create a UnidadPlan.
     * @example
     * // Create one UnidadPlan
     * const UnidadPlan = await prisma.unidadPlan.create({
     *   data: {
     *     // ... data to create a UnidadPlan
     *   }
     * })
     * 
     */
    create<T extends UnidadPlanCreateArgs>(args: SelectSubset<T, UnidadPlanCreateArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UnidadPlans.
     * @param {UnidadPlanCreateManyArgs} args - Arguments to create many UnidadPlans.
     * @example
     * // Create many UnidadPlans
     * const unidadPlan = await prisma.unidadPlan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UnidadPlanCreateManyArgs>(args?: SelectSubset<T, UnidadPlanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UnidadPlans and returns the data saved in the database.
     * @param {UnidadPlanCreateManyAndReturnArgs} args - Arguments to create many UnidadPlans.
     * @example
     * // Create many UnidadPlans
     * const unidadPlan = await prisma.unidadPlan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UnidadPlans and only return the `id`
     * const unidadPlanWithIdOnly = await prisma.unidadPlan.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UnidadPlanCreateManyAndReturnArgs>(args?: SelectSubset<T, UnidadPlanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UnidadPlan.
     * @param {UnidadPlanDeleteArgs} args - Arguments to delete one UnidadPlan.
     * @example
     * // Delete one UnidadPlan
     * const UnidadPlan = await prisma.unidadPlan.delete({
     *   where: {
     *     // ... filter to delete one UnidadPlan
     *   }
     * })
     * 
     */
    delete<T extends UnidadPlanDeleteArgs>(args: SelectSubset<T, UnidadPlanDeleteArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UnidadPlan.
     * @param {UnidadPlanUpdateArgs} args - Arguments to update one UnidadPlan.
     * @example
     * // Update one UnidadPlan
     * const unidadPlan = await prisma.unidadPlan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UnidadPlanUpdateArgs>(args: SelectSubset<T, UnidadPlanUpdateArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UnidadPlans.
     * @param {UnidadPlanDeleteManyArgs} args - Arguments to filter UnidadPlans to delete.
     * @example
     * // Delete a few UnidadPlans
     * const { count } = await prisma.unidadPlan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UnidadPlanDeleteManyArgs>(args?: SelectSubset<T, UnidadPlanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UnidadPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadPlanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UnidadPlans
     * const unidadPlan = await prisma.unidadPlan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UnidadPlanUpdateManyArgs>(args: SelectSubset<T, UnidadPlanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UnidadPlans and returns the data updated in the database.
     * @param {UnidadPlanUpdateManyAndReturnArgs} args - Arguments to update many UnidadPlans.
     * @example
     * // Update many UnidadPlans
     * const unidadPlan = await prisma.unidadPlan.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UnidadPlans and only return the `id`
     * const unidadPlanWithIdOnly = await prisma.unidadPlan.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UnidadPlanUpdateManyAndReturnArgs>(args: SelectSubset<T, UnidadPlanUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UnidadPlan.
     * @param {UnidadPlanUpsertArgs} args - Arguments to update or create a UnidadPlan.
     * @example
     * // Update or create a UnidadPlan
     * const unidadPlan = await prisma.unidadPlan.upsert({
     *   create: {
     *     // ... data to create a UnidadPlan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UnidadPlan we want to update
     *   }
     * })
     */
    upsert<T extends UnidadPlanUpsertArgs>(args: SelectSubset<T, UnidadPlanUpsertArgs<ExtArgs>>): Prisma__UnidadPlanClient<$Result.GetResult<Prisma.$UnidadPlanPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UnidadPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadPlanCountArgs} args - Arguments to filter UnidadPlans to count.
     * @example
     * // Count the number of UnidadPlans
     * const count = await prisma.unidadPlan.count({
     *   where: {
     *     // ... the filter for the UnidadPlans we want to count
     *   }
     * })
    **/
    count<T extends UnidadPlanCountArgs>(
      args?: Subset<T, UnidadPlanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UnidadPlanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UnidadPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadPlanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UnidadPlanAggregateArgs>(args: Subset<T, UnidadPlanAggregateArgs>): Prisma.PrismaPromise<GetUnidadPlanAggregateType<T>>

    /**
     * Group by UnidadPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadPlanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UnidadPlanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UnidadPlanGroupByArgs['orderBy'] }
        : { orderBy?: UnidadPlanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UnidadPlanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUnidadPlanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UnidadPlan model
   */
  readonly fields: UnidadPlanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UnidadPlan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UnidadPlanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    PlanDeClases<T extends PlanDeClasesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PlanDeClasesDefaultArgs<ExtArgs>>): Prisma__PlanDeClasesClient<$Result.GetResult<Prisma.$PlanDeClasesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UnidadPlan model
   */
  interface UnidadPlanFieldRefs {
    readonly id: FieldRef<"UnidadPlan", 'Int'>
    readonly planDeClasesId: FieldRef<"UnidadPlan", 'Int'>
    readonly periodo: FieldRef<"UnidadPlan", 'String'>
    readonly contenido: FieldRef<"UnidadPlan", 'String'>
    readonly capacidades: FieldRef<"UnidadPlan", 'String'>
    readonly horasTeoricas: FieldRef<"UnidadPlan", 'Int'>
    readonly horasPracticas: FieldRef<"UnidadPlan", 'Int'>
    readonly estrategiasMetodologicas: FieldRef<"UnidadPlan", 'String'>
    readonly mediosVerificacionEvaluacion: FieldRef<"UnidadPlan", 'String'>
    readonly recursos: FieldRef<"UnidadPlan", 'String[]'>
    readonly created_at: FieldRef<"UnidadPlan", 'DateTime'>
    readonly updated_at: FieldRef<"UnidadPlan", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UnidadPlan findUnique
   */
  export type UnidadPlanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * Filter, which UnidadPlan to fetch.
     */
    where: UnidadPlanWhereUniqueInput
  }

  /**
   * UnidadPlan findUniqueOrThrow
   */
  export type UnidadPlanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * Filter, which UnidadPlan to fetch.
     */
    where: UnidadPlanWhereUniqueInput
  }

  /**
   * UnidadPlan findFirst
   */
  export type UnidadPlanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * Filter, which UnidadPlan to fetch.
     */
    where?: UnidadPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnidadPlans to fetch.
     */
    orderBy?: UnidadPlanOrderByWithRelationInput | UnidadPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UnidadPlans.
     */
    cursor?: UnidadPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnidadPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnidadPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UnidadPlans.
     */
    distinct?: UnidadPlanScalarFieldEnum | UnidadPlanScalarFieldEnum[]
  }

  /**
   * UnidadPlan findFirstOrThrow
   */
  export type UnidadPlanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * Filter, which UnidadPlan to fetch.
     */
    where?: UnidadPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnidadPlans to fetch.
     */
    orderBy?: UnidadPlanOrderByWithRelationInput | UnidadPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UnidadPlans.
     */
    cursor?: UnidadPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnidadPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnidadPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UnidadPlans.
     */
    distinct?: UnidadPlanScalarFieldEnum | UnidadPlanScalarFieldEnum[]
  }

  /**
   * UnidadPlan findMany
   */
  export type UnidadPlanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * Filter, which UnidadPlans to fetch.
     */
    where?: UnidadPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UnidadPlans to fetch.
     */
    orderBy?: UnidadPlanOrderByWithRelationInput | UnidadPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UnidadPlans.
     */
    cursor?: UnidadPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UnidadPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UnidadPlans.
     */
    skip?: number
    distinct?: UnidadPlanScalarFieldEnum | UnidadPlanScalarFieldEnum[]
  }

  /**
   * UnidadPlan create
   */
  export type UnidadPlanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * The data needed to create a UnidadPlan.
     */
    data: XOR<UnidadPlanCreateInput, UnidadPlanUncheckedCreateInput>
  }

  /**
   * UnidadPlan createMany
   */
  export type UnidadPlanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UnidadPlans.
     */
    data: UnidadPlanCreateManyInput | UnidadPlanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UnidadPlan createManyAndReturn
   */
  export type UnidadPlanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * The data used to create many UnidadPlans.
     */
    data: UnidadPlanCreateManyInput | UnidadPlanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UnidadPlan update
   */
  export type UnidadPlanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * The data needed to update a UnidadPlan.
     */
    data: XOR<UnidadPlanUpdateInput, UnidadPlanUncheckedUpdateInput>
    /**
     * Choose, which UnidadPlan to update.
     */
    where: UnidadPlanWhereUniqueInput
  }

  /**
   * UnidadPlan updateMany
   */
  export type UnidadPlanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UnidadPlans.
     */
    data: XOR<UnidadPlanUpdateManyMutationInput, UnidadPlanUncheckedUpdateManyInput>
    /**
     * Filter which UnidadPlans to update
     */
    where?: UnidadPlanWhereInput
    /**
     * Limit how many UnidadPlans to update.
     */
    limit?: number
  }

  /**
   * UnidadPlan updateManyAndReturn
   */
  export type UnidadPlanUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * The data used to update UnidadPlans.
     */
    data: XOR<UnidadPlanUpdateManyMutationInput, UnidadPlanUncheckedUpdateManyInput>
    /**
     * Filter which UnidadPlans to update
     */
    where?: UnidadPlanWhereInput
    /**
     * Limit how many UnidadPlans to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UnidadPlan upsert
   */
  export type UnidadPlanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * The filter to search for the UnidadPlan to update in case it exists.
     */
    where: UnidadPlanWhereUniqueInput
    /**
     * In case the UnidadPlan found by the `where` argument doesn't exist, create a new UnidadPlan with this data.
     */
    create: XOR<UnidadPlanCreateInput, UnidadPlanUncheckedCreateInput>
    /**
     * In case the UnidadPlan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UnidadPlanUpdateInput, UnidadPlanUncheckedUpdateInput>
  }

  /**
   * UnidadPlan delete
   */
  export type UnidadPlanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
    /**
     * Filter which UnidadPlan to delete.
     */
    where: UnidadPlanWhereUniqueInput
  }

  /**
   * UnidadPlan deleteMany
   */
  export type UnidadPlanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UnidadPlans to delete
     */
    where?: UnidadPlanWhereInput
    /**
     * Limit how many UnidadPlans to delete.
     */
    limit?: number
  }

  /**
   * UnidadPlan without action
   */
  export type UnidadPlanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadPlan
     */
    select?: UnidadPlanSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UnidadPlan
     */
    omit?: UnidadPlanOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnidadPlanInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ComposerScalarFieldEnum: {
    id: 'id',
    bio: 'bio',
    birth_day: 'birth_day',
    birth_month: 'birth_month',
    birth_year: 'birth_year',
    created_at: 'created_at',
    death_day: 'death_day',
    death_month: 'death_month',
    death_year: 'death_year',
    email: 'email',
    first_name: 'first_name',
    ip_address: 'ip_address',
    last_name: 'last_name',
    notable_works: 'notable_works',
    photo_url: 'photo_url',
    quality: 'quality',
    references: 'references',
    status: 'status',
    updated_at: 'updated_at',
    youtube_link: 'youtube_link',
    period: 'period',
    mainRole: 'mainRole',
    completeness_score: 'completeness_score',
    rejection_reason: 'rejection_reason',
    is_student_contribution: 'is_student_contribution',
    student_first_name: 'student_first_name',
    student_last_name: 'student_last_name',
    suggestion_reason: 'suggestion_reason'
  };

  export type ComposerScalarFieldEnum = (typeof ComposerScalarFieldEnum)[keyof typeof ComposerScalarFieldEnum]


  export const CommentScalarFieldEnum: {
    id: 'id',
    text: 'text',
    composerId: 'composerId',
    created_at: 'created_at',
    ip_address: 'ip_address',
    name: 'name'
  };

  export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


  export const RatingScalarFieldEnum: {
    id: 'id',
    rating_value: 'rating_value',
    ip_address: 'ip_address',
    created_at: 'created_at',
    composerId: 'composerId'
  };

  export type RatingScalarFieldEnum = (typeof RatingScalarFieldEnum)[keyof typeof RatingScalarFieldEnum]


  export const OtpScalarFieldEnum: {
    id: 'id',
    email: 'email',
    code: 'code',
    expiresAt: 'expiresAt'
  };

  export type OtpScalarFieldEnum = (typeof OtpScalarFieldEnum)[keyof typeof OtpScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const AlumnoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    apellido: 'apellido',
    email: 'email',
    telefono: 'telefono',
    direccion: 'direccion',
    instrumento: 'instrumento',
    detalles_adicionales: 'detalles_adicionales',
    created_at: 'created_at',
    updated_at: 'updated_at',
    nombre_tutor: 'nombre_tutor',
    telefono_tutor: 'telefono_tutor',
    vive_con_padres: 'vive_con_padres'
  };

  export type AlumnoScalarFieldEnum = (typeof AlumnoScalarFieldEnum)[keyof typeof AlumnoScalarFieldEnum]


  export const AsistenciaScalarFieldEnum: {
    id: 'id',
    presente: 'presente',
    created_at: 'created_at',
    alumnoId: 'alumnoId',
    diaClaseId: 'diaClaseId'
  };

  export type AsistenciaScalarFieldEnum = (typeof AsistenciaScalarFieldEnum)[keyof typeof AsistenciaScalarFieldEnum]


  export const CalificacionEvaluacionScalarFieldEnum: {
    id: 'id',
    puntos: 'puntos',
    created_at: 'created_at',
    alumnoId: 'alumnoId',
    evaluacionAsignacionId: 'evaluacionAsignacionId'
  };

  export type CalificacionEvaluacionScalarFieldEnum = (typeof CalificacionEvaluacionScalarFieldEnum)[keyof typeof CalificacionEvaluacionScalarFieldEnum]


  export const CatedraScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    anio: 'anio',
    institucion: 'institucion',
    turno: 'turno',
    aula: 'aula',
    dias: 'dias',
    created_at: 'created_at',
    updated_at: 'updated_at',
    docenteId: 'docenteId',
    modalidad_pago: 'modalidad_pago'
  };

  export type CatedraScalarFieldEnum = (typeof CatedraScalarFieldEnum)[keyof typeof CatedraScalarFieldEnum]


  export const CatedraAlumnoScalarFieldEnum: {
    catedraId: 'catedraId',
    alumnoId: 'alumnoId',
    assignedAt: 'assignedAt',
    assignedBy: 'assignedBy',
    composerId: 'composerId',
    id: 'id',
    dia_cobro: 'dia_cobro',
    fecha_inscripcion: 'fecha_inscripcion'
  };

  export type CatedraAlumnoScalarFieldEnum = (typeof CatedraAlumnoScalarFieldEnum)[keyof typeof CatedraAlumnoScalarFieldEnum]


  export const CatedraDiaHorarioScalarFieldEnum: {
    id: 'id',
    dia_semana: 'dia_semana',
    hora_inicio: 'hora_inicio',
    hora_fin: 'hora_fin',
    catedraId: 'catedraId',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CatedraDiaHorarioScalarFieldEnum = (typeof CatedraDiaHorarioScalarFieldEnum)[keyof typeof CatedraDiaHorarioScalarFieldEnum]


  export const ComentarioPublicacionScalarFieldEnum: {
    id: 'id',
    texto: 'texto',
    publicacionId: 'publicacionId',
    autorAlumnoId: 'autorAlumnoId',
    autorDocenteId: 'autorDocenteId',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ComentarioPublicacionScalarFieldEnum = (typeof ComentarioPublicacionScalarFieldEnum)[keyof typeof ComentarioPublicacionScalarFieldEnum]


  export const CostoCatedraScalarFieldEnum: {
    id: 'id',
    catedraId: 'catedraId',
    monto_matricula: 'monto_matricula',
    monto_cuota: 'monto_cuota',
    es_gratuita: 'es_gratuita',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CostoCatedraScalarFieldEnum = (typeof CostoCatedraScalarFieldEnum)[keyof typeof CostoCatedraScalarFieldEnum]


  export const DiaClaseScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    dia_semana: 'dia_semana',
    created_at: 'created_at',
    updated_at: 'updated_at',
    catedraId: 'catedraId'
  };

  export type DiaClaseScalarFieldEnum = (typeof DiaClaseScalarFieldEnum)[keyof typeof DiaClaseScalarFieldEnum]


  export const DocenteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    apellido: 'apellido',
    email: 'email',
    otpSecret: 'otpSecret',
    otpEnabled: 'otpEnabled',
    created_at: 'created_at',
    updated_at: 'updated_at',
    direccion: 'direccion',
    telefono: 'telefono'
  };

  export type DocenteScalarFieldEnum = (typeof DocenteScalarFieldEnum)[keyof typeof DocenteScalarFieldEnum]


  export const EditSuggestionScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    birth_year: 'birth_year',
    birth_month: 'birth_month',
    birth_day: 'birth_day',
    death_year: 'death_year',
    death_month: 'death_month',
    death_day: 'death_day',
    bio: 'bio',
    notable_works: 'notable_works',
    period: 'period',
    references: 'references',
    youtube_link: 'youtube_link',
    mainRole: 'mainRole',
    reason: 'reason',
    status: 'status',
    suggester_email: 'suggester_email',
    suggester_ip: 'suggester_ip',
    created_at: 'created_at',
    updated_at: 'updated_at',
    composerId: 'composerId',
    is_student_contribution: 'is_student_contribution',
    student_first_name: 'student_first_name',
    student_last_name: 'student_last_name',
    points: 'points'
  };

  export type EditSuggestionScalarFieldEnum = (typeof EditSuggestionScalarFieldEnum)[keyof typeof EditSuggestionScalarFieldEnum]


  export const EvaluacionScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    created_at: 'created_at',
    catedraId: 'catedraId',
    fecha_limite: 'fecha_limite',
    isMaster: 'isMaster'
  };

  export type EvaluacionScalarFieldEnum = (typeof EvaluacionScalarFieldEnum)[keyof typeof EvaluacionScalarFieldEnum]


  export const EvaluacionAsignacionScalarFieldEnum: {
    id: 'id',
    estado: 'estado',
    fecha_entrega: 'fecha_entrega',
    created_at: 'created_at',
    updated_at: 'updated_at',
    alumnoId: 'alumnoId',
    evaluacionId: 'evaluacionId',
    publicacionId: 'publicacionId'
  };

  export type EvaluacionAsignacionScalarFieldEnum = (typeof EvaluacionAsignacionScalarFieldEnum)[keyof typeof EvaluacionAsignacionScalarFieldEnum]


  export const OpcionScalarFieldEnum: {
    id: 'id',
    texto: 'texto',
    es_correcta: 'es_correcta',
    preguntaId: 'preguntaId'
  };

  export type OpcionScalarFieldEnum = (typeof OpcionScalarFieldEnum)[keyof typeof OpcionScalarFieldEnum]


  export const PagoScalarFieldEnum: {
    id: 'id',
    catedraAlumnoId: 'catedraAlumnoId',
    fecha_pago: 'fecha_pago',
    monto_pagado: 'monto_pagado',
    tipo_pago: 'tipo_pago',
    periodo_cubierto: 'periodo_cubierto',
    confirmadoPorId: 'confirmadoPorId',
    created_at: 'created_at'
  };

  export type PagoScalarFieldEnum = (typeof PagoScalarFieldEnum)[keyof typeof PagoScalarFieldEnum]


  export const PlanDeClasesScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    tipoOrganizacion: 'tipoOrganizacion',
    docenteId: 'docenteId',
    catedraId: 'catedraId',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PlanDeClasesScalarFieldEnum = (typeof PlanDeClasesScalarFieldEnum)[keyof typeof PlanDeClasesScalarFieldEnum]


  export const PreguntaScalarFieldEnum: {
    id: 'id',
    texto: 'texto',
    evaluacionId: 'evaluacionId'
  };

  export type PreguntaScalarFieldEnum = (typeof PreguntaScalarFieldEnum)[keyof typeof PreguntaScalarFieldEnum]


  export const PublicacionScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    contenido: 'contenido',
    tipo: 'tipo',
    catedraId: 'catedraId',
    autorAlumnoId: 'autorAlumnoId',
    autorDocenteId: 'autorDocenteId',
    created_at: 'created_at',
    updated_at: 'updated_at',
    tareaMaestraId: 'tareaMaestraId',
    visibleToStudents: 'visibleToStudents',
    evaluacionAsignacionId: 'evaluacionAsignacionId',
    evaluacionMaestraId: 'evaluacionMaestraId'
  };

  export type PublicacionScalarFieldEnum = (typeof PublicacionScalarFieldEnum)[keyof typeof PublicacionScalarFieldEnum]


  export const PublicacionInteraccionScalarFieldEnum: {
    id: 'id',
    publicacionId: 'publicacionId',
    alumnoId: 'alumnoId',
    docenteId: 'docenteId',
    tipo: 'tipo',
    created_at: 'created_at'
  };

  export type PublicacionInteraccionScalarFieldEnum = (typeof PublicacionInteraccionScalarFieldEnum)[keyof typeof PublicacionInteraccionScalarFieldEnum]


  export const PuntuacionScalarFieldEnum: {
    id: 'id',
    puntos: 'puntos',
    motivo: 'motivo',
    created_at: 'created_at',
    alumnoId: 'alumnoId',
    catedraId: 'catedraId',
    tipo: 'tipo'
  };

  export type PuntuacionScalarFieldEnum = (typeof PuntuacionScalarFieldEnum)[keyof typeof PuntuacionScalarFieldEnum]


  export const RespuestaAlumnoScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    alumnoId: 'alumnoId',
    preguntaId: 'preguntaId',
    opcionElegidaId: 'opcionElegidaId'
  };

  export type RespuestaAlumnoScalarFieldEnum = (typeof RespuestaAlumnoScalarFieldEnum)[keyof typeof RespuestaAlumnoScalarFieldEnum]


  export const TareaAsignacionScalarFieldEnum: {
    id: 'id',
    estado: 'estado',
    submission_path: 'submission_path',
    submission_date: 'submission_date',
    puntos_obtenidos: 'puntos_obtenidos',
    created_at: 'created_at',
    updated_at: 'updated_at',
    alumnoId: 'alumnoId',
    tareaMaestraId: 'tareaMaestraId'
  };

  export type TareaAsignacionScalarFieldEnum = (typeof TareaAsignacionScalarFieldEnum)[keyof typeof TareaAsignacionScalarFieldEnum]


  export const TareaMaestraScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descripcion: 'descripcion',
    fecha_entrega: 'fecha_entrega',
    puntos_posibles: 'puntos_posibles',
    recursos: 'recursos',
    multimedia_path: 'multimedia_path',
    created_at: 'created_at',
    updated_at: 'updated_at',
    catedraId: 'catedraId',
    publicacionId: 'publicacionId'
  };

  export type TareaMaestraScalarFieldEnum = (typeof TareaMaestraScalarFieldEnum)[keyof typeof TareaMaestraScalarFieldEnum]


  export const UnidadPlanScalarFieldEnum: {
    id: 'id',
    planDeClasesId: 'planDeClasesId',
    periodo: 'periodo',
    contenido: 'contenido',
    capacidades: 'capacidades',
    horasTeoricas: 'horasTeoricas',
    horasPracticas: 'horasPracticas',
    estrategiasMetodologicas: 'estrategiasMetodologicas',
    mediosVerificacionEvaluacion: 'mediosVerificacionEvaluacion',
    recursos: 'recursos',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UnidadPlanScalarFieldEnum = (typeof UnidadPlanScalarFieldEnum)[keyof typeof UnidadPlanScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'RoleType[]'
   */
  export type ListEnumRoleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoleType[]'>
    


  /**
   * Reference to a field of type 'RoleType'
   */
  export type EnumRoleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RoleType'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'ModalidadPago'
   */
  export type EnumModalidadPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ModalidadPago'>
    


  /**
   * Reference to a field of type 'ModalidadPago[]'
   */
  export type ListEnumModalidadPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ModalidadPago[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'EstadoEvaluacionAsignacion'
   */
  export type EnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoEvaluacionAsignacion'>
    


  /**
   * Reference to a field of type 'EstadoEvaluacionAsignacion[]'
   */
  export type ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoEvaluacionAsignacion[]'>
    


  /**
   * Reference to a field of type 'TipoPago'
   */
  export type EnumTipoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPago'>
    


  /**
   * Reference to a field of type 'TipoPago[]'
   */
  export type ListEnumTipoPagoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPago[]'>
    


  /**
   * Reference to a field of type 'TipoOrganizacionPlan'
   */
  export type EnumTipoOrganizacionPlanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoOrganizacionPlan'>
    


  /**
   * Reference to a field of type 'TipoOrganizacionPlan[]'
   */
  export type ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoOrganizacionPlan[]'>
    


  /**
   * Reference to a field of type 'TipoPublicacion'
   */
  export type EnumTipoPublicacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPublicacion'>
    


  /**
   * Reference to a field of type 'TipoPublicacion[]'
   */
  export type ListEnumTipoPublicacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPublicacion[]'>
    


  /**
   * Reference to a field of type 'TipoInteraccionPublicacion'
   */
  export type EnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoInteraccionPublicacion'>
    


  /**
   * Reference to a field of type 'TipoInteraccionPublicacion[]'
   */
  export type ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoInteraccionPublicacion[]'>
    


  /**
   * Reference to a field of type 'TipoPuntuacion'
   */
  export type EnumTipoPuntuacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPuntuacion'>
    


  /**
   * Reference to a field of type 'TipoPuntuacion[]'
   */
  export type ListEnumTipoPuntuacionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPuntuacion[]'>
    


  /**
   * Reference to a field of type 'EstadoTarea'
   */
  export type EnumEstadoTareaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTarea'>
    


  /**
   * Reference to a field of type 'EstadoTarea[]'
   */
  export type ListEnumEstadoTareaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EstadoTarea[]'>
    
  /**
   * Deep Input Types
   */


  export type ComposerWhereInput = {
    AND?: ComposerWhereInput | ComposerWhereInput[]
    OR?: ComposerWhereInput[]
    NOT?: ComposerWhereInput | ComposerWhereInput[]
    id?: IntFilter<"Composer"> | number
    bio?: StringFilter<"Composer"> | string
    birth_day?: IntNullableFilter<"Composer"> | number | null
    birth_month?: IntNullableFilter<"Composer"> | number | null
    birth_year?: IntFilter<"Composer"> | number
    created_at?: DateTimeFilter<"Composer"> | Date | string
    death_day?: IntNullableFilter<"Composer"> | number | null
    death_month?: IntNullableFilter<"Composer"> | number | null
    death_year?: IntNullableFilter<"Composer"> | number | null
    email?: StringFilter<"Composer"> | string
    first_name?: StringFilter<"Composer"> | string
    ip_address?: StringNullableFilter<"Composer"> | string | null
    last_name?: StringFilter<"Composer"> | string
    notable_works?: StringFilter<"Composer"> | string
    photo_url?: StringNullableFilter<"Composer"> | string | null
    quality?: StringNullableFilter<"Composer"> | string | null
    references?: StringNullableFilter<"Composer"> | string | null
    status?: StringFilter<"Composer"> | string
    updated_at?: DateTimeFilter<"Composer"> | Date | string
    youtube_link?: StringNullableFilter<"Composer"> | string | null
    period?: StringFilter<"Composer"> | string
    mainRole?: EnumRoleTypeNullableListFilter<"Composer">
    completeness_score?: IntNullableFilter<"Composer"> | number | null
    rejection_reason?: StringNullableFilter<"Composer"> | string | null
    is_student_contribution?: BoolFilter<"Composer"> | boolean
    student_first_name?: StringNullableFilter<"Composer"> | string | null
    student_last_name?: StringNullableFilter<"Composer"> | string | null
    suggestion_reason?: StringNullableFilter<"Composer"> | string | null
    CatedraAlumno?: CatedraAlumnoListRelationFilter
    comments?: CommentListRelationFilter
    EditSuggestion?: EditSuggestionListRelationFilter
    ratings?: RatingListRelationFilter
  }

  export type ComposerOrderByWithRelationInput = {
    id?: SortOrder
    bio?: SortOrder
    birth_day?: SortOrderInput | SortOrder
    birth_month?: SortOrderInput | SortOrder
    birth_year?: SortOrder
    created_at?: SortOrder
    death_day?: SortOrderInput | SortOrder
    death_month?: SortOrderInput | SortOrder
    death_year?: SortOrderInput | SortOrder
    email?: SortOrder
    first_name?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    last_name?: SortOrder
    notable_works?: SortOrder
    photo_url?: SortOrderInput | SortOrder
    quality?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    youtube_link?: SortOrderInput | SortOrder
    period?: SortOrder
    mainRole?: SortOrder
    completeness_score?: SortOrderInput | SortOrder
    rejection_reason?: SortOrderInput | SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrderInput | SortOrder
    student_last_name?: SortOrderInput | SortOrder
    suggestion_reason?: SortOrderInput | SortOrder
    CatedraAlumno?: CatedraAlumnoOrderByRelationAggregateInput
    comments?: CommentOrderByRelationAggregateInput
    EditSuggestion?: EditSuggestionOrderByRelationAggregateInput
    ratings?: RatingOrderByRelationAggregateInput
  }

  export type ComposerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ComposerWhereInput | ComposerWhereInput[]
    OR?: ComposerWhereInput[]
    NOT?: ComposerWhereInput | ComposerWhereInput[]
    bio?: StringFilter<"Composer"> | string
    birth_day?: IntNullableFilter<"Composer"> | number | null
    birth_month?: IntNullableFilter<"Composer"> | number | null
    birth_year?: IntFilter<"Composer"> | number
    created_at?: DateTimeFilter<"Composer"> | Date | string
    death_day?: IntNullableFilter<"Composer"> | number | null
    death_month?: IntNullableFilter<"Composer"> | number | null
    death_year?: IntNullableFilter<"Composer"> | number | null
    email?: StringFilter<"Composer"> | string
    first_name?: StringFilter<"Composer"> | string
    ip_address?: StringNullableFilter<"Composer"> | string | null
    last_name?: StringFilter<"Composer"> | string
    notable_works?: StringFilter<"Composer"> | string
    photo_url?: StringNullableFilter<"Composer"> | string | null
    quality?: StringNullableFilter<"Composer"> | string | null
    references?: StringNullableFilter<"Composer"> | string | null
    status?: StringFilter<"Composer"> | string
    updated_at?: DateTimeFilter<"Composer"> | Date | string
    youtube_link?: StringNullableFilter<"Composer"> | string | null
    period?: StringFilter<"Composer"> | string
    mainRole?: EnumRoleTypeNullableListFilter<"Composer">
    completeness_score?: IntNullableFilter<"Composer"> | number | null
    rejection_reason?: StringNullableFilter<"Composer"> | string | null
    is_student_contribution?: BoolFilter<"Composer"> | boolean
    student_first_name?: StringNullableFilter<"Composer"> | string | null
    student_last_name?: StringNullableFilter<"Composer"> | string | null
    suggestion_reason?: StringNullableFilter<"Composer"> | string | null
    CatedraAlumno?: CatedraAlumnoListRelationFilter
    comments?: CommentListRelationFilter
    EditSuggestion?: EditSuggestionListRelationFilter
    ratings?: RatingListRelationFilter
  }, "id">

  export type ComposerOrderByWithAggregationInput = {
    id?: SortOrder
    bio?: SortOrder
    birth_day?: SortOrderInput | SortOrder
    birth_month?: SortOrderInput | SortOrder
    birth_year?: SortOrder
    created_at?: SortOrder
    death_day?: SortOrderInput | SortOrder
    death_month?: SortOrderInput | SortOrder
    death_year?: SortOrderInput | SortOrder
    email?: SortOrder
    first_name?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    last_name?: SortOrder
    notable_works?: SortOrder
    photo_url?: SortOrderInput | SortOrder
    quality?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    youtube_link?: SortOrderInput | SortOrder
    period?: SortOrder
    mainRole?: SortOrder
    completeness_score?: SortOrderInput | SortOrder
    rejection_reason?: SortOrderInput | SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrderInput | SortOrder
    student_last_name?: SortOrderInput | SortOrder
    suggestion_reason?: SortOrderInput | SortOrder
    _count?: ComposerCountOrderByAggregateInput
    _avg?: ComposerAvgOrderByAggregateInput
    _max?: ComposerMaxOrderByAggregateInput
    _min?: ComposerMinOrderByAggregateInput
    _sum?: ComposerSumOrderByAggregateInput
  }

  export type ComposerScalarWhereWithAggregatesInput = {
    AND?: ComposerScalarWhereWithAggregatesInput | ComposerScalarWhereWithAggregatesInput[]
    OR?: ComposerScalarWhereWithAggregatesInput[]
    NOT?: ComposerScalarWhereWithAggregatesInput | ComposerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Composer"> | number
    bio?: StringWithAggregatesFilter<"Composer"> | string
    birth_day?: IntNullableWithAggregatesFilter<"Composer"> | number | null
    birth_month?: IntNullableWithAggregatesFilter<"Composer"> | number | null
    birth_year?: IntWithAggregatesFilter<"Composer"> | number
    created_at?: DateTimeWithAggregatesFilter<"Composer"> | Date | string
    death_day?: IntNullableWithAggregatesFilter<"Composer"> | number | null
    death_month?: IntNullableWithAggregatesFilter<"Composer"> | number | null
    death_year?: IntNullableWithAggregatesFilter<"Composer"> | number | null
    email?: StringWithAggregatesFilter<"Composer"> | string
    first_name?: StringWithAggregatesFilter<"Composer"> | string
    ip_address?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    last_name?: StringWithAggregatesFilter<"Composer"> | string
    notable_works?: StringWithAggregatesFilter<"Composer"> | string
    photo_url?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    quality?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    references?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    status?: StringWithAggregatesFilter<"Composer"> | string
    updated_at?: DateTimeWithAggregatesFilter<"Composer"> | Date | string
    youtube_link?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    period?: StringWithAggregatesFilter<"Composer"> | string
    mainRole?: EnumRoleTypeNullableListFilter<"Composer">
    completeness_score?: IntNullableWithAggregatesFilter<"Composer"> | number | null
    rejection_reason?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    is_student_contribution?: BoolWithAggregatesFilter<"Composer"> | boolean
    student_first_name?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    student_last_name?: StringNullableWithAggregatesFilter<"Composer"> | string | null
    suggestion_reason?: StringNullableWithAggregatesFilter<"Composer"> | string | null
  }

  export type CommentWhereInput = {
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    id?: IntFilter<"Comment"> | number
    text?: StringFilter<"Comment"> | string
    composerId?: IntFilter<"Comment"> | number
    created_at?: DateTimeFilter<"Comment"> | Date | string
    ip_address?: StringNullableFilter<"Comment"> | string | null
    name?: StringFilter<"Comment"> | string
    composer?: XOR<ComposerScalarRelationFilter, ComposerWhereInput>
  }

  export type CommentOrderByWithRelationInput = {
    id?: SortOrder
    text?: SortOrder
    composerId?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    name?: SortOrder
    composer?: ComposerOrderByWithRelationInput
  }

  export type CommentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    text?: StringFilter<"Comment"> | string
    composerId?: IntFilter<"Comment"> | number
    created_at?: DateTimeFilter<"Comment"> | Date | string
    ip_address?: StringNullableFilter<"Comment"> | string | null
    name?: StringFilter<"Comment"> | string
    composer?: XOR<ComposerScalarRelationFilter, ComposerWhereInput>
  }, "id">

  export type CommentOrderByWithAggregationInput = {
    id?: SortOrder
    text?: SortOrder
    composerId?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    name?: SortOrder
    _count?: CommentCountOrderByAggregateInput
    _avg?: CommentAvgOrderByAggregateInput
    _max?: CommentMaxOrderByAggregateInput
    _min?: CommentMinOrderByAggregateInput
    _sum?: CommentSumOrderByAggregateInput
  }

  export type CommentScalarWhereWithAggregatesInput = {
    AND?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    OR?: CommentScalarWhereWithAggregatesInput[]
    NOT?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Comment"> | number
    text?: StringWithAggregatesFilter<"Comment"> | string
    composerId?: IntWithAggregatesFilter<"Comment"> | number
    created_at?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    ip_address?: StringNullableWithAggregatesFilter<"Comment"> | string | null
    name?: StringWithAggregatesFilter<"Comment"> | string
  }

  export type RatingWhereInput = {
    AND?: RatingWhereInput | RatingWhereInput[]
    OR?: RatingWhereInput[]
    NOT?: RatingWhereInput | RatingWhereInput[]
    id?: IntFilter<"Rating"> | number
    rating_value?: IntFilter<"Rating"> | number
    ip_address?: StringNullableFilter<"Rating"> | string | null
    created_at?: DateTimeFilter<"Rating"> | Date | string
    composerId?: IntFilter<"Rating"> | number
    composer?: XOR<ComposerScalarRelationFilter, ComposerWhereInput>
  }

  export type RatingOrderByWithRelationInput = {
    id?: SortOrder
    rating_value?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    created_at?: SortOrder
    composerId?: SortOrder
    composer?: ComposerOrderByWithRelationInput
  }

  export type RatingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    composerId_ip_address?: RatingComposerIdIp_addressCompoundUniqueInput
    AND?: RatingWhereInput | RatingWhereInput[]
    OR?: RatingWhereInput[]
    NOT?: RatingWhereInput | RatingWhereInput[]
    rating_value?: IntFilter<"Rating"> | number
    ip_address?: StringNullableFilter<"Rating"> | string | null
    created_at?: DateTimeFilter<"Rating"> | Date | string
    composerId?: IntFilter<"Rating"> | number
    composer?: XOR<ComposerScalarRelationFilter, ComposerWhereInput>
  }, "id" | "composerId_ip_address">

  export type RatingOrderByWithAggregationInput = {
    id?: SortOrder
    rating_value?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    created_at?: SortOrder
    composerId?: SortOrder
    _count?: RatingCountOrderByAggregateInput
    _avg?: RatingAvgOrderByAggregateInput
    _max?: RatingMaxOrderByAggregateInput
    _min?: RatingMinOrderByAggregateInput
    _sum?: RatingSumOrderByAggregateInput
  }

  export type RatingScalarWhereWithAggregatesInput = {
    AND?: RatingScalarWhereWithAggregatesInput | RatingScalarWhereWithAggregatesInput[]
    OR?: RatingScalarWhereWithAggregatesInput[]
    NOT?: RatingScalarWhereWithAggregatesInput | RatingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Rating"> | number
    rating_value?: IntWithAggregatesFilter<"Rating"> | number
    ip_address?: StringNullableWithAggregatesFilter<"Rating"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Rating"> | Date | string
    composerId?: IntWithAggregatesFilter<"Rating"> | number
  }

  export type OtpWhereInput = {
    AND?: OtpWhereInput | OtpWhereInput[]
    OR?: OtpWhereInput[]
    NOT?: OtpWhereInput | OtpWhereInput[]
    id?: IntFilter<"Otp"> | number
    email?: StringFilter<"Otp"> | string
    code?: StringFilter<"Otp"> | string
    expiresAt?: DateTimeFilter<"Otp"> | Date | string
  }

  export type OtpOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    expiresAt?: SortOrder
  }

  export type OtpWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: OtpWhereInput | OtpWhereInput[]
    OR?: OtpWhereInput[]
    NOT?: OtpWhereInput | OtpWhereInput[]
    code?: StringFilter<"Otp"> | string
    expiresAt?: DateTimeFilter<"Otp"> | Date | string
  }, "id" | "email">

  export type OtpOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    expiresAt?: SortOrder
    _count?: OtpCountOrderByAggregateInput
    _avg?: OtpAvgOrderByAggregateInput
    _max?: OtpMaxOrderByAggregateInput
    _min?: OtpMinOrderByAggregateInput
    _sum?: OtpSumOrderByAggregateInput
  }

  export type OtpScalarWhereWithAggregatesInput = {
    AND?: OtpScalarWhereWithAggregatesInput | OtpScalarWhereWithAggregatesInput[]
    OR?: OtpScalarWhereWithAggregatesInput[]
    NOT?: OtpScalarWhereWithAggregatesInput | OtpScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Otp"> | number
    email?: StringWithAggregatesFilter<"Otp"> | string
    code?: StringWithAggregatesFilter<"Otp"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Otp"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
  }, "id" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    username?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
  }

  export type AlumnoWhereInput = {
    AND?: AlumnoWhereInput | AlumnoWhereInput[]
    OR?: AlumnoWhereInput[]
    NOT?: AlumnoWhereInput | AlumnoWhereInput[]
    id?: IntFilter<"Alumno"> | number
    nombre?: StringFilter<"Alumno"> | string
    apellido?: StringFilter<"Alumno"> | string
    email?: StringFilter<"Alumno"> | string
    telefono?: StringNullableFilter<"Alumno"> | string | null
    direccion?: StringNullableFilter<"Alumno"> | string | null
    instrumento?: StringNullableFilter<"Alumno"> | string | null
    detalles_adicionales?: StringNullableFilter<"Alumno"> | string | null
    created_at?: DateTimeFilter<"Alumno"> | Date | string
    updated_at?: DateTimeFilter<"Alumno"> | Date | string
    nombre_tutor?: StringNullableFilter<"Alumno"> | string | null
    telefono_tutor?: StringNullableFilter<"Alumno"> | string | null
    vive_con_padres?: BoolNullableFilter<"Alumno"> | boolean | null
    Asistencia?: AsistenciaListRelationFilter
    CalificacionEvaluacion?: CalificacionEvaluacionListRelationFilter
    CatedraAlumno?: CatedraAlumnoListRelationFilter
    ComentarioPublicacion?: ComentarioPublicacionListRelationFilter
    EvaluacionAsignacion?: EvaluacionAsignacionListRelationFilter
    Publicacion?: PublicacionListRelationFilter
    PublicacionInteraccion?: PublicacionInteraccionListRelationFilter
    Puntuacion?: PuntuacionListRelationFilter
    RespuestaAlumno?: RespuestaAlumnoListRelationFilter
    TareaAsignacion?: TareaAsignacionListRelationFilter
  }

  export type AlumnoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    instrumento?: SortOrderInput | SortOrder
    detalles_adicionales?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    nombre_tutor?: SortOrderInput | SortOrder
    telefono_tutor?: SortOrderInput | SortOrder
    vive_con_padres?: SortOrderInput | SortOrder
    Asistencia?: AsistenciaOrderByRelationAggregateInput
    CalificacionEvaluacion?: CalificacionEvaluacionOrderByRelationAggregateInput
    CatedraAlumno?: CatedraAlumnoOrderByRelationAggregateInput
    ComentarioPublicacion?: ComentarioPublicacionOrderByRelationAggregateInput
    EvaluacionAsignacion?: EvaluacionAsignacionOrderByRelationAggregateInput
    Publicacion?: PublicacionOrderByRelationAggregateInput
    PublicacionInteraccion?: PublicacionInteraccionOrderByRelationAggregateInput
    Puntuacion?: PuntuacionOrderByRelationAggregateInput
    RespuestaAlumno?: RespuestaAlumnoOrderByRelationAggregateInput
    TareaAsignacion?: TareaAsignacionOrderByRelationAggregateInput
  }

  export type AlumnoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: AlumnoWhereInput | AlumnoWhereInput[]
    OR?: AlumnoWhereInput[]
    NOT?: AlumnoWhereInput | AlumnoWhereInput[]
    nombre?: StringFilter<"Alumno"> | string
    apellido?: StringFilter<"Alumno"> | string
    telefono?: StringNullableFilter<"Alumno"> | string | null
    direccion?: StringNullableFilter<"Alumno"> | string | null
    instrumento?: StringNullableFilter<"Alumno"> | string | null
    detalles_adicionales?: StringNullableFilter<"Alumno"> | string | null
    created_at?: DateTimeFilter<"Alumno"> | Date | string
    updated_at?: DateTimeFilter<"Alumno"> | Date | string
    nombre_tutor?: StringNullableFilter<"Alumno"> | string | null
    telefono_tutor?: StringNullableFilter<"Alumno"> | string | null
    vive_con_padres?: BoolNullableFilter<"Alumno"> | boolean | null
    Asistencia?: AsistenciaListRelationFilter
    CalificacionEvaluacion?: CalificacionEvaluacionListRelationFilter
    CatedraAlumno?: CatedraAlumnoListRelationFilter
    ComentarioPublicacion?: ComentarioPublicacionListRelationFilter
    EvaluacionAsignacion?: EvaluacionAsignacionListRelationFilter
    Publicacion?: PublicacionListRelationFilter
    PublicacionInteraccion?: PublicacionInteraccionListRelationFilter
    Puntuacion?: PuntuacionListRelationFilter
    RespuestaAlumno?: RespuestaAlumnoListRelationFilter
    TareaAsignacion?: TareaAsignacionListRelationFilter
  }, "id" | "email">

  export type AlumnoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    telefono?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    instrumento?: SortOrderInput | SortOrder
    detalles_adicionales?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    nombre_tutor?: SortOrderInput | SortOrder
    telefono_tutor?: SortOrderInput | SortOrder
    vive_con_padres?: SortOrderInput | SortOrder
    _count?: AlumnoCountOrderByAggregateInput
    _avg?: AlumnoAvgOrderByAggregateInput
    _max?: AlumnoMaxOrderByAggregateInput
    _min?: AlumnoMinOrderByAggregateInput
    _sum?: AlumnoSumOrderByAggregateInput
  }

  export type AlumnoScalarWhereWithAggregatesInput = {
    AND?: AlumnoScalarWhereWithAggregatesInput | AlumnoScalarWhereWithAggregatesInput[]
    OR?: AlumnoScalarWhereWithAggregatesInput[]
    NOT?: AlumnoScalarWhereWithAggregatesInput | AlumnoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Alumno"> | number
    nombre?: StringWithAggregatesFilter<"Alumno"> | string
    apellido?: StringWithAggregatesFilter<"Alumno"> | string
    email?: StringWithAggregatesFilter<"Alumno"> | string
    telefono?: StringNullableWithAggregatesFilter<"Alumno"> | string | null
    direccion?: StringNullableWithAggregatesFilter<"Alumno"> | string | null
    instrumento?: StringNullableWithAggregatesFilter<"Alumno"> | string | null
    detalles_adicionales?: StringNullableWithAggregatesFilter<"Alumno"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Alumno"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Alumno"> | Date | string
    nombre_tutor?: StringNullableWithAggregatesFilter<"Alumno"> | string | null
    telefono_tutor?: StringNullableWithAggregatesFilter<"Alumno"> | string | null
    vive_con_padres?: BoolNullableWithAggregatesFilter<"Alumno"> | boolean | null
  }

  export type AsistenciaWhereInput = {
    AND?: AsistenciaWhereInput | AsistenciaWhereInput[]
    OR?: AsistenciaWhereInput[]
    NOT?: AsistenciaWhereInput | AsistenciaWhereInput[]
    id?: IntFilter<"Asistencia"> | number
    presente?: BoolFilter<"Asistencia"> | boolean
    created_at?: DateTimeFilter<"Asistencia"> | Date | string
    alumnoId?: IntFilter<"Asistencia"> | number
    diaClaseId?: IntFilter<"Asistencia"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    DiaClase?: XOR<DiaClaseScalarRelationFilter, DiaClaseWhereInput>
  }

  export type AsistenciaOrderByWithRelationInput = {
    id?: SortOrder
    presente?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    diaClaseId?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    DiaClase?: DiaClaseOrderByWithRelationInput
  }

  export type AsistenciaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    alumnoId_diaClaseId?: AsistenciaAlumnoIdDiaClaseIdCompoundUniqueInput
    AND?: AsistenciaWhereInput | AsistenciaWhereInput[]
    OR?: AsistenciaWhereInput[]
    NOT?: AsistenciaWhereInput | AsistenciaWhereInput[]
    presente?: BoolFilter<"Asistencia"> | boolean
    created_at?: DateTimeFilter<"Asistencia"> | Date | string
    alumnoId?: IntFilter<"Asistencia"> | number
    diaClaseId?: IntFilter<"Asistencia"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    DiaClase?: XOR<DiaClaseScalarRelationFilter, DiaClaseWhereInput>
  }, "id" | "alumnoId_diaClaseId">

  export type AsistenciaOrderByWithAggregationInput = {
    id?: SortOrder
    presente?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    diaClaseId?: SortOrder
    _count?: AsistenciaCountOrderByAggregateInput
    _avg?: AsistenciaAvgOrderByAggregateInput
    _max?: AsistenciaMaxOrderByAggregateInput
    _min?: AsistenciaMinOrderByAggregateInput
    _sum?: AsistenciaSumOrderByAggregateInput
  }

  export type AsistenciaScalarWhereWithAggregatesInput = {
    AND?: AsistenciaScalarWhereWithAggregatesInput | AsistenciaScalarWhereWithAggregatesInput[]
    OR?: AsistenciaScalarWhereWithAggregatesInput[]
    NOT?: AsistenciaScalarWhereWithAggregatesInput | AsistenciaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Asistencia"> | number
    presente?: BoolWithAggregatesFilter<"Asistencia"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Asistencia"> | Date | string
    alumnoId?: IntWithAggregatesFilter<"Asistencia"> | number
    diaClaseId?: IntWithAggregatesFilter<"Asistencia"> | number
  }

  export type CalificacionEvaluacionWhereInput = {
    AND?: CalificacionEvaluacionWhereInput | CalificacionEvaluacionWhereInput[]
    OR?: CalificacionEvaluacionWhereInput[]
    NOT?: CalificacionEvaluacionWhereInput | CalificacionEvaluacionWhereInput[]
    id?: IntFilter<"CalificacionEvaluacion"> | number
    puntos?: IntFilter<"CalificacionEvaluacion"> | number
    created_at?: DateTimeFilter<"CalificacionEvaluacion"> | Date | string
    alumnoId?: IntFilter<"CalificacionEvaluacion"> | number
    evaluacionAsignacionId?: IntFilter<"CalificacionEvaluacion"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    EvaluacionAsignacion?: XOR<EvaluacionAsignacionScalarRelationFilter, EvaluacionAsignacionWhereInput>
  }

  export type CalificacionEvaluacionOrderByWithRelationInput = {
    id?: SortOrder
    puntos?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionAsignacionId?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    EvaluacionAsignacion?: EvaluacionAsignacionOrderByWithRelationInput
  }

  export type CalificacionEvaluacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    evaluacionAsignacionId?: number
    alumnoId_evaluacionAsignacionId?: CalificacionEvaluacionAlumnoIdEvaluacionAsignacionIdCompoundUniqueInput
    AND?: CalificacionEvaluacionWhereInput | CalificacionEvaluacionWhereInput[]
    OR?: CalificacionEvaluacionWhereInput[]
    NOT?: CalificacionEvaluacionWhereInput | CalificacionEvaluacionWhereInput[]
    puntos?: IntFilter<"CalificacionEvaluacion"> | number
    created_at?: DateTimeFilter<"CalificacionEvaluacion"> | Date | string
    alumnoId?: IntFilter<"CalificacionEvaluacion"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    EvaluacionAsignacion?: XOR<EvaluacionAsignacionScalarRelationFilter, EvaluacionAsignacionWhereInput>
  }, "id" | "evaluacionAsignacionId" | "alumnoId_evaluacionAsignacionId">

  export type CalificacionEvaluacionOrderByWithAggregationInput = {
    id?: SortOrder
    puntos?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionAsignacionId?: SortOrder
    _count?: CalificacionEvaluacionCountOrderByAggregateInput
    _avg?: CalificacionEvaluacionAvgOrderByAggregateInput
    _max?: CalificacionEvaluacionMaxOrderByAggregateInput
    _min?: CalificacionEvaluacionMinOrderByAggregateInput
    _sum?: CalificacionEvaluacionSumOrderByAggregateInput
  }

  export type CalificacionEvaluacionScalarWhereWithAggregatesInput = {
    AND?: CalificacionEvaluacionScalarWhereWithAggregatesInput | CalificacionEvaluacionScalarWhereWithAggregatesInput[]
    OR?: CalificacionEvaluacionScalarWhereWithAggregatesInput[]
    NOT?: CalificacionEvaluacionScalarWhereWithAggregatesInput | CalificacionEvaluacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CalificacionEvaluacion"> | number
    puntos?: IntWithAggregatesFilter<"CalificacionEvaluacion"> | number
    created_at?: DateTimeWithAggregatesFilter<"CalificacionEvaluacion"> | Date | string
    alumnoId?: IntWithAggregatesFilter<"CalificacionEvaluacion"> | number
    evaluacionAsignacionId?: IntWithAggregatesFilter<"CalificacionEvaluacion"> | number
  }

  export type CatedraWhereInput = {
    AND?: CatedraWhereInput | CatedraWhereInput[]
    OR?: CatedraWhereInput[]
    NOT?: CatedraWhereInput | CatedraWhereInput[]
    id?: IntFilter<"Catedra"> | number
    nombre?: StringFilter<"Catedra"> | string
    anio?: IntFilter<"Catedra"> | number
    institucion?: StringFilter<"Catedra"> | string
    turno?: StringFilter<"Catedra"> | string
    aula?: StringFilter<"Catedra"> | string
    dias?: StringFilter<"Catedra"> | string
    created_at?: DateTimeFilter<"Catedra"> | Date | string
    updated_at?: DateTimeFilter<"Catedra"> | Date | string
    docenteId?: IntNullableFilter<"Catedra"> | number | null
    modalidad_pago?: EnumModalidadPagoFilter<"Catedra"> | $Enums.ModalidadPago
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    CatedraAlumno?: CatedraAlumnoListRelationFilter
    CatedraDiaHorario?: CatedraDiaHorarioListRelationFilter
    CostoCatedra?: XOR<CostoCatedraNullableScalarRelationFilter, CostoCatedraWhereInput> | null
    DiaClase?: DiaClaseListRelationFilter
    Evaluacion?: EvaluacionListRelationFilter
    PlanDeClases?: PlanDeClasesListRelationFilter
    Publicacion?: PublicacionListRelationFilter
    Puntuacion?: PuntuacionListRelationFilter
    TareaMaestra?: TareaMaestraListRelationFilter
  }

  export type CatedraOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    institucion?: SortOrder
    turno?: SortOrder
    aula?: SortOrder
    dias?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    docenteId?: SortOrderInput | SortOrder
    modalidad_pago?: SortOrder
    Docente?: DocenteOrderByWithRelationInput
    CatedraAlumno?: CatedraAlumnoOrderByRelationAggregateInput
    CatedraDiaHorario?: CatedraDiaHorarioOrderByRelationAggregateInput
    CostoCatedra?: CostoCatedraOrderByWithRelationInput
    DiaClase?: DiaClaseOrderByRelationAggregateInput
    Evaluacion?: EvaluacionOrderByRelationAggregateInput
    PlanDeClases?: PlanDeClasesOrderByRelationAggregateInput
    Publicacion?: PublicacionOrderByRelationAggregateInput
    Puntuacion?: PuntuacionOrderByRelationAggregateInput
    TareaMaestra?: TareaMaestraOrderByRelationAggregateInput
  }

  export type CatedraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CatedraWhereInput | CatedraWhereInput[]
    OR?: CatedraWhereInput[]
    NOT?: CatedraWhereInput | CatedraWhereInput[]
    nombre?: StringFilter<"Catedra"> | string
    anio?: IntFilter<"Catedra"> | number
    institucion?: StringFilter<"Catedra"> | string
    turno?: StringFilter<"Catedra"> | string
    aula?: StringFilter<"Catedra"> | string
    dias?: StringFilter<"Catedra"> | string
    created_at?: DateTimeFilter<"Catedra"> | Date | string
    updated_at?: DateTimeFilter<"Catedra"> | Date | string
    docenteId?: IntNullableFilter<"Catedra"> | number | null
    modalidad_pago?: EnumModalidadPagoFilter<"Catedra"> | $Enums.ModalidadPago
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    CatedraAlumno?: CatedraAlumnoListRelationFilter
    CatedraDiaHorario?: CatedraDiaHorarioListRelationFilter
    CostoCatedra?: XOR<CostoCatedraNullableScalarRelationFilter, CostoCatedraWhereInput> | null
    DiaClase?: DiaClaseListRelationFilter
    Evaluacion?: EvaluacionListRelationFilter
    PlanDeClases?: PlanDeClasesListRelationFilter
    Publicacion?: PublicacionListRelationFilter
    Puntuacion?: PuntuacionListRelationFilter
    TareaMaestra?: TareaMaestraListRelationFilter
  }, "id">

  export type CatedraOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    institucion?: SortOrder
    turno?: SortOrder
    aula?: SortOrder
    dias?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    docenteId?: SortOrderInput | SortOrder
    modalidad_pago?: SortOrder
    _count?: CatedraCountOrderByAggregateInput
    _avg?: CatedraAvgOrderByAggregateInput
    _max?: CatedraMaxOrderByAggregateInput
    _min?: CatedraMinOrderByAggregateInput
    _sum?: CatedraSumOrderByAggregateInput
  }

  export type CatedraScalarWhereWithAggregatesInput = {
    AND?: CatedraScalarWhereWithAggregatesInput | CatedraScalarWhereWithAggregatesInput[]
    OR?: CatedraScalarWhereWithAggregatesInput[]
    NOT?: CatedraScalarWhereWithAggregatesInput | CatedraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Catedra"> | number
    nombre?: StringWithAggregatesFilter<"Catedra"> | string
    anio?: IntWithAggregatesFilter<"Catedra"> | number
    institucion?: StringWithAggregatesFilter<"Catedra"> | string
    turno?: StringWithAggregatesFilter<"Catedra"> | string
    aula?: StringWithAggregatesFilter<"Catedra"> | string
    dias?: StringWithAggregatesFilter<"Catedra"> | string
    created_at?: DateTimeWithAggregatesFilter<"Catedra"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Catedra"> | Date | string
    docenteId?: IntNullableWithAggregatesFilter<"Catedra"> | number | null
    modalidad_pago?: EnumModalidadPagoWithAggregatesFilter<"Catedra"> | $Enums.ModalidadPago
  }

  export type CatedraAlumnoWhereInput = {
    AND?: CatedraAlumnoWhereInput | CatedraAlumnoWhereInput[]
    OR?: CatedraAlumnoWhereInput[]
    NOT?: CatedraAlumnoWhereInput | CatedraAlumnoWhereInput[]
    catedraId?: IntFilter<"CatedraAlumno"> | number
    alumnoId?: IntNullableFilter<"CatedraAlumno"> | number | null
    assignedAt?: DateTimeFilter<"CatedraAlumno"> | Date | string
    assignedBy?: StringFilter<"CatedraAlumno"> | string
    composerId?: IntNullableFilter<"CatedraAlumno"> | number | null
    id?: IntFilter<"CatedraAlumno"> | number
    dia_cobro?: IntNullableFilter<"CatedraAlumno"> | number | null
    fecha_inscripcion?: DateTimeFilter<"CatedraAlumno"> | Date | string
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    Composer?: XOR<ComposerNullableScalarRelationFilter, ComposerWhereInput> | null
    Pago?: PagoListRelationFilter
  }

  export type CatedraAlumnoOrderByWithRelationInput = {
    catedraId?: SortOrder
    alumnoId?: SortOrderInput | SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
    composerId?: SortOrderInput | SortOrder
    id?: SortOrder
    dia_cobro?: SortOrderInput | SortOrder
    fecha_inscripcion?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    Catedra?: CatedraOrderByWithRelationInput
    Composer?: ComposerOrderByWithRelationInput
    Pago?: PagoOrderByRelationAggregateInput
  }

  export type CatedraAlumnoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    catedraId_alumnoId?: CatedraAlumnoCatedraIdAlumnoIdCompoundUniqueInput
    catedraId_composerId?: CatedraAlumnoCatedraIdComposerIdCompoundUniqueInput
    AND?: CatedraAlumnoWhereInput | CatedraAlumnoWhereInput[]
    OR?: CatedraAlumnoWhereInput[]
    NOT?: CatedraAlumnoWhereInput | CatedraAlumnoWhereInput[]
    catedraId?: IntFilter<"CatedraAlumno"> | number
    alumnoId?: IntNullableFilter<"CatedraAlumno"> | number | null
    assignedAt?: DateTimeFilter<"CatedraAlumno"> | Date | string
    assignedBy?: StringFilter<"CatedraAlumno"> | string
    composerId?: IntNullableFilter<"CatedraAlumno"> | number | null
    dia_cobro?: IntNullableFilter<"CatedraAlumno"> | number | null
    fecha_inscripcion?: DateTimeFilter<"CatedraAlumno"> | Date | string
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    Composer?: XOR<ComposerNullableScalarRelationFilter, ComposerWhereInput> | null
    Pago?: PagoListRelationFilter
  }, "id" | "catedraId_alumnoId" | "catedraId_composerId">

  export type CatedraAlumnoOrderByWithAggregationInput = {
    catedraId?: SortOrder
    alumnoId?: SortOrderInput | SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
    composerId?: SortOrderInput | SortOrder
    id?: SortOrder
    dia_cobro?: SortOrderInput | SortOrder
    fecha_inscripcion?: SortOrder
    _count?: CatedraAlumnoCountOrderByAggregateInput
    _avg?: CatedraAlumnoAvgOrderByAggregateInput
    _max?: CatedraAlumnoMaxOrderByAggregateInput
    _min?: CatedraAlumnoMinOrderByAggregateInput
    _sum?: CatedraAlumnoSumOrderByAggregateInput
  }

  export type CatedraAlumnoScalarWhereWithAggregatesInput = {
    AND?: CatedraAlumnoScalarWhereWithAggregatesInput | CatedraAlumnoScalarWhereWithAggregatesInput[]
    OR?: CatedraAlumnoScalarWhereWithAggregatesInput[]
    NOT?: CatedraAlumnoScalarWhereWithAggregatesInput | CatedraAlumnoScalarWhereWithAggregatesInput[]
    catedraId?: IntWithAggregatesFilter<"CatedraAlumno"> | number
    alumnoId?: IntNullableWithAggregatesFilter<"CatedraAlumno"> | number | null
    assignedAt?: DateTimeWithAggregatesFilter<"CatedraAlumno"> | Date | string
    assignedBy?: StringWithAggregatesFilter<"CatedraAlumno"> | string
    composerId?: IntNullableWithAggregatesFilter<"CatedraAlumno"> | number | null
    id?: IntWithAggregatesFilter<"CatedraAlumno"> | number
    dia_cobro?: IntNullableWithAggregatesFilter<"CatedraAlumno"> | number | null
    fecha_inscripcion?: DateTimeWithAggregatesFilter<"CatedraAlumno"> | Date | string
  }

  export type CatedraDiaHorarioWhereInput = {
    AND?: CatedraDiaHorarioWhereInput | CatedraDiaHorarioWhereInput[]
    OR?: CatedraDiaHorarioWhereInput[]
    NOT?: CatedraDiaHorarioWhereInput | CatedraDiaHorarioWhereInput[]
    id?: IntFilter<"CatedraDiaHorario"> | number
    dia_semana?: StringFilter<"CatedraDiaHorario"> | string
    hora_inicio?: StringFilter<"CatedraDiaHorario"> | string
    hora_fin?: StringFilter<"CatedraDiaHorario"> | string
    catedraId?: IntFilter<"CatedraDiaHorario"> | number
    created_at?: DateTimeFilter<"CatedraDiaHorario"> | Date | string
    updated_at?: DateTimeFilter<"CatedraDiaHorario"> | Date | string
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }

  export type CatedraDiaHorarioOrderByWithRelationInput = {
    id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Catedra?: CatedraOrderByWithRelationInput
  }

  export type CatedraDiaHorarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CatedraDiaHorarioWhereInput | CatedraDiaHorarioWhereInput[]
    OR?: CatedraDiaHorarioWhereInput[]
    NOT?: CatedraDiaHorarioWhereInput | CatedraDiaHorarioWhereInput[]
    dia_semana?: StringFilter<"CatedraDiaHorario"> | string
    hora_inicio?: StringFilter<"CatedraDiaHorario"> | string
    hora_fin?: StringFilter<"CatedraDiaHorario"> | string
    catedraId?: IntFilter<"CatedraDiaHorario"> | number
    created_at?: DateTimeFilter<"CatedraDiaHorario"> | Date | string
    updated_at?: DateTimeFilter<"CatedraDiaHorario"> | Date | string
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }, "id">

  export type CatedraDiaHorarioOrderByWithAggregationInput = {
    id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: CatedraDiaHorarioCountOrderByAggregateInput
    _avg?: CatedraDiaHorarioAvgOrderByAggregateInput
    _max?: CatedraDiaHorarioMaxOrderByAggregateInput
    _min?: CatedraDiaHorarioMinOrderByAggregateInput
    _sum?: CatedraDiaHorarioSumOrderByAggregateInput
  }

  export type CatedraDiaHorarioScalarWhereWithAggregatesInput = {
    AND?: CatedraDiaHorarioScalarWhereWithAggregatesInput | CatedraDiaHorarioScalarWhereWithAggregatesInput[]
    OR?: CatedraDiaHorarioScalarWhereWithAggregatesInput[]
    NOT?: CatedraDiaHorarioScalarWhereWithAggregatesInput | CatedraDiaHorarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CatedraDiaHorario"> | number
    dia_semana?: StringWithAggregatesFilter<"CatedraDiaHorario"> | string
    hora_inicio?: StringWithAggregatesFilter<"CatedraDiaHorario"> | string
    hora_fin?: StringWithAggregatesFilter<"CatedraDiaHorario"> | string
    catedraId?: IntWithAggregatesFilter<"CatedraDiaHorario"> | number
    created_at?: DateTimeWithAggregatesFilter<"CatedraDiaHorario"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"CatedraDiaHorario"> | Date | string
  }

  export type ComentarioPublicacionWhereInput = {
    AND?: ComentarioPublicacionWhereInput | ComentarioPublicacionWhereInput[]
    OR?: ComentarioPublicacionWhereInput[]
    NOT?: ComentarioPublicacionWhereInput | ComentarioPublicacionWhereInput[]
    id?: IntFilter<"ComentarioPublicacion"> | number
    texto?: StringFilter<"ComentarioPublicacion"> | string
    publicacionId?: IntFilter<"ComentarioPublicacion"> | number
    autorAlumnoId?: IntNullableFilter<"ComentarioPublicacion"> | number | null
    autorDocenteId?: IntNullableFilter<"ComentarioPublicacion"> | number | null
    created_at?: DateTimeFilter<"ComentarioPublicacion"> | Date | string
    updated_at?: DateTimeFilter<"ComentarioPublicacion"> | Date | string
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    Publicacion?: XOR<PublicacionScalarRelationFilter, PublicacionWhereInput>
  }

  export type ComentarioPublicacionOrderByWithRelationInput = {
    id?: SortOrder
    texto?: SortOrder
    publicacionId?: SortOrder
    autorAlumnoId?: SortOrderInput | SortOrder
    autorDocenteId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    Docente?: DocenteOrderByWithRelationInput
    Publicacion?: PublicacionOrderByWithRelationInput
  }

  export type ComentarioPublicacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ComentarioPublicacionWhereInput | ComentarioPublicacionWhereInput[]
    OR?: ComentarioPublicacionWhereInput[]
    NOT?: ComentarioPublicacionWhereInput | ComentarioPublicacionWhereInput[]
    texto?: StringFilter<"ComentarioPublicacion"> | string
    publicacionId?: IntFilter<"ComentarioPublicacion"> | number
    autorAlumnoId?: IntNullableFilter<"ComentarioPublicacion"> | number | null
    autorDocenteId?: IntNullableFilter<"ComentarioPublicacion"> | number | null
    created_at?: DateTimeFilter<"ComentarioPublicacion"> | Date | string
    updated_at?: DateTimeFilter<"ComentarioPublicacion"> | Date | string
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    Publicacion?: XOR<PublicacionScalarRelationFilter, PublicacionWhereInput>
  }, "id">

  export type ComentarioPublicacionOrderByWithAggregationInput = {
    id?: SortOrder
    texto?: SortOrder
    publicacionId?: SortOrder
    autorAlumnoId?: SortOrderInput | SortOrder
    autorDocenteId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: ComentarioPublicacionCountOrderByAggregateInput
    _avg?: ComentarioPublicacionAvgOrderByAggregateInput
    _max?: ComentarioPublicacionMaxOrderByAggregateInput
    _min?: ComentarioPublicacionMinOrderByAggregateInput
    _sum?: ComentarioPublicacionSumOrderByAggregateInput
  }

  export type ComentarioPublicacionScalarWhereWithAggregatesInput = {
    AND?: ComentarioPublicacionScalarWhereWithAggregatesInput | ComentarioPublicacionScalarWhereWithAggregatesInput[]
    OR?: ComentarioPublicacionScalarWhereWithAggregatesInput[]
    NOT?: ComentarioPublicacionScalarWhereWithAggregatesInput | ComentarioPublicacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ComentarioPublicacion"> | number
    texto?: StringWithAggregatesFilter<"ComentarioPublicacion"> | string
    publicacionId?: IntWithAggregatesFilter<"ComentarioPublicacion"> | number
    autorAlumnoId?: IntNullableWithAggregatesFilter<"ComentarioPublicacion"> | number | null
    autorDocenteId?: IntNullableWithAggregatesFilter<"ComentarioPublicacion"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"ComentarioPublicacion"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"ComentarioPublicacion"> | Date | string
  }

  export type CostoCatedraWhereInput = {
    AND?: CostoCatedraWhereInput | CostoCatedraWhereInput[]
    OR?: CostoCatedraWhereInput[]
    NOT?: CostoCatedraWhereInput | CostoCatedraWhereInput[]
    id?: IntFilter<"CostoCatedra"> | number
    catedraId?: IntFilter<"CostoCatedra"> | number
    monto_matricula?: FloatNullableFilter<"CostoCatedra"> | number | null
    monto_cuota?: FloatNullableFilter<"CostoCatedra"> | number | null
    es_gratuita?: BoolFilter<"CostoCatedra"> | boolean
    created_at?: DateTimeFilter<"CostoCatedra"> | Date | string
    updated_at?: DateTimeFilter<"CostoCatedra"> | Date | string
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }

  export type CostoCatedraOrderByWithRelationInput = {
    id?: SortOrder
    catedraId?: SortOrder
    monto_matricula?: SortOrderInput | SortOrder
    monto_cuota?: SortOrderInput | SortOrder
    es_gratuita?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Catedra?: CatedraOrderByWithRelationInput
  }

  export type CostoCatedraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    catedraId?: number
    AND?: CostoCatedraWhereInput | CostoCatedraWhereInput[]
    OR?: CostoCatedraWhereInput[]
    NOT?: CostoCatedraWhereInput | CostoCatedraWhereInput[]
    monto_matricula?: FloatNullableFilter<"CostoCatedra"> | number | null
    monto_cuota?: FloatNullableFilter<"CostoCatedra"> | number | null
    es_gratuita?: BoolFilter<"CostoCatedra"> | boolean
    created_at?: DateTimeFilter<"CostoCatedra"> | Date | string
    updated_at?: DateTimeFilter<"CostoCatedra"> | Date | string
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }, "id" | "catedraId">

  export type CostoCatedraOrderByWithAggregationInput = {
    id?: SortOrder
    catedraId?: SortOrder
    monto_matricula?: SortOrderInput | SortOrder
    monto_cuota?: SortOrderInput | SortOrder
    es_gratuita?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: CostoCatedraCountOrderByAggregateInput
    _avg?: CostoCatedraAvgOrderByAggregateInput
    _max?: CostoCatedraMaxOrderByAggregateInput
    _min?: CostoCatedraMinOrderByAggregateInput
    _sum?: CostoCatedraSumOrderByAggregateInput
  }

  export type CostoCatedraScalarWhereWithAggregatesInput = {
    AND?: CostoCatedraScalarWhereWithAggregatesInput | CostoCatedraScalarWhereWithAggregatesInput[]
    OR?: CostoCatedraScalarWhereWithAggregatesInput[]
    NOT?: CostoCatedraScalarWhereWithAggregatesInput | CostoCatedraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CostoCatedra"> | number
    catedraId?: IntWithAggregatesFilter<"CostoCatedra"> | number
    monto_matricula?: FloatNullableWithAggregatesFilter<"CostoCatedra"> | number | null
    monto_cuota?: FloatNullableWithAggregatesFilter<"CostoCatedra"> | number | null
    es_gratuita?: BoolWithAggregatesFilter<"CostoCatedra"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"CostoCatedra"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"CostoCatedra"> | Date | string
  }

  export type DiaClaseWhereInput = {
    AND?: DiaClaseWhereInput | DiaClaseWhereInput[]
    OR?: DiaClaseWhereInput[]
    NOT?: DiaClaseWhereInput | DiaClaseWhereInput[]
    id?: IntFilter<"DiaClase"> | number
    fecha?: DateTimeFilter<"DiaClase"> | Date | string
    dia_semana?: StringFilter<"DiaClase"> | string
    created_at?: DateTimeFilter<"DiaClase"> | Date | string
    updated_at?: DateTimeFilter<"DiaClase"> | Date | string
    catedraId?: IntFilter<"DiaClase"> | number
    Asistencia?: AsistenciaListRelationFilter
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }

  export type DiaClaseOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    dia_semana?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
    Asistencia?: AsistenciaOrderByRelationAggregateInput
    Catedra?: CatedraOrderByWithRelationInput
  }

  export type DiaClaseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DiaClaseWhereInput | DiaClaseWhereInput[]
    OR?: DiaClaseWhereInput[]
    NOT?: DiaClaseWhereInput | DiaClaseWhereInput[]
    fecha?: DateTimeFilter<"DiaClase"> | Date | string
    dia_semana?: StringFilter<"DiaClase"> | string
    created_at?: DateTimeFilter<"DiaClase"> | Date | string
    updated_at?: DateTimeFilter<"DiaClase"> | Date | string
    catedraId?: IntFilter<"DiaClase"> | number
    Asistencia?: AsistenciaListRelationFilter
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }, "id">

  export type DiaClaseOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    dia_semana?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
    _count?: DiaClaseCountOrderByAggregateInput
    _avg?: DiaClaseAvgOrderByAggregateInput
    _max?: DiaClaseMaxOrderByAggregateInput
    _min?: DiaClaseMinOrderByAggregateInput
    _sum?: DiaClaseSumOrderByAggregateInput
  }

  export type DiaClaseScalarWhereWithAggregatesInput = {
    AND?: DiaClaseScalarWhereWithAggregatesInput | DiaClaseScalarWhereWithAggregatesInput[]
    OR?: DiaClaseScalarWhereWithAggregatesInput[]
    NOT?: DiaClaseScalarWhereWithAggregatesInput | DiaClaseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DiaClase"> | number
    fecha?: DateTimeWithAggregatesFilter<"DiaClase"> | Date | string
    dia_semana?: StringWithAggregatesFilter<"DiaClase"> | string
    created_at?: DateTimeWithAggregatesFilter<"DiaClase"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"DiaClase"> | Date | string
    catedraId?: IntWithAggregatesFilter<"DiaClase"> | number
  }

  export type DocenteWhereInput = {
    AND?: DocenteWhereInput | DocenteWhereInput[]
    OR?: DocenteWhereInput[]
    NOT?: DocenteWhereInput | DocenteWhereInput[]
    id?: IntFilter<"Docente"> | number
    nombre?: StringFilter<"Docente"> | string
    apellido?: StringFilter<"Docente"> | string
    email?: StringFilter<"Docente"> | string
    otpSecret?: StringNullableFilter<"Docente"> | string | null
    otpEnabled?: BoolFilter<"Docente"> | boolean
    created_at?: DateTimeFilter<"Docente"> | Date | string
    updated_at?: DateTimeFilter<"Docente"> | Date | string
    direccion?: StringNullableFilter<"Docente"> | string | null
    telefono?: StringNullableFilter<"Docente"> | string | null
    Catedra?: CatedraListRelationFilter
    ComentarioPublicacion?: ComentarioPublicacionListRelationFilter
    Pago?: PagoListRelationFilter
    PlanDeClases?: PlanDeClasesListRelationFilter
    Publicacion?: PublicacionListRelationFilter
    PublicacionInteraccion?: PublicacionInteraccionListRelationFilter
  }

  export type DocenteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    otpSecret?: SortOrderInput | SortOrder
    otpEnabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    Catedra?: CatedraOrderByRelationAggregateInput
    ComentarioPublicacion?: ComentarioPublicacionOrderByRelationAggregateInput
    Pago?: PagoOrderByRelationAggregateInput
    PlanDeClases?: PlanDeClasesOrderByRelationAggregateInput
    Publicacion?: PublicacionOrderByRelationAggregateInput
    PublicacionInteraccion?: PublicacionInteraccionOrderByRelationAggregateInput
  }

  export type DocenteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: DocenteWhereInput | DocenteWhereInput[]
    OR?: DocenteWhereInput[]
    NOT?: DocenteWhereInput | DocenteWhereInput[]
    nombre?: StringFilter<"Docente"> | string
    apellido?: StringFilter<"Docente"> | string
    otpSecret?: StringNullableFilter<"Docente"> | string | null
    otpEnabled?: BoolFilter<"Docente"> | boolean
    created_at?: DateTimeFilter<"Docente"> | Date | string
    updated_at?: DateTimeFilter<"Docente"> | Date | string
    direccion?: StringNullableFilter<"Docente"> | string | null
    telefono?: StringNullableFilter<"Docente"> | string | null
    Catedra?: CatedraListRelationFilter
    ComentarioPublicacion?: ComentarioPublicacionListRelationFilter
    Pago?: PagoListRelationFilter
    PlanDeClases?: PlanDeClasesListRelationFilter
    Publicacion?: PublicacionListRelationFilter
    PublicacionInteraccion?: PublicacionInteraccionListRelationFilter
  }, "id" | "email">

  export type DocenteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    otpSecret?: SortOrderInput | SortOrder
    otpEnabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    direccion?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    _count?: DocenteCountOrderByAggregateInput
    _avg?: DocenteAvgOrderByAggregateInput
    _max?: DocenteMaxOrderByAggregateInput
    _min?: DocenteMinOrderByAggregateInput
    _sum?: DocenteSumOrderByAggregateInput
  }

  export type DocenteScalarWhereWithAggregatesInput = {
    AND?: DocenteScalarWhereWithAggregatesInput | DocenteScalarWhereWithAggregatesInput[]
    OR?: DocenteScalarWhereWithAggregatesInput[]
    NOT?: DocenteScalarWhereWithAggregatesInput | DocenteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Docente"> | number
    nombre?: StringWithAggregatesFilter<"Docente"> | string
    apellido?: StringWithAggregatesFilter<"Docente"> | string
    email?: StringWithAggregatesFilter<"Docente"> | string
    otpSecret?: StringNullableWithAggregatesFilter<"Docente"> | string | null
    otpEnabled?: BoolWithAggregatesFilter<"Docente"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Docente"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Docente"> | Date | string
    direccion?: StringNullableWithAggregatesFilter<"Docente"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"Docente"> | string | null
  }

  export type EditSuggestionWhereInput = {
    AND?: EditSuggestionWhereInput | EditSuggestionWhereInput[]
    OR?: EditSuggestionWhereInput[]
    NOT?: EditSuggestionWhereInput | EditSuggestionWhereInput[]
    id?: IntFilter<"EditSuggestion"> | number
    first_name?: StringNullableFilter<"EditSuggestion"> | string | null
    last_name?: StringNullableFilter<"EditSuggestion"> | string | null
    birth_year?: IntNullableFilter<"EditSuggestion"> | number | null
    birth_month?: IntNullableFilter<"EditSuggestion"> | number | null
    birth_day?: IntNullableFilter<"EditSuggestion"> | number | null
    death_year?: IntNullableFilter<"EditSuggestion"> | number | null
    death_month?: IntNullableFilter<"EditSuggestion"> | number | null
    death_day?: IntNullableFilter<"EditSuggestion"> | number | null
    bio?: StringNullableFilter<"EditSuggestion"> | string | null
    notable_works?: StringNullableFilter<"EditSuggestion"> | string | null
    period?: StringNullableFilter<"EditSuggestion"> | string | null
    references?: StringNullableFilter<"EditSuggestion"> | string | null
    youtube_link?: StringNullableFilter<"EditSuggestion"> | string | null
    mainRole?: EnumRoleTypeNullableListFilter<"EditSuggestion">
    reason?: StringFilter<"EditSuggestion"> | string
    status?: StringFilter<"EditSuggestion"> | string
    suggester_email?: StringFilter<"EditSuggestion"> | string
    suggester_ip?: StringNullableFilter<"EditSuggestion"> | string | null
    created_at?: DateTimeFilter<"EditSuggestion"> | Date | string
    updated_at?: DateTimeFilter<"EditSuggestion"> | Date | string
    composerId?: IntFilter<"EditSuggestion"> | number
    is_student_contribution?: BoolNullableFilter<"EditSuggestion"> | boolean | null
    student_first_name?: StringNullableFilter<"EditSuggestion"> | string | null
    student_last_name?: StringNullableFilter<"EditSuggestion"> | string | null
    points?: IntFilter<"EditSuggestion"> | number
    Composer?: XOR<ComposerScalarRelationFilter, ComposerWhereInput>
  }

  export type EditSuggestionOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    birth_year?: SortOrderInput | SortOrder
    birth_month?: SortOrderInput | SortOrder
    birth_day?: SortOrderInput | SortOrder
    death_year?: SortOrderInput | SortOrder
    death_month?: SortOrderInput | SortOrder
    death_day?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    notable_works?: SortOrderInput | SortOrder
    period?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    youtube_link?: SortOrderInput | SortOrder
    mainRole?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    suggester_email?: SortOrder
    suggester_ip?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    composerId?: SortOrder
    is_student_contribution?: SortOrderInput | SortOrder
    student_first_name?: SortOrderInput | SortOrder
    student_last_name?: SortOrderInput | SortOrder
    points?: SortOrder
    Composer?: ComposerOrderByWithRelationInput
  }

  export type EditSuggestionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EditSuggestionWhereInput | EditSuggestionWhereInput[]
    OR?: EditSuggestionWhereInput[]
    NOT?: EditSuggestionWhereInput | EditSuggestionWhereInput[]
    first_name?: StringNullableFilter<"EditSuggestion"> | string | null
    last_name?: StringNullableFilter<"EditSuggestion"> | string | null
    birth_year?: IntNullableFilter<"EditSuggestion"> | number | null
    birth_month?: IntNullableFilter<"EditSuggestion"> | number | null
    birth_day?: IntNullableFilter<"EditSuggestion"> | number | null
    death_year?: IntNullableFilter<"EditSuggestion"> | number | null
    death_month?: IntNullableFilter<"EditSuggestion"> | number | null
    death_day?: IntNullableFilter<"EditSuggestion"> | number | null
    bio?: StringNullableFilter<"EditSuggestion"> | string | null
    notable_works?: StringNullableFilter<"EditSuggestion"> | string | null
    period?: StringNullableFilter<"EditSuggestion"> | string | null
    references?: StringNullableFilter<"EditSuggestion"> | string | null
    youtube_link?: StringNullableFilter<"EditSuggestion"> | string | null
    mainRole?: EnumRoleTypeNullableListFilter<"EditSuggestion">
    reason?: StringFilter<"EditSuggestion"> | string
    status?: StringFilter<"EditSuggestion"> | string
    suggester_email?: StringFilter<"EditSuggestion"> | string
    suggester_ip?: StringNullableFilter<"EditSuggestion"> | string | null
    created_at?: DateTimeFilter<"EditSuggestion"> | Date | string
    updated_at?: DateTimeFilter<"EditSuggestion"> | Date | string
    composerId?: IntFilter<"EditSuggestion"> | number
    is_student_contribution?: BoolNullableFilter<"EditSuggestion"> | boolean | null
    student_first_name?: StringNullableFilter<"EditSuggestion"> | string | null
    student_last_name?: StringNullableFilter<"EditSuggestion"> | string | null
    points?: IntFilter<"EditSuggestion"> | number
    Composer?: XOR<ComposerScalarRelationFilter, ComposerWhereInput>
  }, "id">

  export type EditSuggestionOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    birth_year?: SortOrderInput | SortOrder
    birth_month?: SortOrderInput | SortOrder
    birth_day?: SortOrderInput | SortOrder
    death_year?: SortOrderInput | SortOrder
    death_month?: SortOrderInput | SortOrder
    death_day?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    notable_works?: SortOrderInput | SortOrder
    period?: SortOrderInput | SortOrder
    references?: SortOrderInput | SortOrder
    youtube_link?: SortOrderInput | SortOrder
    mainRole?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    suggester_email?: SortOrder
    suggester_ip?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    composerId?: SortOrder
    is_student_contribution?: SortOrderInput | SortOrder
    student_first_name?: SortOrderInput | SortOrder
    student_last_name?: SortOrderInput | SortOrder
    points?: SortOrder
    _count?: EditSuggestionCountOrderByAggregateInput
    _avg?: EditSuggestionAvgOrderByAggregateInput
    _max?: EditSuggestionMaxOrderByAggregateInput
    _min?: EditSuggestionMinOrderByAggregateInput
    _sum?: EditSuggestionSumOrderByAggregateInput
  }

  export type EditSuggestionScalarWhereWithAggregatesInput = {
    AND?: EditSuggestionScalarWhereWithAggregatesInput | EditSuggestionScalarWhereWithAggregatesInput[]
    OR?: EditSuggestionScalarWhereWithAggregatesInput[]
    NOT?: EditSuggestionScalarWhereWithAggregatesInput | EditSuggestionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EditSuggestion"> | number
    first_name?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    birth_year?: IntNullableWithAggregatesFilter<"EditSuggestion"> | number | null
    birth_month?: IntNullableWithAggregatesFilter<"EditSuggestion"> | number | null
    birth_day?: IntNullableWithAggregatesFilter<"EditSuggestion"> | number | null
    death_year?: IntNullableWithAggregatesFilter<"EditSuggestion"> | number | null
    death_month?: IntNullableWithAggregatesFilter<"EditSuggestion"> | number | null
    death_day?: IntNullableWithAggregatesFilter<"EditSuggestion"> | number | null
    bio?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    notable_works?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    period?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    references?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    youtube_link?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    mainRole?: EnumRoleTypeNullableListFilter<"EditSuggestion">
    reason?: StringWithAggregatesFilter<"EditSuggestion"> | string
    status?: StringWithAggregatesFilter<"EditSuggestion"> | string
    suggester_email?: StringWithAggregatesFilter<"EditSuggestion"> | string
    suggester_ip?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"EditSuggestion"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"EditSuggestion"> | Date | string
    composerId?: IntWithAggregatesFilter<"EditSuggestion"> | number
    is_student_contribution?: BoolNullableWithAggregatesFilter<"EditSuggestion"> | boolean | null
    student_first_name?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    student_last_name?: StringNullableWithAggregatesFilter<"EditSuggestion"> | string | null
    points?: IntWithAggregatesFilter<"EditSuggestion"> | number
  }

  export type EvaluacionWhereInput = {
    AND?: EvaluacionWhereInput | EvaluacionWhereInput[]
    OR?: EvaluacionWhereInput[]
    NOT?: EvaluacionWhereInput | EvaluacionWhereInput[]
    id?: IntFilter<"Evaluacion"> | number
    titulo?: StringFilter<"Evaluacion"> | string
    created_at?: DateTimeFilter<"Evaluacion"> | Date | string
    catedraId?: IntFilter<"Evaluacion"> | number
    fecha_limite?: DateTimeNullableFilter<"Evaluacion"> | Date | string | null
    isMaster?: BoolFilter<"Evaluacion"> | boolean
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    EvaluacionAsignacion?: EvaluacionAsignacionListRelationFilter
    Pregunta?: PreguntaListRelationFilter
    Publicacion?: XOR<PublicacionNullableScalarRelationFilter, PublicacionWhereInput> | null
  }

  export type EvaluacionOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    created_at?: SortOrder
    catedraId?: SortOrder
    fecha_limite?: SortOrderInput | SortOrder
    isMaster?: SortOrder
    Catedra?: CatedraOrderByWithRelationInput
    EvaluacionAsignacion?: EvaluacionAsignacionOrderByRelationAggregateInput
    Pregunta?: PreguntaOrderByRelationAggregateInput
    Publicacion?: PublicacionOrderByWithRelationInput
  }

  export type EvaluacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EvaluacionWhereInput | EvaluacionWhereInput[]
    OR?: EvaluacionWhereInput[]
    NOT?: EvaluacionWhereInput | EvaluacionWhereInput[]
    titulo?: StringFilter<"Evaluacion"> | string
    created_at?: DateTimeFilter<"Evaluacion"> | Date | string
    catedraId?: IntFilter<"Evaluacion"> | number
    fecha_limite?: DateTimeNullableFilter<"Evaluacion"> | Date | string | null
    isMaster?: BoolFilter<"Evaluacion"> | boolean
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    EvaluacionAsignacion?: EvaluacionAsignacionListRelationFilter
    Pregunta?: PreguntaListRelationFilter
    Publicacion?: XOR<PublicacionNullableScalarRelationFilter, PublicacionWhereInput> | null
  }, "id">

  export type EvaluacionOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    created_at?: SortOrder
    catedraId?: SortOrder
    fecha_limite?: SortOrderInput | SortOrder
    isMaster?: SortOrder
    _count?: EvaluacionCountOrderByAggregateInput
    _avg?: EvaluacionAvgOrderByAggregateInput
    _max?: EvaluacionMaxOrderByAggregateInput
    _min?: EvaluacionMinOrderByAggregateInput
    _sum?: EvaluacionSumOrderByAggregateInput
  }

  export type EvaluacionScalarWhereWithAggregatesInput = {
    AND?: EvaluacionScalarWhereWithAggregatesInput | EvaluacionScalarWhereWithAggregatesInput[]
    OR?: EvaluacionScalarWhereWithAggregatesInput[]
    NOT?: EvaluacionScalarWhereWithAggregatesInput | EvaluacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Evaluacion"> | number
    titulo?: StringWithAggregatesFilter<"Evaluacion"> | string
    created_at?: DateTimeWithAggregatesFilter<"Evaluacion"> | Date | string
    catedraId?: IntWithAggregatesFilter<"Evaluacion"> | number
    fecha_limite?: DateTimeNullableWithAggregatesFilter<"Evaluacion"> | Date | string | null
    isMaster?: BoolWithAggregatesFilter<"Evaluacion"> | boolean
  }

  export type EvaluacionAsignacionWhereInput = {
    AND?: EvaluacionAsignacionWhereInput | EvaluacionAsignacionWhereInput[]
    OR?: EvaluacionAsignacionWhereInput[]
    NOT?: EvaluacionAsignacionWhereInput | EvaluacionAsignacionWhereInput[]
    id?: IntFilter<"EvaluacionAsignacion"> | number
    estado?: EnumEstadoEvaluacionAsignacionFilter<"EvaluacionAsignacion"> | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: DateTimeNullableFilter<"EvaluacionAsignacion"> | Date | string | null
    created_at?: DateTimeFilter<"EvaluacionAsignacion"> | Date | string
    updated_at?: DateTimeFilter<"EvaluacionAsignacion"> | Date | string
    alumnoId?: IntFilter<"EvaluacionAsignacion"> | number
    evaluacionId?: IntFilter<"EvaluacionAsignacion"> | number
    publicacionId?: IntNullableFilter<"EvaluacionAsignacion"> | number | null
    CalificacionEvaluacion?: XOR<CalificacionEvaluacionNullableScalarRelationFilter, CalificacionEvaluacionWhereInput> | null
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    Evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
    Publicacion?: XOR<PublicacionNullableScalarRelationFilter, PublicacionWhereInput> | null
  }

  export type EvaluacionAsignacionOrderByWithRelationInput = {
    id?: SortOrder
    estado?: SortOrder
    fecha_entrega?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionId?: SortOrder
    publicacionId?: SortOrderInput | SortOrder
    CalificacionEvaluacion?: CalificacionEvaluacionOrderByWithRelationInput
    Alumno?: AlumnoOrderByWithRelationInput
    Evaluacion?: EvaluacionOrderByWithRelationInput
    Publicacion?: PublicacionOrderByWithRelationInput
  }

  export type EvaluacionAsignacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    publicacionId?: number
    alumnoId_evaluacionId?: EvaluacionAsignacionAlumnoIdEvaluacionIdCompoundUniqueInput
    AND?: EvaluacionAsignacionWhereInput | EvaluacionAsignacionWhereInput[]
    OR?: EvaluacionAsignacionWhereInput[]
    NOT?: EvaluacionAsignacionWhereInput | EvaluacionAsignacionWhereInput[]
    estado?: EnumEstadoEvaluacionAsignacionFilter<"EvaluacionAsignacion"> | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: DateTimeNullableFilter<"EvaluacionAsignacion"> | Date | string | null
    created_at?: DateTimeFilter<"EvaluacionAsignacion"> | Date | string
    updated_at?: DateTimeFilter<"EvaluacionAsignacion"> | Date | string
    alumnoId?: IntFilter<"EvaluacionAsignacion"> | number
    evaluacionId?: IntFilter<"EvaluacionAsignacion"> | number
    CalificacionEvaluacion?: XOR<CalificacionEvaluacionNullableScalarRelationFilter, CalificacionEvaluacionWhereInput> | null
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    Evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
    Publicacion?: XOR<PublicacionNullableScalarRelationFilter, PublicacionWhereInput> | null
  }, "id" | "publicacionId" | "alumnoId_evaluacionId">

  export type EvaluacionAsignacionOrderByWithAggregationInput = {
    id?: SortOrder
    estado?: SortOrder
    fecha_entrega?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionId?: SortOrder
    publicacionId?: SortOrderInput | SortOrder
    _count?: EvaluacionAsignacionCountOrderByAggregateInput
    _avg?: EvaluacionAsignacionAvgOrderByAggregateInput
    _max?: EvaluacionAsignacionMaxOrderByAggregateInput
    _min?: EvaluacionAsignacionMinOrderByAggregateInput
    _sum?: EvaluacionAsignacionSumOrderByAggregateInput
  }

  export type EvaluacionAsignacionScalarWhereWithAggregatesInput = {
    AND?: EvaluacionAsignacionScalarWhereWithAggregatesInput | EvaluacionAsignacionScalarWhereWithAggregatesInput[]
    OR?: EvaluacionAsignacionScalarWhereWithAggregatesInput[]
    NOT?: EvaluacionAsignacionScalarWhereWithAggregatesInput | EvaluacionAsignacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EvaluacionAsignacion"> | number
    estado?: EnumEstadoEvaluacionAsignacionWithAggregatesFilter<"EvaluacionAsignacion"> | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: DateTimeNullableWithAggregatesFilter<"EvaluacionAsignacion"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"EvaluacionAsignacion"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"EvaluacionAsignacion"> | Date | string
    alumnoId?: IntWithAggregatesFilter<"EvaluacionAsignacion"> | number
    evaluacionId?: IntWithAggregatesFilter<"EvaluacionAsignacion"> | number
    publicacionId?: IntNullableWithAggregatesFilter<"EvaluacionAsignacion"> | number | null
  }

  export type OpcionWhereInput = {
    AND?: OpcionWhereInput | OpcionWhereInput[]
    OR?: OpcionWhereInput[]
    NOT?: OpcionWhereInput | OpcionWhereInput[]
    id?: IntFilter<"Opcion"> | number
    texto?: StringFilter<"Opcion"> | string
    es_correcta?: BoolFilter<"Opcion"> | boolean
    preguntaId?: IntFilter<"Opcion"> | number
    Pregunta?: XOR<PreguntaScalarRelationFilter, PreguntaWhereInput>
    RespuestaAlumno?: RespuestaAlumnoListRelationFilter
  }

  export type OpcionOrderByWithRelationInput = {
    id?: SortOrder
    texto?: SortOrder
    es_correcta?: SortOrder
    preguntaId?: SortOrder
    Pregunta?: PreguntaOrderByWithRelationInput
    RespuestaAlumno?: RespuestaAlumnoOrderByRelationAggregateInput
  }

  export type OpcionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OpcionWhereInput | OpcionWhereInput[]
    OR?: OpcionWhereInput[]
    NOT?: OpcionWhereInput | OpcionWhereInput[]
    texto?: StringFilter<"Opcion"> | string
    es_correcta?: BoolFilter<"Opcion"> | boolean
    preguntaId?: IntFilter<"Opcion"> | number
    Pregunta?: XOR<PreguntaScalarRelationFilter, PreguntaWhereInput>
    RespuestaAlumno?: RespuestaAlumnoListRelationFilter
  }, "id">

  export type OpcionOrderByWithAggregationInput = {
    id?: SortOrder
    texto?: SortOrder
    es_correcta?: SortOrder
    preguntaId?: SortOrder
    _count?: OpcionCountOrderByAggregateInput
    _avg?: OpcionAvgOrderByAggregateInput
    _max?: OpcionMaxOrderByAggregateInput
    _min?: OpcionMinOrderByAggregateInput
    _sum?: OpcionSumOrderByAggregateInput
  }

  export type OpcionScalarWhereWithAggregatesInput = {
    AND?: OpcionScalarWhereWithAggregatesInput | OpcionScalarWhereWithAggregatesInput[]
    OR?: OpcionScalarWhereWithAggregatesInput[]
    NOT?: OpcionScalarWhereWithAggregatesInput | OpcionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Opcion"> | number
    texto?: StringWithAggregatesFilter<"Opcion"> | string
    es_correcta?: BoolWithAggregatesFilter<"Opcion"> | boolean
    preguntaId?: IntWithAggregatesFilter<"Opcion"> | number
  }

  export type PagoWhereInput = {
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    id?: IntFilter<"Pago"> | number
    catedraAlumnoId?: IntFilter<"Pago"> | number
    fecha_pago?: DateTimeFilter<"Pago"> | Date | string
    monto_pagado?: FloatFilter<"Pago"> | number
    tipo_pago?: EnumTipoPagoFilter<"Pago"> | $Enums.TipoPago
    periodo_cubierto?: StringNullableFilter<"Pago"> | string | null
    confirmadoPorId?: IntNullableFilter<"Pago"> | number | null
    created_at?: DateTimeFilter<"Pago"> | Date | string
    CatedraAlumno?: XOR<CatedraAlumnoScalarRelationFilter, CatedraAlumnoWhereInput>
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
  }

  export type PagoOrderByWithRelationInput = {
    id?: SortOrder
    catedraAlumnoId?: SortOrder
    fecha_pago?: SortOrder
    monto_pagado?: SortOrder
    tipo_pago?: SortOrder
    periodo_cubierto?: SortOrderInput | SortOrder
    confirmadoPorId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    CatedraAlumno?: CatedraAlumnoOrderByWithRelationInput
    Docente?: DocenteOrderByWithRelationInput
  }

  export type PagoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    catedraAlumnoId_tipo_pago_periodo_cubierto?: PagoCatedraAlumnoIdTipo_pagoPeriodo_cubiertoCompoundUniqueInput
    AND?: PagoWhereInput | PagoWhereInput[]
    OR?: PagoWhereInput[]
    NOT?: PagoWhereInput | PagoWhereInput[]
    catedraAlumnoId?: IntFilter<"Pago"> | number
    fecha_pago?: DateTimeFilter<"Pago"> | Date | string
    monto_pagado?: FloatFilter<"Pago"> | number
    tipo_pago?: EnumTipoPagoFilter<"Pago"> | $Enums.TipoPago
    periodo_cubierto?: StringNullableFilter<"Pago"> | string | null
    confirmadoPorId?: IntNullableFilter<"Pago"> | number | null
    created_at?: DateTimeFilter<"Pago"> | Date | string
    CatedraAlumno?: XOR<CatedraAlumnoScalarRelationFilter, CatedraAlumnoWhereInput>
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
  }, "id" | "catedraAlumnoId_tipo_pago_periodo_cubierto">

  export type PagoOrderByWithAggregationInput = {
    id?: SortOrder
    catedraAlumnoId?: SortOrder
    fecha_pago?: SortOrder
    monto_pagado?: SortOrder
    tipo_pago?: SortOrder
    periodo_cubierto?: SortOrderInput | SortOrder
    confirmadoPorId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: PagoCountOrderByAggregateInput
    _avg?: PagoAvgOrderByAggregateInput
    _max?: PagoMaxOrderByAggregateInput
    _min?: PagoMinOrderByAggregateInput
    _sum?: PagoSumOrderByAggregateInput
  }

  export type PagoScalarWhereWithAggregatesInput = {
    AND?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    OR?: PagoScalarWhereWithAggregatesInput[]
    NOT?: PagoScalarWhereWithAggregatesInput | PagoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pago"> | number
    catedraAlumnoId?: IntWithAggregatesFilter<"Pago"> | number
    fecha_pago?: DateTimeWithAggregatesFilter<"Pago"> | Date | string
    monto_pagado?: FloatWithAggregatesFilter<"Pago"> | number
    tipo_pago?: EnumTipoPagoWithAggregatesFilter<"Pago"> | $Enums.TipoPago
    periodo_cubierto?: StringNullableWithAggregatesFilter<"Pago"> | string | null
    confirmadoPorId?: IntNullableWithAggregatesFilter<"Pago"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"Pago"> | Date | string
  }

  export type PlanDeClasesWhereInput = {
    AND?: PlanDeClasesWhereInput | PlanDeClasesWhereInput[]
    OR?: PlanDeClasesWhereInput[]
    NOT?: PlanDeClasesWhereInput | PlanDeClasesWhereInput[]
    id?: IntFilter<"PlanDeClases"> | number
    titulo?: StringFilter<"PlanDeClases"> | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFilter<"PlanDeClases"> | $Enums.TipoOrganizacionPlan
    docenteId?: IntFilter<"PlanDeClases"> | number
    catedraId?: IntFilter<"PlanDeClases"> | number
    created_at?: DateTimeFilter<"PlanDeClases"> | Date | string
    updated_at?: DateTimeFilter<"PlanDeClases"> | Date | string
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    Docente?: XOR<DocenteScalarRelationFilter, DocenteWhereInput>
    UnidadPlan?: UnidadPlanListRelationFilter
  }

  export type PlanDeClasesOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    tipoOrganizacion?: SortOrder
    docenteId?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Catedra?: CatedraOrderByWithRelationInput
    Docente?: DocenteOrderByWithRelationInput
    UnidadPlan?: UnidadPlanOrderByRelationAggregateInput
  }

  export type PlanDeClasesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PlanDeClasesWhereInput | PlanDeClasesWhereInput[]
    OR?: PlanDeClasesWhereInput[]
    NOT?: PlanDeClasesWhereInput | PlanDeClasesWhereInput[]
    titulo?: StringFilter<"PlanDeClases"> | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFilter<"PlanDeClases"> | $Enums.TipoOrganizacionPlan
    docenteId?: IntFilter<"PlanDeClases"> | number
    catedraId?: IntFilter<"PlanDeClases"> | number
    created_at?: DateTimeFilter<"PlanDeClases"> | Date | string
    updated_at?: DateTimeFilter<"PlanDeClases"> | Date | string
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    Docente?: XOR<DocenteScalarRelationFilter, DocenteWhereInput>
    UnidadPlan?: UnidadPlanListRelationFilter
  }, "id">

  export type PlanDeClasesOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    tipoOrganizacion?: SortOrder
    docenteId?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: PlanDeClasesCountOrderByAggregateInput
    _avg?: PlanDeClasesAvgOrderByAggregateInput
    _max?: PlanDeClasesMaxOrderByAggregateInput
    _min?: PlanDeClasesMinOrderByAggregateInput
    _sum?: PlanDeClasesSumOrderByAggregateInput
  }

  export type PlanDeClasesScalarWhereWithAggregatesInput = {
    AND?: PlanDeClasesScalarWhereWithAggregatesInput | PlanDeClasesScalarWhereWithAggregatesInput[]
    OR?: PlanDeClasesScalarWhereWithAggregatesInput[]
    NOT?: PlanDeClasesScalarWhereWithAggregatesInput | PlanDeClasesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PlanDeClases"> | number
    titulo?: StringWithAggregatesFilter<"PlanDeClases"> | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanWithAggregatesFilter<"PlanDeClases"> | $Enums.TipoOrganizacionPlan
    docenteId?: IntWithAggregatesFilter<"PlanDeClases"> | number
    catedraId?: IntWithAggregatesFilter<"PlanDeClases"> | number
    created_at?: DateTimeWithAggregatesFilter<"PlanDeClases"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"PlanDeClases"> | Date | string
  }

  export type PreguntaWhereInput = {
    AND?: PreguntaWhereInput | PreguntaWhereInput[]
    OR?: PreguntaWhereInput[]
    NOT?: PreguntaWhereInput | PreguntaWhereInput[]
    id?: IntFilter<"Pregunta"> | number
    texto?: StringFilter<"Pregunta"> | string
    evaluacionId?: IntFilter<"Pregunta"> | number
    Opcion?: OpcionListRelationFilter
    Evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
    RespuestaAlumno?: RespuestaAlumnoListRelationFilter
  }

  export type PreguntaOrderByWithRelationInput = {
    id?: SortOrder
    texto?: SortOrder
    evaluacionId?: SortOrder
    Opcion?: OpcionOrderByRelationAggregateInput
    Evaluacion?: EvaluacionOrderByWithRelationInput
    RespuestaAlumno?: RespuestaAlumnoOrderByRelationAggregateInput
  }

  export type PreguntaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PreguntaWhereInput | PreguntaWhereInput[]
    OR?: PreguntaWhereInput[]
    NOT?: PreguntaWhereInput | PreguntaWhereInput[]
    texto?: StringFilter<"Pregunta"> | string
    evaluacionId?: IntFilter<"Pregunta"> | number
    Opcion?: OpcionListRelationFilter
    Evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
    RespuestaAlumno?: RespuestaAlumnoListRelationFilter
  }, "id">

  export type PreguntaOrderByWithAggregationInput = {
    id?: SortOrder
    texto?: SortOrder
    evaluacionId?: SortOrder
    _count?: PreguntaCountOrderByAggregateInput
    _avg?: PreguntaAvgOrderByAggregateInput
    _max?: PreguntaMaxOrderByAggregateInput
    _min?: PreguntaMinOrderByAggregateInput
    _sum?: PreguntaSumOrderByAggregateInput
  }

  export type PreguntaScalarWhereWithAggregatesInput = {
    AND?: PreguntaScalarWhereWithAggregatesInput | PreguntaScalarWhereWithAggregatesInput[]
    OR?: PreguntaScalarWhereWithAggregatesInput[]
    NOT?: PreguntaScalarWhereWithAggregatesInput | PreguntaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pregunta"> | number
    texto?: StringWithAggregatesFilter<"Pregunta"> | string
    evaluacionId?: IntWithAggregatesFilter<"Pregunta"> | number
  }

  export type PublicacionWhereInput = {
    AND?: PublicacionWhereInput | PublicacionWhereInput[]
    OR?: PublicacionWhereInput[]
    NOT?: PublicacionWhereInput | PublicacionWhereInput[]
    id?: IntFilter<"Publicacion"> | number
    titulo?: StringFilter<"Publicacion"> | string
    contenido?: StringFilter<"Publicacion"> | string
    tipo?: EnumTipoPublicacionFilter<"Publicacion"> | $Enums.TipoPublicacion
    catedraId?: IntFilter<"Publicacion"> | number
    autorAlumnoId?: IntNullableFilter<"Publicacion"> | number | null
    autorDocenteId?: IntNullableFilter<"Publicacion"> | number | null
    created_at?: DateTimeFilter<"Publicacion"> | Date | string
    updated_at?: DateTimeFilter<"Publicacion"> | Date | string
    tareaMaestraId?: IntNullableFilter<"Publicacion"> | number | null
    visibleToStudents?: BoolFilter<"Publicacion"> | boolean
    evaluacionAsignacionId?: IntNullableFilter<"Publicacion"> | number | null
    evaluacionMaestraId?: IntNullableFilter<"Publicacion"> | number | null
    ComentarioPublicacion?: ComentarioPublicacionListRelationFilter
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    EvaluacionAsignacion?: XOR<EvaluacionAsignacionNullableScalarRelationFilter, EvaluacionAsignacionWhereInput> | null
    Evaluacion?: XOR<EvaluacionNullableScalarRelationFilter, EvaluacionWhereInput> | null
    TareaMaestra?: XOR<TareaMaestraNullableScalarRelationFilter, TareaMaestraWhereInput> | null
    PublicacionInteraccion?: PublicacionInteraccionListRelationFilter
  }

  export type PublicacionOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    tipo?: SortOrder
    catedraId?: SortOrder
    autorAlumnoId?: SortOrderInput | SortOrder
    autorDocenteId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tareaMaestraId?: SortOrderInput | SortOrder
    visibleToStudents?: SortOrder
    evaluacionAsignacionId?: SortOrderInput | SortOrder
    evaluacionMaestraId?: SortOrderInput | SortOrder
    ComentarioPublicacion?: ComentarioPublicacionOrderByRelationAggregateInput
    Alumno?: AlumnoOrderByWithRelationInput
    Docente?: DocenteOrderByWithRelationInput
    Catedra?: CatedraOrderByWithRelationInput
    EvaluacionAsignacion?: EvaluacionAsignacionOrderByWithRelationInput
    Evaluacion?: EvaluacionOrderByWithRelationInput
    TareaMaestra?: TareaMaestraOrderByWithRelationInput
    PublicacionInteraccion?: PublicacionInteraccionOrderByRelationAggregateInput
  }

  export type PublicacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tareaMaestraId?: number
    evaluacionAsignacionId?: number
    evaluacionMaestraId?: number
    AND?: PublicacionWhereInput | PublicacionWhereInput[]
    OR?: PublicacionWhereInput[]
    NOT?: PublicacionWhereInput | PublicacionWhereInput[]
    titulo?: StringFilter<"Publicacion"> | string
    contenido?: StringFilter<"Publicacion"> | string
    tipo?: EnumTipoPublicacionFilter<"Publicacion"> | $Enums.TipoPublicacion
    catedraId?: IntFilter<"Publicacion"> | number
    autorAlumnoId?: IntNullableFilter<"Publicacion"> | number | null
    autorDocenteId?: IntNullableFilter<"Publicacion"> | number | null
    created_at?: DateTimeFilter<"Publicacion"> | Date | string
    updated_at?: DateTimeFilter<"Publicacion"> | Date | string
    visibleToStudents?: BoolFilter<"Publicacion"> | boolean
    ComentarioPublicacion?: ComentarioPublicacionListRelationFilter
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
    EvaluacionAsignacion?: XOR<EvaluacionAsignacionNullableScalarRelationFilter, EvaluacionAsignacionWhereInput> | null
    Evaluacion?: XOR<EvaluacionNullableScalarRelationFilter, EvaluacionWhereInput> | null
    TareaMaestra?: XOR<TareaMaestraNullableScalarRelationFilter, TareaMaestraWhereInput> | null
    PublicacionInteraccion?: PublicacionInteraccionListRelationFilter
  }, "id" | "tareaMaestraId" | "evaluacionAsignacionId" | "evaluacionMaestraId">

  export type PublicacionOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    tipo?: SortOrder
    catedraId?: SortOrder
    autorAlumnoId?: SortOrderInput | SortOrder
    autorDocenteId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tareaMaestraId?: SortOrderInput | SortOrder
    visibleToStudents?: SortOrder
    evaluacionAsignacionId?: SortOrderInput | SortOrder
    evaluacionMaestraId?: SortOrderInput | SortOrder
    _count?: PublicacionCountOrderByAggregateInput
    _avg?: PublicacionAvgOrderByAggregateInput
    _max?: PublicacionMaxOrderByAggregateInput
    _min?: PublicacionMinOrderByAggregateInput
    _sum?: PublicacionSumOrderByAggregateInput
  }

  export type PublicacionScalarWhereWithAggregatesInput = {
    AND?: PublicacionScalarWhereWithAggregatesInput | PublicacionScalarWhereWithAggregatesInput[]
    OR?: PublicacionScalarWhereWithAggregatesInput[]
    NOT?: PublicacionScalarWhereWithAggregatesInput | PublicacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Publicacion"> | number
    titulo?: StringWithAggregatesFilter<"Publicacion"> | string
    contenido?: StringWithAggregatesFilter<"Publicacion"> | string
    tipo?: EnumTipoPublicacionWithAggregatesFilter<"Publicacion"> | $Enums.TipoPublicacion
    catedraId?: IntWithAggregatesFilter<"Publicacion"> | number
    autorAlumnoId?: IntNullableWithAggregatesFilter<"Publicacion"> | number | null
    autorDocenteId?: IntNullableWithAggregatesFilter<"Publicacion"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"Publicacion"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Publicacion"> | Date | string
    tareaMaestraId?: IntNullableWithAggregatesFilter<"Publicacion"> | number | null
    visibleToStudents?: BoolWithAggregatesFilter<"Publicacion"> | boolean
    evaluacionAsignacionId?: IntNullableWithAggregatesFilter<"Publicacion"> | number | null
    evaluacionMaestraId?: IntNullableWithAggregatesFilter<"Publicacion"> | number | null
  }

  export type PublicacionInteraccionWhereInput = {
    AND?: PublicacionInteraccionWhereInput | PublicacionInteraccionWhereInput[]
    OR?: PublicacionInteraccionWhereInput[]
    NOT?: PublicacionInteraccionWhereInput | PublicacionInteraccionWhereInput[]
    id?: IntFilter<"PublicacionInteraccion"> | number
    publicacionId?: IntFilter<"PublicacionInteraccion"> | number
    alumnoId?: IntNullableFilter<"PublicacionInteraccion"> | number | null
    docenteId?: IntNullableFilter<"PublicacionInteraccion"> | number | null
    tipo?: EnumTipoInteraccionPublicacionFilter<"PublicacionInteraccion"> | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFilter<"PublicacionInteraccion"> | Date | string
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    Publicacion?: XOR<PublicacionScalarRelationFilter, PublicacionWhereInput>
  }

  export type PublicacionInteraccionOrderByWithRelationInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    alumnoId?: SortOrderInput | SortOrder
    docenteId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    created_at?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    Docente?: DocenteOrderByWithRelationInput
    Publicacion?: PublicacionOrderByWithRelationInput
  }

  export type PublicacionInteraccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    publicacionId_alumnoId?: PublicacionInteraccionPublicacionIdAlumnoIdCompoundUniqueInput
    publicacionId_docenteId?: PublicacionInteraccionPublicacionIdDocenteIdCompoundUniqueInput
    AND?: PublicacionInteraccionWhereInput | PublicacionInteraccionWhereInput[]
    OR?: PublicacionInteraccionWhereInput[]
    NOT?: PublicacionInteraccionWhereInput | PublicacionInteraccionWhereInput[]
    publicacionId?: IntFilter<"PublicacionInteraccion"> | number
    alumnoId?: IntNullableFilter<"PublicacionInteraccion"> | number | null
    docenteId?: IntNullableFilter<"PublicacionInteraccion"> | number | null
    tipo?: EnumTipoInteraccionPublicacionFilter<"PublicacionInteraccion"> | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFilter<"PublicacionInteraccion"> | Date | string
    Alumno?: XOR<AlumnoNullableScalarRelationFilter, AlumnoWhereInput> | null
    Docente?: XOR<DocenteNullableScalarRelationFilter, DocenteWhereInput> | null
    Publicacion?: XOR<PublicacionScalarRelationFilter, PublicacionWhereInput>
  }, "id" | "publicacionId_alumnoId" | "publicacionId_docenteId">

  export type PublicacionInteraccionOrderByWithAggregationInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    alumnoId?: SortOrderInput | SortOrder
    docenteId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    created_at?: SortOrder
    _count?: PublicacionInteraccionCountOrderByAggregateInput
    _avg?: PublicacionInteraccionAvgOrderByAggregateInput
    _max?: PublicacionInteraccionMaxOrderByAggregateInput
    _min?: PublicacionInteraccionMinOrderByAggregateInput
    _sum?: PublicacionInteraccionSumOrderByAggregateInput
  }

  export type PublicacionInteraccionScalarWhereWithAggregatesInput = {
    AND?: PublicacionInteraccionScalarWhereWithAggregatesInput | PublicacionInteraccionScalarWhereWithAggregatesInput[]
    OR?: PublicacionInteraccionScalarWhereWithAggregatesInput[]
    NOT?: PublicacionInteraccionScalarWhereWithAggregatesInput | PublicacionInteraccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PublicacionInteraccion"> | number
    publicacionId?: IntWithAggregatesFilter<"PublicacionInteraccion"> | number
    alumnoId?: IntNullableWithAggregatesFilter<"PublicacionInteraccion"> | number | null
    docenteId?: IntNullableWithAggregatesFilter<"PublicacionInteraccion"> | number | null
    tipo?: EnumTipoInteraccionPublicacionWithAggregatesFilter<"PublicacionInteraccion"> | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeWithAggregatesFilter<"PublicacionInteraccion"> | Date | string
  }

  export type PuntuacionWhereInput = {
    AND?: PuntuacionWhereInput | PuntuacionWhereInput[]
    OR?: PuntuacionWhereInput[]
    NOT?: PuntuacionWhereInput | PuntuacionWhereInput[]
    id?: IntFilter<"Puntuacion"> | number
    puntos?: IntFilter<"Puntuacion"> | number
    motivo?: StringFilter<"Puntuacion"> | string
    created_at?: DateTimeFilter<"Puntuacion"> | Date | string
    alumnoId?: IntFilter<"Puntuacion"> | number
    catedraId?: IntNullableFilter<"Puntuacion"> | number | null
    tipo?: EnumTipoPuntuacionFilter<"Puntuacion"> | $Enums.TipoPuntuacion
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    Catedra?: XOR<CatedraNullableScalarRelationFilter, CatedraWhereInput> | null
  }

  export type PuntuacionOrderByWithRelationInput = {
    id?: SortOrder
    puntos?: SortOrder
    motivo?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    catedraId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    Catedra?: CatedraOrderByWithRelationInput
  }

  export type PuntuacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PuntuacionWhereInput | PuntuacionWhereInput[]
    OR?: PuntuacionWhereInput[]
    NOT?: PuntuacionWhereInput | PuntuacionWhereInput[]
    puntos?: IntFilter<"Puntuacion"> | number
    motivo?: StringFilter<"Puntuacion"> | string
    created_at?: DateTimeFilter<"Puntuacion"> | Date | string
    alumnoId?: IntFilter<"Puntuacion"> | number
    catedraId?: IntNullableFilter<"Puntuacion"> | number | null
    tipo?: EnumTipoPuntuacionFilter<"Puntuacion"> | $Enums.TipoPuntuacion
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    Catedra?: XOR<CatedraNullableScalarRelationFilter, CatedraWhereInput> | null
  }, "id">

  export type PuntuacionOrderByWithAggregationInput = {
    id?: SortOrder
    puntos?: SortOrder
    motivo?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    catedraId?: SortOrderInput | SortOrder
    tipo?: SortOrder
    _count?: PuntuacionCountOrderByAggregateInput
    _avg?: PuntuacionAvgOrderByAggregateInput
    _max?: PuntuacionMaxOrderByAggregateInput
    _min?: PuntuacionMinOrderByAggregateInput
    _sum?: PuntuacionSumOrderByAggregateInput
  }

  export type PuntuacionScalarWhereWithAggregatesInput = {
    AND?: PuntuacionScalarWhereWithAggregatesInput | PuntuacionScalarWhereWithAggregatesInput[]
    OR?: PuntuacionScalarWhereWithAggregatesInput[]
    NOT?: PuntuacionScalarWhereWithAggregatesInput | PuntuacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Puntuacion"> | number
    puntos?: IntWithAggregatesFilter<"Puntuacion"> | number
    motivo?: StringWithAggregatesFilter<"Puntuacion"> | string
    created_at?: DateTimeWithAggregatesFilter<"Puntuacion"> | Date | string
    alumnoId?: IntWithAggregatesFilter<"Puntuacion"> | number
    catedraId?: IntNullableWithAggregatesFilter<"Puntuacion"> | number | null
    tipo?: EnumTipoPuntuacionWithAggregatesFilter<"Puntuacion"> | $Enums.TipoPuntuacion
  }

  export type RespuestaAlumnoWhereInput = {
    AND?: RespuestaAlumnoWhereInput | RespuestaAlumnoWhereInput[]
    OR?: RespuestaAlumnoWhereInput[]
    NOT?: RespuestaAlumnoWhereInput | RespuestaAlumnoWhereInput[]
    id?: IntFilter<"RespuestaAlumno"> | number
    created_at?: DateTimeFilter<"RespuestaAlumno"> | Date | string
    alumnoId?: IntFilter<"RespuestaAlumno"> | number
    preguntaId?: IntFilter<"RespuestaAlumno"> | number
    opcionElegidaId?: IntFilter<"RespuestaAlumno"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    Opcion?: XOR<OpcionScalarRelationFilter, OpcionWhereInput>
    Pregunta?: XOR<PreguntaScalarRelationFilter, PreguntaWhereInput>
  }

  export type RespuestaAlumnoOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    preguntaId?: SortOrder
    opcionElegidaId?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    Opcion?: OpcionOrderByWithRelationInput
    Pregunta?: PreguntaOrderByWithRelationInput
  }

  export type RespuestaAlumnoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    alumnoId_preguntaId?: RespuestaAlumnoAlumnoIdPreguntaIdCompoundUniqueInput
    AND?: RespuestaAlumnoWhereInput | RespuestaAlumnoWhereInput[]
    OR?: RespuestaAlumnoWhereInput[]
    NOT?: RespuestaAlumnoWhereInput | RespuestaAlumnoWhereInput[]
    created_at?: DateTimeFilter<"RespuestaAlumno"> | Date | string
    alumnoId?: IntFilter<"RespuestaAlumno"> | number
    preguntaId?: IntFilter<"RespuestaAlumno"> | number
    opcionElegidaId?: IntFilter<"RespuestaAlumno"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    Opcion?: XOR<OpcionScalarRelationFilter, OpcionWhereInput>
    Pregunta?: XOR<PreguntaScalarRelationFilter, PreguntaWhereInput>
  }, "id" | "alumnoId_preguntaId">

  export type RespuestaAlumnoOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    preguntaId?: SortOrder
    opcionElegidaId?: SortOrder
    _count?: RespuestaAlumnoCountOrderByAggregateInput
    _avg?: RespuestaAlumnoAvgOrderByAggregateInput
    _max?: RespuestaAlumnoMaxOrderByAggregateInput
    _min?: RespuestaAlumnoMinOrderByAggregateInput
    _sum?: RespuestaAlumnoSumOrderByAggregateInput
  }

  export type RespuestaAlumnoScalarWhereWithAggregatesInput = {
    AND?: RespuestaAlumnoScalarWhereWithAggregatesInput | RespuestaAlumnoScalarWhereWithAggregatesInput[]
    OR?: RespuestaAlumnoScalarWhereWithAggregatesInput[]
    NOT?: RespuestaAlumnoScalarWhereWithAggregatesInput | RespuestaAlumnoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"RespuestaAlumno"> | number
    created_at?: DateTimeWithAggregatesFilter<"RespuestaAlumno"> | Date | string
    alumnoId?: IntWithAggregatesFilter<"RespuestaAlumno"> | number
    preguntaId?: IntWithAggregatesFilter<"RespuestaAlumno"> | number
    opcionElegidaId?: IntWithAggregatesFilter<"RespuestaAlumno"> | number
  }

  export type TareaAsignacionWhereInput = {
    AND?: TareaAsignacionWhereInput | TareaAsignacionWhereInput[]
    OR?: TareaAsignacionWhereInput[]
    NOT?: TareaAsignacionWhereInput | TareaAsignacionWhereInput[]
    id?: IntFilter<"TareaAsignacion"> | number
    estado?: EnumEstadoTareaFilter<"TareaAsignacion"> | $Enums.EstadoTarea
    submission_path?: StringNullableFilter<"TareaAsignacion"> | string | null
    submission_date?: DateTimeNullableFilter<"TareaAsignacion"> | Date | string | null
    puntos_obtenidos?: IntNullableFilter<"TareaAsignacion"> | number | null
    created_at?: DateTimeFilter<"TareaAsignacion"> | Date | string
    updated_at?: DateTimeFilter<"TareaAsignacion"> | Date | string
    alumnoId?: IntFilter<"TareaAsignacion"> | number
    tareaMaestraId?: IntFilter<"TareaAsignacion"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    TareaMaestra?: XOR<TareaMaestraScalarRelationFilter, TareaMaestraWhereInput>
  }

  export type TareaAsignacionOrderByWithRelationInput = {
    id?: SortOrder
    estado?: SortOrder
    submission_path?: SortOrderInput | SortOrder
    submission_date?: SortOrderInput | SortOrder
    puntos_obtenidos?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    tareaMaestraId?: SortOrder
    Alumno?: AlumnoOrderByWithRelationInput
    TareaMaestra?: TareaMaestraOrderByWithRelationInput
  }

  export type TareaAsignacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    alumnoId_tareaMaestraId?: TareaAsignacionAlumnoIdTareaMaestraIdCompoundUniqueInput
    AND?: TareaAsignacionWhereInput | TareaAsignacionWhereInput[]
    OR?: TareaAsignacionWhereInput[]
    NOT?: TareaAsignacionWhereInput | TareaAsignacionWhereInput[]
    estado?: EnumEstadoTareaFilter<"TareaAsignacion"> | $Enums.EstadoTarea
    submission_path?: StringNullableFilter<"TareaAsignacion"> | string | null
    submission_date?: DateTimeNullableFilter<"TareaAsignacion"> | Date | string | null
    puntos_obtenidos?: IntNullableFilter<"TareaAsignacion"> | number | null
    created_at?: DateTimeFilter<"TareaAsignacion"> | Date | string
    updated_at?: DateTimeFilter<"TareaAsignacion"> | Date | string
    alumnoId?: IntFilter<"TareaAsignacion"> | number
    tareaMaestraId?: IntFilter<"TareaAsignacion"> | number
    Alumno?: XOR<AlumnoScalarRelationFilter, AlumnoWhereInput>
    TareaMaestra?: XOR<TareaMaestraScalarRelationFilter, TareaMaestraWhereInput>
  }, "id" | "alumnoId_tareaMaestraId">

  export type TareaAsignacionOrderByWithAggregationInput = {
    id?: SortOrder
    estado?: SortOrder
    submission_path?: SortOrderInput | SortOrder
    submission_date?: SortOrderInput | SortOrder
    puntos_obtenidos?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    tareaMaestraId?: SortOrder
    _count?: TareaAsignacionCountOrderByAggregateInput
    _avg?: TareaAsignacionAvgOrderByAggregateInput
    _max?: TareaAsignacionMaxOrderByAggregateInput
    _min?: TareaAsignacionMinOrderByAggregateInput
    _sum?: TareaAsignacionSumOrderByAggregateInput
  }

  export type TareaAsignacionScalarWhereWithAggregatesInput = {
    AND?: TareaAsignacionScalarWhereWithAggregatesInput | TareaAsignacionScalarWhereWithAggregatesInput[]
    OR?: TareaAsignacionScalarWhereWithAggregatesInput[]
    NOT?: TareaAsignacionScalarWhereWithAggregatesInput | TareaAsignacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TareaAsignacion"> | number
    estado?: EnumEstadoTareaWithAggregatesFilter<"TareaAsignacion"> | $Enums.EstadoTarea
    submission_path?: StringNullableWithAggregatesFilter<"TareaAsignacion"> | string | null
    submission_date?: DateTimeNullableWithAggregatesFilter<"TareaAsignacion"> | Date | string | null
    puntos_obtenidos?: IntNullableWithAggregatesFilter<"TareaAsignacion"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"TareaAsignacion"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"TareaAsignacion"> | Date | string
    alumnoId?: IntWithAggregatesFilter<"TareaAsignacion"> | number
    tareaMaestraId?: IntWithAggregatesFilter<"TareaAsignacion"> | number
  }

  export type TareaMaestraWhereInput = {
    AND?: TareaMaestraWhereInput | TareaMaestraWhereInput[]
    OR?: TareaMaestraWhereInput[]
    NOT?: TareaMaestraWhereInput | TareaMaestraWhereInput[]
    id?: IntFilter<"TareaMaestra"> | number
    titulo?: StringFilter<"TareaMaestra"> | string
    descripcion?: StringFilter<"TareaMaestra"> | string
    fecha_entrega?: DateTimeNullableFilter<"TareaMaestra"> | Date | string | null
    puntos_posibles?: IntFilter<"TareaMaestra"> | number
    recursos?: StringNullableListFilter<"TareaMaestra">
    multimedia_path?: StringNullableFilter<"TareaMaestra"> | string | null
    created_at?: DateTimeFilter<"TareaMaestra"> | Date | string
    updated_at?: DateTimeFilter<"TareaMaestra"> | Date | string
    catedraId?: IntFilter<"TareaMaestra"> | number
    publicacionId?: IntNullableFilter<"TareaMaestra"> | number | null
    Publicacion?: XOR<PublicacionNullableScalarRelationFilter, PublicacionWhereInput> | null
    TareaAsignacion?: TareaAsignacionListRelationFilter
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }

  export type TareaMaestraOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_entrega?: SortOrderInput | SortOrder
    puntos_posibles?: SortOrder
    recursos?: SortOrder
    multimedia_path?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
    publicacionId?: SortOrderInput | SortOrder
    Publicacion?: PublicacionOrderByWithRelationInput
    TareaAsignacion?: TareaAsignacionOrderByRelationAggregateInput
    Catedra?: CatedraOrderByWithRelationInput
  }

  export type TareaMaestraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    publicacionId?: number
    AND?: TareaMaestraWhereInput | TareaMaestraWhereInput[]
    OR?: TareaMaestraWhereInput[]
    NOT?: TareaMaestraWhereInput | TareaMaestraWhereInput[]
    titulo?: StringFilter<"TareaMaestra"> | string
    descripcion?: StringFilter<"TareaMaestra"> | string
    fecha_entrega?: DateTimeNullableFilter<"TareaMaestra"> | Date | string | null
    puntos_posibles?: IntFilter<"TareaMaestra"> | number
    recursos?: StringNullableListFilter<"TareaMaestra">
    multimedia_path?: StringNullableFilter<"TareaMaestra"> | string | null
    created_at?: DateTimeFilter<"TareaMaestra"> | Date | string
    updated_at?: DateTimeFilter<"TareaMaestra"> | Date | string
    catedraId?: IntFilter<"TareaMaestra"> | number
    Publicacion?: XOR<PublicacionNullableScalarRelationFilter, PublicacionWhereInput> | null
    TareaAsignacion?: TareaAsignacionListRelationFilter
    Catedra?: XOR<CatedraScalarRelationFilter, CatedraWhereInput>
  }, "id" | "publicacionId">

  export type TareaMaestraOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_entrega?: SortOrderInput | SortOrder
    puntos_posibles?: SortOrder
    recursos?: SortOrder
    multimedia_path?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
    publicacionId?: SortOrderInput | SortOrder
    _count?: TareaMaestraCountOrderByAggregateInput
    _avg?: TareaMaestraAvgOrderByAggregateInput
    _max?: TareaMaestraMaxOrderByAggregateInput
    _min?: TareaMaestraMinOrderByAggregateInput
    _sum?: TareaMaestraSumOrderByAggregateInput
  }

  export type TareaMaestraScalarWhereWithAggregatesInput = {
    AND?: TareaMaestraScalarWhereWithAggregatesInput | TareaMaestraScalarWhereWithAggregatesInput[]
    OR?: TareaMaestraScalarWhereWithAggregatesInput[]
    NOT?: TareaMaestraScalarWhereWithAggregatesInput | TareaMaestraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TareaMaestra"> | number
    titulo?: StringWithAggregatesFilter<"TareaMaestra"> | string
    descripcion?: StringWithAggregatesFilter<"TareaMaestra"> | string
    fecha_entrega?: DateTimeNullableWithAggregatesFilter<"TareaMaestra"> | Date | string | null
    puntos_posibles?: IntWithAggregatesFilter<"TareaMaestra"> | number
    recursos?: StringNullableListFilter<"TareaMaestra">
    multimedia_path?: StringNullableWithAggregatesFilter<"TareaMaestra"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"TareaMaestra"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"TareaMaestra"> | Date | string
    catedraId?: IntWithAggregatesFilter<"TareaMaestra"> | number
    publicacionId?: IntNullableWithAggregatesFilter<"TareaMaestra"> | number | null
  }

  export type UnidadPlanWhereInput = {
    AND?: UnidadPlanWhereInput | UnidadPlanWhereInput[]
    OR?: UnidadPlanWhereInput[]
    NOT?: UnidadPlanWhereInput | UnidadPlanWhereInput[]
    id?: IntFilter<"UnidadPlan"> | number
    planDeClasesId?: IntFilter<"UnidadPlan"> | number
    periodo?: StringFilter<"UnidadPlan"> | string
    contenido?: StringFilter<"UnidadPlan"> | string
    capacidades?: StringFilter<"UnidadPlan"> | string
    horasTeoricas?: IntFilter<"UnidadPlan"> | number
    horasPracticas?: IntFilter<"UnidadPlan"> | number
    estrategiasMetodologicas?: StringFilter<"UnidadPlan"> | string
    mediosVerificacionEvaluacion?: StringFilter<"UnidadPlan"> | string
    recursos?: StringNullableListFilter<"UnidadPlan">
    created_at?: DateTimeFilter<"UnidadPlan"> | Date | string
    updated_at?: DateTimeFilter<"UnidadPlan"> | Date | string
    PlanDeClases?: XOR<PlanDeClasesScalarRelationFilter, PlanDeClasesWhereInput>
  }

  export type UnidadPlanOrderByWithRelationInput = {
    id?: SortOrder
    planDeClasesId?: SortOrder
    periodo?: SortOrder
    contenido?: SortOrder
    capacidades?: SortOrder
    horasTeoricas?: SortOrder
    horasPracticas?: SortOrder
    estrategiasMetodologicas?: SortOrder
    mediosVerificacionEvaluacion?: SortOrder
    recursos?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    PlanDeClases?: PlanDeClasesOrderByWithRelationInput
  }

  export type UnidadPlanWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UnidadPlanWhereInput | UnidadPlanWhereInput[]
    OR?: UnidadPlanWhereInput[]
    NOT?: UnidadPlanWhereInput | UnidadPlanWhereInput[]
    planDeClasesId?: IntFilter<"UnidadPlan"> | number
    periodo?: StringFilter<"UnidadPlan"> | string
    contenido?: StringFilter<"UnidadPlan"> | string
    capacidades?: StringFilter<"UnidadPlan"> | string
    horasTeoricas?: IntFilter<"UnidadPlan"> | number
    horasPracticas?: IntFilter<"UnidadPlan"> | number
    estrategiasMetodologicas?: StringFilter<"UnidadPlan"> | string
    mediosVerificacionEvaluacion?: StringFilter<"UnidadPlan"> | string
    recursos?: StringNullableListFilter<"UnidadPlan">
    created_at?: DateTimeFilter<"UnidadPlan"> | Date | string
    updated_at?: DateTimeFilter<"UnidadPlan"> | Date | string
    PlanDeClases?: XOR<PlanDeClasesScalarRelationFilter, PlanDeClasesWhereInput>
  }, "id">

  export type UnidadPlanOrderByWithAggregationInput = {
    id?: SortOrder
    planDeClasesId?: SortOrder
    periodo?: SortOrder
    contenido?: SortOrder
    capacidades?: SortOrder
    horasTeoricas?: SortOrder
    horasPracticas?: SortOrder
    estrategiasMetodologicas?: SortOrder
    mediosVerificacionEvaluacion?: SortOrder
    recursos?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: UnidadPlanCountOrderByAggregateInput
    _avg?: UnidadPlanAvgOrderByAggregateInput
    _max?: UnidadPlanMaxOrderByAggregateInput
    _min?: UnidadPlanMinOrderByAggregateInput
    _sum?: UnidadPlanSumOrderByAggregateInput
  }

  export type UnidadPlanScalarWhereWithAggregatesInput = {
    AND?: UnidadPlanScalarWhereWithAggregatesInput | UnidadPlanScalarWhereWithAggregatesInput[]
    OR?: UnidadPlanScalarWhereWithAggregatesInput[]
    NOT?: UnidadPlanScalarWhereWithAggregatesInput | UnidadPlanScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UnidadPlan"> | number
    planDeClasesId?: IntWithAggregatesFilter<"UnidadPlan"> | number
    periodo?: StringWithAggregatesFilter<"UnidadPlan"> | string
    contenido?: StringWithAggregatesFilter<"UnidadPlan"> | string
    capacidades?: StringWithAggregatesFilter<"UnidadPlan"> | string
    horasTeoricas?: IntWithAggregatesFilter<"UnidadPlan"> | number
    horasPracticas?: IntWithAggregatesFilter<"UnidadPlan"> | number
    estrategiasMetodologicas?: StringWithAggregatesFilter<"UnidadPlan"> | string
    mediosVerificacionEvaluacion?: StringWithAggregatesFilter<"UnidadPlan"> | string
    recursos?: StringNullableListFilter<"UnidadPlan">
    created_at?: DateTimeWithAggregatesFilter<"UnidadPlan"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"UnidadPlan"> | Date | string
  }

  export type ComposerCreateInput = {
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutComposerInput
    comments?: CommentCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionCreateNestedManyWithoutComposerInput
    ratings?: RatingCreateNestedManyWithoutComposerInput
  }

  export type ComposerUncheckedCreateInput = {
    id?: number
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutComposerInput
    comments?: CommentUncheckedCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionUncheckedCreateNestedManyWithoutComposerInput
    ratings?: RatingUncheckedCreateNestedManyWithoutComposerInput
  }

  export type ComposerUpdateInput = {
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutComposerNestedInput
    comments?: CommentUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUpdateManyWithoutComposerNestedInput
    ratings?: RatingUpdateManyWithoutComposerNestedInput
  }

  export type ComposerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutComposerNestedInput
    comments?: CommentUncheckedUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUncheckedUpdateManyWithoutComposerNestedInput
    ratings?: RatingUncheckedUpdateManyWithoutComposerNestedInput
  }

  export type ComposerCreateManyInput = {
    id?: number
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
  }

  export type ComposerUpdateManyMutationInput = {
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ComposerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentCreateInput = {
    text: string
    created_at?: Date | string
    ip_address?: string | null
    name: string
    composer: ComposerCreateNestedOneWithoutCommentsInput
  }

  export type CommentUncheckedCreateInput = {
    id?: number
    text: string
    composerId: number
    created_at?: Date | string
    ip_address?: string | null
    name: string
  }

  export type CommentUpdateInput = {
    text?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    composer?: ComposerUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type CommentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    composerId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCreateManyInput = {
    id?: number
    text: string
    composerId: number
    created_at?: Date | string
    ip_address?: string | null
    name: string
  }

  export type CommentUpdateManyMutationInput = {
    text?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CommentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    composerId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
  }

  export type RatingCreateInput = {
    rating_value: number
    ip_address?: string | null
    created_at?: Date | string
    composer: ComposerCreateNestedOneWithoutRatingsInput
  }

  export type RatingUncheckedCreateInput = {
    id?: number
    rating_value: number
    ip_address?: string | null
    created_at?: Date | string
    composerId: number
  }

  export type RatingUpdateInput = {
    rating_value?: IntFieldUpdateOperationsInput | number
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    composer?: ComposerUpdateOneRequiredWithoutRatingsNestedInput
  }

  export type RatingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating_value?: IntFieldUpdateOperationsInput | number
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    composerId?: IntFieldUpdateOperationsInput | number
  }

  export type RatingCreateManyInput = {
    id?: number
    rating_value: number
    ip_address?: string | null
    created_at?: Date | string
    composerId: number
  }

  export type RatingUpdateManyMutationInput = {
    rating_value?: IntFieldUpdateOperationsInput | number
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating_value?: IntFieldUpdateOperationsInput | number
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    composerId?: IntFieldUpdateOperationsInput | number
  }

  export type OtpCreateInput = {
    email: string
    code: string
    expiresAt: Date | string
  }

  export type OtpUncheckedCreateInput = {
    id?: number
    email: string
    code: string
    expiresAt: Date | string
  }

  export type OtpUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OtpUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OtpCreateManyInput = {
    id?: number
    email: string
    code: string
    expiresAt: Date | string
  }

  export type OtpUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OtpUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    username: string
    password: string
  }

  export type UserUncheckedCreateInput = {
    id?: number
    username: string
    password: string
  }

  export type UserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateManyInput = {
    id?: number
    username: string
    password: string
  }

  export type UserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type AlumnoCreateInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoCreateManyInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
  }

  export type AlumnoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type AlumnoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type AsistenciaCreateInput = {
    presente: boolean
    created_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutAsistenciaInput
    DiaClase: DiaClaseCreateNestedOneWithoutAsistenciaInput
  }

  export type AsistenciaUncheckedCreateInput = {
    id?: number
    presente: boolean
    created_at?: Date | string
    alumnoId: number
    diaClaseId: number
  }

  export type AsistenciaUpdateInput = {
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutAsistenciaNestedInput
    DiaClase?: DiaClaseUpdateOneRequiredWithoutAsistenciaNestedInput
  }

  export type AsistenciaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    diaClaseId?: IntFieldUpdateOperationsInput | number
  }

  export type AsistenciaCreateManyInput = {
    id?: number
    presente: boolean
    created_at?: Date | string
    alumnoId: number
    diaClaseId: number
  }

  export type AsistenciaUpdateManyMutationInput = {
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsistenciaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    diaClaseId?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionEvaluacionCreateInput = {
    puntos: number
    created_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutCalificacionEvaluacionInput
    EvaluacionAsignacion: EvaluacionAsignacionCreateNestedOneWithoutCalificacionEvaluacionInput
  }

  export type CalificacionEvaluacionUncheckedCreateInput = {
    id?: number
    puntos: number
    created_at?: Date | string
    alumnoId: number
    evaluacionAsignacionId: number
  }

  export type CalificacionEvaluacionUpdateInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutCalificacionEvaluacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneRequiredWithoutCalificacionEvaluacionNestedInput
  }

  export type CalificacionEvaluacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    evaluacionAsignacionId?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionEvaluacionCreateManyInput = {
    id?: number
    puntos: number
    created_at?: Date | string
    alumnoId: number
    evaluacionAsignacionId: number
  }

  export type CalificacionEvaluacionUpdateManyMutationInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionEvaluacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    evaluacionAsignacionId?: IntFieldUpdateOperationsInput | number
  }

  export type CatedraCreateInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraCreateManyInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
  }

  export type CatedraUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
  }

  export type CatedraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
  }

  export type CatedraAlumnoCreateInput = {
    assignedAt?: Date | string
    assignedBy: string
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutCatedraAlumnoInput
    Catedra: CatedraCreateNestedOneWithoutCatedraAlumnoInput
    Composer?: ComposerCreateNestedOneWithoutCatedraAlumnoInput
    Pago?: PagoCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoUncheckedCreateInput = {
    catedraId: number
    alumnoId?: number | null
    assignedAt?: Date | string
    assignedBy: string
    composerId?: number | null
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Pago?: PagoUncheckedCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoUpdateInput = {
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutCatedraAlumnoNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutCatedraAlumnoNestedInput
    Composer?: ComposerUpdateOneWithoutCatedraAlumnoNestedInput
    Pago?: PagoUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateInput = {
    catedraId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    composerId?: NullableIntFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Pago?: PagoUncheckedUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoCreateManyInput = {
    catedraId: number
    alumnoId?: number | null
    assignedAt?: Date | string
    assignedBy: string
    composerId?: number | null
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
  }

  export type CatedraAlumnoUpdateManyMutationInput = {
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraAlumnoUncheckedUpdateManyInput = {
    catedraId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    composerId?: NullableIntFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraDiaHorarioCreateInput = {
    dia_semana: string
    hora_inicio: string
    hora_fin: string
    created_at?: Date | string
    updated_at?: Date | string
    Catedra: CatedraCreateNestedOneWithoutCatedraDiaHorarioInput
  }

  export type CatedraDiaHorarioUncheckedCreateInput = {
    id?: number
    dia_semana: string
    hora_inicio: string
    hora_fin: string
    catedraId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CatedraDiaHorarioUpdateInput = {
    dia_semana?: StringFieldUpdateOperationsInput | string
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Catedra?: CatedraUpdateOneRequiredWithoutCatedraDiaHorarioNestedInput
  }

  export type CatedraDiaHorarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    dia_semana?: StringFieldUpdateOperationsInput | string
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    catedraId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraDiaHorarioCreateManyInput = {
    id?: number
    dia_semana: string
    hora_inicio: string
    hora_fin: string
    catedraId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CatedraDiaHorarioUpdateManyMutationInput = {
    dia_semana?: StringFieldUpdateOperationsInput | string
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraDiaHorarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    dia_semana?: StringFieldUpdateOperationsInput | string
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    catedraId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioPublicacionCreateInput = {
    texto: string
    created_at?: Date | string
    updated_at?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutComentarioPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutComentarioPublicacionInput
    Publicacion: PublicacionCreateNestedOneWithoutComentarioPublicacionInput
  }

  export type ComentarioPublicacionUncheckedCreateInput = {
    id?: number
    texto: string
    publicacionId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ComentarioPublicacionUpdateInput = {
    texto?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutComentarioPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutComentarioPublicacionNestedInput
    Publicacion?: PublicacionUpdateOneRequiredWithoutComentarioPublicacionNestedInput
  }

  export type ComentarioPublicacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioPublicacionCreateManyInput = {
    id?: number
    texto: string
    publicacionId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ComentarioPublicacionUpdateManyMutationInput = {
    texto?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioPublicacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CostoCatedraCreateInput = {
    monto_matricula?: number | null
    monto_cuota?: number | null
    es_gratuita?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    Catedra: CatedraCreateNestedOneWithoutCostoCatedraInput
  }

  export type CostoCatedraUncheckedCreateInput = {
    id?: number
    catedraId: number
    monto_matricula?: number | null
    monto_cuota?: number | null
    es_gratuita?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CostoCatedraUpdateInput = {
    monto_matricula?: NullableFloatFieldUpdateOperationsInput | number | null
    monto_cuota?: NullableFloatFieldUpdateOperationsInput | number | null
    es_gratuita?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Catedra?: CatedraUpdateOneRequiredWithoutCostoCatedraNestedInput
  }

  export type CostoCatedraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    catedraId?: IntFieldUpdateOperationsInput | number
    monto_matricula?: NullableFloatFieldUpdateOperationsInput | number | null
    monto_cuota?: NullableFloatFieldUpdateOperationsInput | number | null
    es_gratuita?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CostoCatedraCreateManyInput = {
    id?: number
    catedraId: number
    monto_matricula?: number | null
    monto_cuota?: number | null
    es_gratuita?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CostoCatedraUpdateManyMutationInput = {
    monto_matricula?: NullableFloatFieldUpdateOperationsInput | number | null
    monto_cuota?: NullableFloatFieldUpdateOperationsInput | number | null
    es_gratuita?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CostoCatedraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    catedraId?: IntFieldUpdateOperationsInput | number
    monto_matricula?: NullableFloatFieldUpdateOperationsInput | number | null
    monto_cuota?: NullableFloatFieldUpdateOperationsInput | number | null
    es_gratuita?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiaClaseCreateInput = {
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
    Asistencia?: AsistenciaCreateNestedManyWithoutDiaClaseInput
    Catedra: CatedraCreateNestedOneWithoutDiaClaseInput
  }

  export type DiaClaseUncheckedCreateInput = {
    id?: number
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
    catedraId: number
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutDiaClaseInput
  }

  export type DiaClaseUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Asistencia?: AsistenciaUpdateManyWithoutDiaClaseNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutDiaClaseNestedInput
  }

  export type DiaClaseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutDiaClaseNestedInput
  }

  export type DiaClaseCreateManyInput = {
    id?: number
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
    catedraId: number
  }

  export type DiaClaseUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiaClaseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
  }

  export type DocenteCreateInput = {
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutDocenteInput
    Pago?: PagoCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUncheckedCreateInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraUncheckedCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutDocenteInput
    Pago?: PagoUncheckedCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUncheckedUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUncheckedUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteCreateManyInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
  }

  export type DocenteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocenteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EditSuggestionCreateInput = {
    first_name?: string | null
    last_name?: string | null
    birth_year?: number | null
    birth_month?: number | null
    birth_day?: number | null
    death_year?: number | null
    death_month?: number | null
    death_day?: number | null
    bio?: string | null
    notable_works?: string | null
    period?: string | null
    references?: string | null
    youtube_link?: string | null
    mainRole?: EditSuggestionCreatemainRoleInput | $Enums.RoleType[]
    reason: string
    status?: string
    suggester_email: string
    suggester_ip?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_student_contribution?: boolean | null
    student_first_name?: string | null
    student_last_name?: string | null
    points?: number
    Composer: ComposerCreateNestedOneWithoutEditSuggestionInput
  }

  export type EditSuggestionUncheckedCreateInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    birth_year?: number | null
    birth_month?: number | null
    birth_day?: number | null
    death_year?: number | null
    death_month?: number | null
    death_day?: number | null
    bio?: string | null
    notable_works?: string | null
    period?: string | null
    references?: string | null
    youtube_link?: string | null
    mainRole?: EditSuggestionCreatemainRoleInput | $Enums.RoleType[]
    reason: string
    status?: string
    suggester_email: string
    suggester_ip?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    composerId: number
    is_student_contribution?: boolean | null
    student_first_name?: string | null
    student_last_name?: string | null
    points?: number
  }

  export type EditSuggestionUpdateInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    birth_year?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    notable_works?: NullableStringFieldUpdateOperationsInput | string | null
    period?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    mainRole?: EditSuggestionUpdatemainRoleInput | $Enums.RoleType[]
    reason?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    suggester_email?: StringFieldUpdateOperationsInput | string
    suggester_ip?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_student_contribution?: NullableBoolFieldUpdateOperationsInput | boolean | null
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
    Composer?: ComposerUpdateOneRequiredWithoutEditSuggestionNestedInput
  }

  export type EditSuggestionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    birth_year?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    notable_works?: NullableStringFieldUpdateOperationsInput | string | null
    period?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    mainRole?: EditSuggestionUpdatemainRoleInput | $Enums.RoleType[]
    reason?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    suggester_email?: StringFieldUpdateOperationsInput | string
    suggester_ip?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    composerId?: IntFieldUpdateOperationsInput | number
    is_student_contribution?: NullableBoolFieldUpdateOperationsInput | boolean | null
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
  }

  export type EditSuggestionCreateManyInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    birth_year?: number | null
    birth_month?: number | null
    birth_day?: number | null
    death_year?: number | null
    death_month?: number | null
    death_day?: number | null
    bio?: string | null
    notable_works?: string | null
    period?: string | null
    references?: string | null
    youtube_link?: string | null
    mainRole?: EditSuggestionCreatemainRoleInput | $Enums.RoleType[]
    reason: string
    status?: string
    suggester_email: string
    suggester_ip?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    composerId: number
    is_student_contribution?: boolean | null
    student_first_name?: string | null
    student_last_name?: string | null
    points?: number
  }

  export type EditSuggestionUpdateManyMutationInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    birth_year?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    notable_works?: NullableStringFieldUpdateOperationsInput | string | null
    period?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    mainRole?: EditSuggestionUpdatemainRoleInput | $Enums.RoleType[]
    reason?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    suggester_email?: StringFieldUpdateOperationsInput | string
    suggester_ip?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_student_contribution?: NullableBoolFieldUpdateOperationsInput | boolean | null
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
  }

  export type EditSuggestionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    birth_year?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    notable_works?: NullableStringFieldUpdateOperationsInput | string | null
    period?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    mainRole?: EditSuggestionUpdatemainRoleInput | $Enums.RoleType[]
    reason?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    suggester_email?: StringFieldUpdateOperationsInput | string
    suggester_ip?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    composerId?: IntFieldUpdateOperationsInput | number
    is_student_contribution?: NullableBoolFieldUpdateOperationsInput | boolean | null
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
  }

  export type EvaluacionCreateInput = {
    titulo: string
    created_at?: Date | string
    fecha_limite?: Date | string | null
    isMaster?: boolean
    Catedra: CatedraCreateNestedOneWithoutEvaluacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutEvaluacionInput
    Pregunta?: PreguntaCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateInput = {
    id?: number
    titulo: string
    created_at?: Date | string
    catedraId: number
    fecha_limite?: Date | string | null
    isMaster?: boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutEvaluacionInput
    Pregunta?: PreguntaUncheckedCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    Catedra?: CatedraUpdateOneRequiredWithoutEvaluacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutEvaluacionNestedInput
    Pregunta?: PreguntaUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    Pregunta?: PreguntaUncheckedUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionCreateManyInput = {
    id?: number
    titulo: string
    created_at?: Date | string
    catedraId: number
    fecha_limite?: Date | string | null
    isMaster?: boolean
  }

  export type EvaluacionUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EvaluacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EvaluacionAsignacionCreateInput = {
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
    Alumno: AlumnoCreateNestedOneWithoutEvaluacionAsignacionInput
    Evaluacion: EvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionUncheckedCreateInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    evaluacionId: number
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionUpdateInput = {
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateOneWithoutEvaluacionAsignacionNestedInput
    Alumno?: AlumnoUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
    Evaluacion?: EvaluacionUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    evaluacionId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionCreateManyInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    evaluacionId: number
    publicacionId?: number | null
  }

  export type EvaluacionAsignacionUpdateManyMutationInput = {
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EvaluacionAsignacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    evaluacionId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OpcionCreateInput = {
    texto: string
    es_correcta?: boolean
    Pregunta: PreguntaCreateNestedOneWithoutOpcionInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutOpcionInput
  }

  export type OpcionUncheckedCreateInput = {
    id?: number
    texto: string
    es_correcta?: boolean
    preguntaId: number
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutOpcionInput
  }

  export type OpcionUpdateInput = {
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    Pregunta?: PreguntaUpdateOneRequiredWithoutOpcionNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutOpcionNestedInput
  }

  export type OpcionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    preguntaId?: IntFieldUpdateOperationsInput | number
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutOpcionNestedInput
  }

  export type OpcionCreateManyInput = {
    id?: number
    texto: string
    es_correcta?: boolean
    preguntaId: number
  }

  export type OpcionUpdateManyMutationInput = {
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OpcionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    preguntaId?: IntFieldUpdateOperationsInput | number
  }

  export type PagoCreateInput = {
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    created_at?: Date | string
    CatedraAlumno: CatedraAlumnoCreateNestedOneWithoutPagoInput
    Docente?: DocenteCreateNestedOneWithoutPagoInput
  }

  export type PagoUncheckedCreateInput = {
    id?: number
    catedraAlumnoId: number
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    confirmadoPorId?: number | null
    created_at?: Date | string
  }

  export type PagoUpdateInput = {
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    CatedraAlumno?: CatedraAlumnoUpdateOneRequiredWithoutPagoNestedInput
    Docente?: DocenteUpdateOneWithoutPagoNestedInput
  }

  export type PagoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    catedraAlumnoId?: IntFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    confirmadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoCreateManyInput = {
    id?: number
    catedraAlumnoId: number
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    confirmadoPorId?: number | null
    created_at?: Date | string
  }

  export type PagoUpdateManyMutationInput = {
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    catedraAlumnoId?: IntFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    confirmadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlanDeClasesCreateInput = {
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    created_at?: Date | string
    updated_at?: Date | string
    Catedra: CatedraCreateNestedOneWithoutPlanDeClasesInput
    Docente: DocenteCreateNestedOneWithoutPlanDeClasesInput
    UnidadPlan?: UnidadPlanCreateNestedManyWithoutPlanDeClasesInput
  }

  export type PlanDeClasesUncheckedCreateInput = {
    id?: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    docenteId: number
    catedraId: number
    created_at?: Date | string
    updated_at?: Date | string
    UnidadPlan?: UnidadPlanUncheckedCreateNestedManyWithoutPlanDeClasesInput
  }

  export type PlanDeClasesUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Catedra?: CatedraUpdateOneRequiredWithoutPlanDeClasesNestedInput
    Docente?: DocenteUpdateOneRequiredWithoutPlanDeClasesNestedInput
    UnidadPlan?: UnidadPlanUpdateManyWithoutPlanDeClasesNestedInput
  }

  export type PlanDeClasesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    docenteId?: IntFieldUpdateOperationsInput | number
    catedraId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    UnidadPlan?: UnidadPlanUncheckedUpdateManyWithoutPlanDeClasesNestedInput
  }

  export type PlanDeClasesCreateManyInput = {
    id?: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    docenteId: number
    catedraId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PlanDeClasesUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlanDeClasesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    docenteId?: IntFieldUpdateOperationsInput | number
    catedraId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PreguntaCreateInput = {
    texto: string
    Opcion?: OpcionCreateNestedManyWithoutPreguntaInput
    Evaluacion: EvaluacionCreateNestedOneWithoutPreguntaInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutPreguntaInput
  }

  export type PreguntaUncheckedCreateInput = {
    id?: number
    texto: string
    evaluacionId: number
    Opcion?: OpcionUncheckedCreateNestedManyWithoutPreguntaInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutPreguntaInput
  }

  export type PreguntaUpdateInput = {
    texto?: StringFieldUpdateOperationsInput | string
    Opcion?: OpcionUpdateManyWithoutPreguntaNestedInput
    Evaluacion?: EvaluacionUpdateOneRequiredWithoutPreguntaNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutPreguntaNestedInput
  }

  export type PreguntaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    evaluacionId?: IntFieldUpdateOperationsInput | number
    Opcion?: OpcionUncheckedUpdateManyWithoutPreguntaNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutPreguntaNestedInput
  }

  export type PreguntaCreateManyInput = {
    id?: number
    texto: string
    evaluacionId: number
  }

  export type PreguntaUpdateManyMutationInput = {
    texto?: StringFieldUpdateOperationsInput | string
  }

  export type PreguntaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    evaluacionId?: IntFieldUpdateOperationsInput | number
  }

  export type PublicacionCreateInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionCreateManyInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
  }

  export type PublicacionUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PublicacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PublicacionInteraccionCreateInput = {
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInteraccionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInteraccionInput
    Publicacion: PublicacionCreateNestedOneWithoutPublicacionInteraccionInput
  }

  export type PublicacionInteraccionUncheckedCreateInput = {
    id?: number
    publicacionId: number
    alumnoId?: number | null
    docenteId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type PublicacionInteraccionUpdateInput = {
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutPublicacionInteraccionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionInteraccionNestedInput
    Publicacion?: PublicacionUpdateOneRequiredWithoutPublicacionInteraccionNestedInput
  }

  export type PublicacionInteraccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionInteraccionCreateManyInput = {
    id?: number
    publicacionId: number
    alumnoId?: number | null
    docenteId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type PublicacionInteraccionUpdateManyMutationInput = {
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionInteraccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PuntuacionCreateInput = {
    puntos: number
    motivo: string
    created_at?: Date | string
    tipo: $Enums.TipoPuntuacion
    Alumno: AlumnoCreateNestedOneWithoutPuntuacionInput
    Catedra?: CatedraCreateNestedOneWithoutPuntuacionInput
  }

  export type PuntuacionUncheckedCreateInput = {
    id?: number
    puntos: number
    motivo: string
    created_at?: Date | string
    alumnoId: number
    catedraId?: number | null
    tipo: $Enums.TipoPuntuacion
  }

  export type PuntuacionUpdateInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
    Alumno?: AlumnoUpdateOneRequiredWithoutPuntuacionNestedInput
    Catedra?: CatedraUpdateOneWithoutPuntuacionNestedInput
  }

  export type PuntuacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    catedraId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
  }

  export type PuntuacionCreateManyInput = {
    id?: number
    puntos: number
    motivo: string
    created_at?: Date | string
    alumnoId: number
    catedraId?: number | null
    tipo: $Enums.TipoPuntuacion
  }

  export type PuntuacionUpdateManyMutationInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
  }

  export type PuntuacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    catedraId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
  }

  export type RespuestaAlumnoCreateInput = {
    created_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutRespuestaAlumnoInput
    Opcion: OpcionCreateNestedOneWithoutRespuestaAlumnoInput
    Pregunta: PreguntaCreateNestedOneWithoutRespuestaAlumnoInput
  }

  export type RespuestaAlumnoUncheckedCreateInput = {
    id?: number
    created_at?: Date | string
    alumnoId: number
    preguntaId: number
    opcionElegidaId: number
  }

  export type RespuestaAlumnoUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
    Opcion?: OpcionUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
    Pregunta?: PreguntaUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
  }

  export type RespuestaAlumnoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    preguntaId?: IntFieldUpdateOperationsInput | number
    opcionElegidaId?: IntFieldUpdateOperationsInput | number
  }

  export type RespuestaAlumnoCreateManyInput = {
    id?: number
    created_at?: Date | string
    alumnoId: number
    preguntaId: number
    opcionElegidaId: number
  }

  export type RespuestaAlumnoUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RespuestaAlumnoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    preguntaId?: IntFieldUpdateOperationsInput | number
    opcionElegidaId?: IntFieldUpdateOperationsInput | number
  }

  export type TareaAsignacionCreateInput = {
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutTareaAsignacionInput
    TareaMaestra: TareaMaestraCreateNestedOneWithoutTareaAsignacionInput
  }

  export type TareaAsignacionUncheckedCreateInput = {
    id?: number
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    tareaMaestraId: number
  }

  export type TareaAsignacionUpdateInput = {
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutTareaAsignacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneRequiredWithoutTareaAsignacionNestedInput
  }

  export type TareaAsignacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    tareaMaestraId?: IntFieldUpdateOperationsInput | number
  }

  export type TareaAsignacionCreateManyInput = {
    id?: number
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    tareaMaestraId: number
  }

  export type TareaAsignacionUpdateManyMutationInput = {
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TareaAsignacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    tareaMaestraId?: IntFieldUpdateOperationsInput | number
  }

  export type TareaMaestraCreateInput = {
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    Publicacion?: PublicacionCreateNestedOneWithoutTareaMaestraInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutTareaMaestraInput
    Catedra: CatedraCreateNestedOneWithoutTareaMaestraInput
  }

  export type TareaMaestraUncheckedCreateInput = {
    id?: number
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    catedraId: number
    publicacionId?: number | null
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutTareaMaestraInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutTareaMaestraInput
  }

  export type TareaMaestraUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Publicacion?: PublicacionUpdateOneWithoutTareaMaestraNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutTareaMaestraNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutTareaMaestraNestedInput
  }

  export type TareaMaestraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Publicacion?: PublicacionUncheckedUpdateOneWithoutTareaMaestraNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutTareaMaestraNestedInput
  }

  export type TareaMaestraCreateManyInput = {
    id?: number
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    catedraId: number
    publicacionId?: number | null
  }

  export type TareaMaestraUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TareaMaestraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UnidadPlanCreateInput = {
    periodo: string
    contenido: string
    capacidades: string
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: string
    mediosVerificacionEvaluacion: string
    recursos?: UnidadPlanCreaterecursosInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
    PlanDeClases: PlanDeClasesCreateNestedOneWithoutUnidadPlanInput
  }

  export type UnidadPlanUncheckedCreateInput = {
    id?: number
    planDeClasesId: number
    periodo: string
    contenido: string
    capacidades: string
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: string
    mediosVerificacionEvaluacion: string
    recursos?: UnidadPlanCreaterecursosInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UnidadPlanUpdateInput = {
    periodo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    capacidades?: StringFieldUpdateOperationsInput | string
    horasTeoricas?: IntFieldUpdateOperationsInput | number
    horasPracticas?: IntFieldUpdateOperationsInput | number
    estrategiasMetodologicas?: StringFieldUpdateOperationsInput | string
    mediosVerificacionEvaluacion?: StringFieldUpdateOperationsInput | string
    recursos?: UnidadPlanUpdaterecursosInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    PlanDeClases?: PlanDeClasesUpdateOneRequiredWithoutUnidadPlanNestedInput
  }

  export type UnidadPlanUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    planDeClasesId?: IntFieldUpdateOperationsInput | number
    periodo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    capacidades?: StringFieldUpdateOperationsInput | string
    horasTeoricas?: IntFieldUpdateOperationsInput | number
    horasPracticas?: IntFieldUpdateOperationsInput | number
    estrategiasMetodologicas?: StringFieldUpdateOperationsInput | string
    mediosVerificacionEvaluacion?: StringFieldUpdateOperationsInput | string
    recursos?: UnidadPlanUpdaterecursosInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnidadPlanCreateManyInput = {
    id?: number
    planDeClasesId: number
    periodo: string
    contenido: string
    capacidades: string
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: string
    mediosVerificacionEvaluacion: string
    recursos?: UnidadPlanCreaterecursosInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UnidadPlanUpdateManyMutationInput = {
    periodo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    capacidades?: StringFieldUpdateOperationsInput | string
    horasTeoricas?: IntFieldUpdateOperationsInput | number
    horasPracticas?: IntFieldUpdateOperationsInput | number
    estrategiasMetodologicas?: StringFieldUpdateOperationsInput | string
    mediosVerificacionEvaluacion?: StringFieldUpdateOperationsInput | string
    recursos?: UnidadPlanUpdaterecursosInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnidadPlanUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    planDeClasesId?: IntFieldUpdateOperationsInput | number
    periodo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    capacidades?: StringFieldUpdateOperationsInput | string
    horasTeoricas?: IntFieldUpdateOperationsInput | number
    horasPracticas?: IntFieldUpdateOperationsInput | number
    estrategiasMetodologicas?: StringFieldUpdateOperationsInput | string
    mediosVerificacionEvaluacion?: StringFieldUpdateOperationsInput | string
    recursos?: UnidadPlanUpdaterecursosInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumRoleTypeNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel> | null
    has?: $Enums.RoleType | EnumRoleTypeFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    hasSome?: $Enums.RoleType[] | ListEnumRoleTypeFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type CatedraAlumnoListRelationFilter = {
    every?: CatedraAlumnoWhereInput
    some?: CatedraAlumnoWhereInput
    none?: CatedraAlumnoWhereInput
  }

  export type CommentListRelationFilter = {
    every?: CommentWhereInput
    some?: CommentWhereInput
    none?: CommentWhereInput
  }

  export type EditSuggestionListRelationFilter = {
    every?: EditSuggestionWhereInput
    some?: EditSuggestionWhereInput
    none?: EditSuggestionWhereInput
  }

  export type RatingListRelationFilter = {
    every?: RatingWhereInput
    some?: RatingWhereInput
    none?: RatingWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CatedraAlumnoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EditSuggestionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RatingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ComposerCountOrderByAggregateInput = {
    id?: SortOrder
    bio?: SortOrder
    birth_day?: SortOrder
    birth_month?: SortOrder
    birth_year?: SortOrder
    created_at?: SortOrder
    death_day?: SortOrder
    death_month?: SortOrder
    death_year?: SortOrder
    email?: SortOrder
    first_name?: SortOrder
    ip_address?: SortOrder
    last_name?: SortOrder
    notable_works?: SortOrder
    photo_url?: SortOrder
    quality?: SortOrder
    references?: SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    youtube_link?: SortOrder
    period?: SortOrder
    mainRole?: SortOrder
    completeness_score?: SortOrder
    rejection_reason?: SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrder
    student_last_name?: SortOrder
    suggestion_reason?: SortOrder
  }

  export type ComposerAvgOrderByAggregateInput = {
    id?: SortOrder
    birth_day?: SortOrder
    birth_month?: SortOrder
    birth_year?: SortOrder
    death_day?: SortOrder
    death_month?: SortOrder
    death_year?: SortOrder
    completeness_score?: SortOrder
  }

  export type ComposerMaxOrderByAggregateInput = {
    id?: SortOrder
    bio?: SortOrder
    birth_day?: SortOrder
    birth_month?: SortOrder
    birth_year?: SortOrder
    created_at?: SortOrder
    death_day?: SortOrder
    death_month?: SortOrder
    death_year?: SortOrder
    email?: SortOrder
    first_name?: SortOrder
    ip_address?: SortOrder
    last_name?: SortOrder
    notable_works?: SortOrder
    photo_url?: SortOrder
    quality?: SortOrder
    references?: SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    youtube_link?: SortOrder
    period?: SortOrder
    completeness_score?: SortOrder
    rejection_reason?: SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrder
    student_last_name?: SortOrder
    suggestion_reason?: SortOrder
  }

  export type ComposerMinOrderByAggregateInput = {
    id?: SortOrder
    bio?: SortOrder
    birth_day?: SortOrder
    birth_month?: SortOrder
    birth_year?: SortOrder
    created_at?: SortOrder
    death_day?: SortOrder
    death_month?: SortOrder
    death_year?: SortOrder
    email?: SortOrder
    first_name?: SortOrder
    ip_address?: SortOrder
    last_name?: SortOrder
    notable_works?: SortOrder
    photo_url?: SortOrder
    quality?: SortOrder
    references?: SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    youtube_link?: SortOrder
    period?: SortOrder
    completeness_score?: SortOrder
    rejection_reason?: SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrder
    student_last_name?: SortOrder
    suggestion_reason?: SortOrder
  }

  export type ComposerSumOrderByAggregateInput = {
    id?: SortOrder
    birth_day?: SortOrder
    birth_month?: SortOrder
    birth_year?: SortOrder
    death_day?: SortOrder
    death_month?: SortOrder
    death_year?: SortOrder
    completeness_score?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type ComposerScalarRelationFilter = {
    is?: ComposerWhereInput
    isNot?: ComposerWhereInput
  }

  export type CommentCountOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    composerId?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
    name?: SortOrder
  }

  export type CommentAvgOrderByAggregateInput = {
    id?: SortOrder
    composerId?: SortOrder
  }

  export type CommentMaxOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    composerId?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
    name?: SortOrder
  }

  export type CommentMinOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    composerId?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
    name?: SortOrder
  }

  export type CommentSumOrderByAggregateInput = {
    id?: SortOrder
    composerId?: SortOrder
  }

  export type RatingComposerIdIp_addressCompoundUniqueInput = {
    composerId: number
    ip_address: string
  }

  export type RatingCountOrderByAggregateInput = {
    id?: SortOrder
    rating_value?: SortOrder
    ip_address?: SortOrder
    created_at?: SortOrder
    composerId?: SortOrder
  }

  export type RatingAvgOrderByAggregateInput = {
    id?: SortOrder
    rating_value?: SortOrder
    composerId?: SortOrder
  }

  export type RatingMaxOrderByAggregateInput = {
    id?: SortOrder
    rating_value?: SortOrder
    ip_address?: SortOrder
    created_at?: SortOrder
    composerId?: SortOrder
  }

  export type RatingMinOrderByAggregateInput = {
    id?: SortOrder
    rating_value?: SortOrder
    ip_address?: SortOrder
    created_at?: SortOrder
    composerId?: SortOrder
  }

  export type RatingSumOrderByAggregateInput = {
    id?: SortOrder
    rating_value?: SortOrder
    composerId?: SortOrder
  }

  export type OtpCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    expiresAt?: SortOrder
  }

  export type OtpAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type OtpMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    expiresAt?: SortOrder
  }

  export type OtpMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    expiresAt?: SortOrder
  }

  export type OtpSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type AsistenciaListRelationFilter = {
    every?: AsistenciaWhereInput
    some?: AsistenciaWhereInput
    none?: AsistenciaWhereInput
  }

  export type CalificacionEvaluacionListRelationFilter = {
    every?: CalificacionEvaluacionWhereInput
    some?: CalificacionEvaluacionWhereInput
    none?: CalificacionEvaluacionWhereInput
  }

  export type ComentarioPublicacionListRelationFilter = {
    every?: ComentarioPublicacionWhereInput
    some?: ComentarioPublicacionWhereInput
    none?: ComentarioPublicacionWhereInput
  }

  export type EvaluacionAsignacionListRelationFilter = {
    every?: EvaluacionAsignacionWhereInput
    some?: EvaluacionAsignacionWhereInput
    none?: EvaluacionAsignacionWhereInput
  }

  export type PublicacionListRelationFilter = {
    every?: PublicacionWhereInput
    some?: PublicacionWhereInput
    none?: PublicacionWhereInput
  }

  export type PublicacionInteraccionListRelationFilter = {
    every?: PublicacionInteraccionWhereInput
    some?: PublicacionInteraccionWhereInput
    none?: PublicacionInteraccionWhereInput
  }

  export type PuntuacionListRelationFilter = {
    every?: PuntuacionWhereInput
    some?: PuntuacionWhereInput
    none?: PuntuacionWhereInput
  }

  export type RespuestaAlumnoListRelationFilter = {
    every?: RespuestaAlumnoWhereInput
    some?: RespuestaAlumnoWhereInput
    none?: RespuestaAlumnoWhereInput
  }

  export type TareaAsignacionListRelationFilter = {
    every?: TareaAsignacionWhereInput
    some?: TareaAsignacionWhereInput
    none?: TareaAsignacionWhereInput
  }

  export type AsistenciaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CalificacionEvaluacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ComentarioPublicacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EvaluacionAsignacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PublicacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PublicacionInteraccionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PuntuacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RespuestaAlumnoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TareaAsignacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlumnoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    instrumento?: SortOrder
    detalles_adicionales?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    nombre_tutor?: SortOrder
    telefono_tutor?: SortOrder
    vive_con_padres?: SortOrder
  }

  export type AlumnoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type AlumnoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    instrumento?: SortOrder
    detalles_adicionales?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    nombre_tutor?: SortOrder
    telefono_tutor?: SortOrder
    vive_con_padres?: SortOrder
  }

  export type AlumnoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    direccion?: SortOrder
    instrumento?: SortOrder
    detalles_adicionales?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    nombre_tutor?: SortOrder
    telefono_tutor?: SortOrder
    vive_con_padres?: SortOrder
  }

  export type AlumnoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type AlumnoScalarRelationFilter = {
    is?: AlumnoWhereInput
    isNot?: AlumnoWhereInput
  }

  export type DiaClaseScalarRelationFilter = {
    is?: DiaClaseWhereInput
    isNot?: DiaClaseWhereInput
  }

  export type AsistenciaAlumnoIdDiaClaseIdCompoundUniqueInput = {
    alumnoId: number
    diaClaseId: number
  }

  export type AsistenciaCountOrderByAggregateInput = {
    id?: SortOrder
    presente?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    diaClaseId?: SortOrder
  }

  export type AsistenciaAvgOrderByAggregateInput = {
    id?: SortOrder
    alumnoId?: SortOrder
    diaClaseId?: SortOrder
  }

  export type AsistenciaMaxOrderByAggregateInput = {
    id?: SortOrder
    presente?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    diaClaseId?: SortOrder
  }

  export type AsistenciaMinOrderByAggregateInput = {
    id?: SortOrder
    presente?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    diaClaseId?: SortOrder
  }

  export type AsistenciaSumOrderByAggregateInput = {
    id?: SortOrder
    alumnoId?: SortOrder
    diaClaseId?: SortOrder
  }

  export type EvaluacionAsignacionScalarRelationFilter = {
    is?: EvaluacionAsignacionWhereInput
    isNot?: EvaluacionAsignacionWhereInput
  }

  export type CalificacionEvaluacionAlumnoIdEvaluacionAsignacionIdCompoundUniqueInput = {
    alumnoId: number
    evaluacionAsignacionId: number
  }

  export type CalificacionEvaluacionCountOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionAsignacionId?: SortOrder
  }

  export type CalificacionEvaluacionAvgOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    alumnoId?: SortOrder
    evaluacionAsignacionId?: SortOrder
  }

  export type CalificacionEvaluacionMaxOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionAsignacionId?: SortOrder
  }

  export type CalificacionEvaluacionMinOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionAsignacionId?: SortOrder
  }

  export type CalificacionEvaluacionSumOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    alumnoId?: SortOrder
    evaluacionAsignacionId?: SortOrder
  }

  export type EnumModalidadPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.ModalidadPago | EnumModalidadPagoFieldRefInput<$PrismaModel>
    in?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumModalidadPagoFilter<$PrismaModel> | $Enums.ModalidadPago
  }

  export type DocenteNullableScalarRelationFilter = {
    is?: DocenteWhereInput | null
    isNot?: DocenteWhereInput | null
  }

  export type CatedraDiaHorarioListRelationFilter = {
    every?: CatedraDiaHorarioWhereInput
    some?: CatedraDiaHorarioWhereInput
    none?: CatedraDiaHorarioWhereInput
  }

  export type CostoCatedraNullableScalarRelationFilter = {
    is?: CostoCatedraWhereInput | null
    isNot?: CostoCatedraWhereInput | null
  }

  export type DiaClaseListRelationFilter = {
    every?: DiaClaseWhereInput
    some?: DiaClaseWhereInput
    none?: DiaClaseWhereInput
  }

  export type EvaluacionListRelationFilter = {
    every?: EvaluacionWhereInput
    some?: EvaluacionWhereInput
    none?: EvaluacionWhereInput
  }

  export type PlanDeClasesListRelationFilter = {
    every?: PlanDeClasesWhereInput
    some?: PlanDeClasesWhereInput
    none?: PlanDeClasesWhereInput
  }

  export type TareaMaestraListRelationFilter = {
    every?: TareaMaestraWhereInput
    some?: TareaMaestraWhereInput
    none?: TareaMaestraWhereInput
  }

  export type CatedraDiaHorarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DiaClaseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EvaluacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PlanDeClasesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TareaMaestraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CatedraCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    institucion?: SortOrder
    turno?: SortOrder
    aula?: SortOrder
    dias?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    docenteId?: SortOrder
    modalidad_pago?: SortOrder
  }

  export type CatedraAvgOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
    docenteId?: SortOrder
  }

  export type CatedraMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    institucion?: SortOrder
    turno?: SortOrder
    aula?: SortOrder
    dias?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    docenteId?: SortOrder
    modalidad_pago?: SortOrder
  }

  export type CatedraMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    anio?: SortOrder
    institucion?: SortOrder
    turno?: SortOrder
    aula?: SortOrder
    dias?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    docenteId?: SortOrder
    modalidad_pago?: SortOrder
  }

  export type CatedraSumOrderByAggregateInput = {
    id?: SortOrder
    anio?: SortOrder
    docenteId?: SortOrder
  }

  export type EnumModalidadPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModalidadPago | EnumModalidadPagoFieldRefInput<$PrismaModel>
    in?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumModalidadPagoWithAggregatesFilter<$PrismaModel> | $Enums.ModalidadPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModalidadPagoFilter<$PrismaModel>
    _max?: NestedEnumModalidadPagoFilter<$PrismaModel>
  }

  export type AlumnoNullableScalarRelationFilter = {
    is?: AlumnoWhereInput | null
    isNot?: AlumnoWhereInput | null
  }

  export type CatedraScalarRelationFilter = {
    is?: CatedraWhereInput
    isNot?: CatedraWhereInput
  }

  export type ComposerNullableScalarRelationFilter = {
    is?: ComposerWhereInput | null
    isNot?: ComposerWhereInput | null
  }

  export type PagoListRelationFilter = {
    every?: PagoWhereInput
    some?: PagoWhereInput
    none?: PagoWhereInput
  }

  export type PagoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CatedraAlumnoCatedraIdAlumnoIdCompoundUniqueInput = {
    catedraId: number
    alumnoId: number
  }

  export type CatedraAlumnoCatedraIdComposerIdCompoundUniqueInput = {
    catedraId: number
    composerId: number
  }

  export type CatedraAlumnoCountOrderByAggregateInput = {
    catedraId?: SortOrder
    alumnoId?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
    composerId?: SortOrder
    id?: SortOrder
    dia_cobro?: SortOrder
    fecha_inscripcion?: SortOrder
  }

  export type CatedraAlumnoAvgOrderByAggregateInput = {
    catedraId?: SortOrder
    alumnoId?: SortOrder
    composerId?: SortOrder
    id?: SortOrder
    dia_cobro?: SortOrder
  }

  export type CatedraAlumnoMaxOrderByAggregateInput = {
    catedraId?: SortOrder
    alumnoId?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
    composerId?: SortOrder
    id?: SortOrder
    dia_cobro?: SortOrder
    fecha_inscripcion?: SortOrder
  }

  export type CatedraAlumnoMinOrderByAggregateInput = {
    catedraId?: SortOrder
    alumnoId?: SortOrder
    assignedAt?: SortOrder
    assignedBy?: SortOrder
    composerId?: SortOrder
    id?: SortOrder
    dia_cobro?: SortOrder
    fecha_inscripcion?: SortOrder
  }

  export type CatedraAlumnoSumOrderByAggregateInput = {
    catedraId?: SortOrder
    alumnoId?: SortOrder
    composerId?: SortOrder
    id?: SortOrder
    dia_cobro?: SortOrder
  }

  export type CatedraDiaHorarioCountOrderByAggregateInput = {
    id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CatedraDiaHorarioAvgOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
  }

  export type CatedraDiaHorarioMaxOrderByAggregateInput = {
    id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CatedraDiaHorarioMinOrderByAggregateInput = {
    id?: SortOrder
    dia_semana?: SortOrder
    hora_inicio?: SortOrder
    hora_fin?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CatedraDiaHorarioSumOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
  }

  export type PublicacionScalarRelationFilter = {
    is?: PublicacionWhereInput
    isNot?: PublicacionWhereInput
  }

  export type ComentarioPublicacionCountOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    publicacionId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ComentarioPublicacionAvgOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
  }

  export type ComentarioPublicacionMaxOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    publicacionId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ComentarioPublicacionMinOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    publicacionId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ComentarioPublicacionSumOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type CostoCatedraCountOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
    monto_matricula?: SortOrder
    monto_cuota?: SortOrder
    es_gratuita?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CostoCatedraAvgOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
    monto_matricula?: SortOrder
    monto_cuota?: SortOrder
  }

  export type CostoCatedraMaxOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
    monto_matricula?: SortOrder
    monto_cuota?: SortOrder
    es_gratuita?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CostoCatedraMinOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
    monto_matricula?: SortOrder
    monto_cuota?: SortOrder
    es_gratuita?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CostoCatedraSumOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
    monto_matricula?: SortOrder
    monto_cuota?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DiaClaseCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    dia_semana?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
  }

  export type DiaClaseAvgOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
  }

  export type DiaClaseMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    dia_semana?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
  }

  export type DiaClaseMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    dia_semana?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
  }

  export type DiaClaseSumOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
  }

  export type CatedraListRelationFilter = {
    every?: CatedraWhereInput
    some?: CatedraWhereInput
    none?: CatedraWhereInput
  }

  export type CatedraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DocenteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    otpSecret?: SortOrder
    otpEnabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
  }

  export type DocenteAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DocenteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    otpSecret?: SortOrder
    otpEnabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
  }

  export type DocenteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    otpSecret?: SortOrder
    otpEnabled?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    direccion?: SortOrder
    telefono?: SortOrder
  }

  export type DocenteSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EditSuggestionCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    birth_year?: SortOrder
    birth_month?: SortOrder
    birth_day?: SortOrder
    death_year?: SortOrder
    death_month?: SortOrder
    death_day?: SortOrder
    bio?: SortOrder
    notable_works?: SortOrder
    period?: SortOrder
    references?: SortOrder
    youtube_link?: SortOrder
    mainRole?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    suggester_email?: SortOrder
    suggester_ip?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    composerId?: SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrder
    student_last_name?: SortOrder
    points?: SortOrder
  }

  export type EditSuggestionAvgOrderByAggregateInput = {
    id?: SortOrder
    birth_year?: SortOrder
    birth_month?: SortOrder
    birth_day?: SortOrder
    death_year?: SortOrder
    death_month?: SortOrder
    death_day?: SortOrder
    composerId?: SortOrder
    points?: SortOrder
  }

  export type EditSuggestionMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    birth_year?: SortOrder
    birth_month?: SortOrder
    birth_day?: SortOrder
    death_year?: SortOrder
    death_month?: SortOrder
    death_day?: SortOrder
    bio?: SortOrder
    notable_works?: SortOrder
    period?: SortOrder
    references?: SortOrder
    youtube_link?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    suggester_email?: SortOrder
    suggester_ip?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    composerId?: SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrder
    student_last_name?: SortOrder
    points?: SortOrder
  }

  export type EditSuggestionMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    birth_year?: SortOrder
    birth_month?: SortOrder
    birth_day?: SortOrder
    death_year?: SortOrder
    death_month?: SortOrder
    death_day?: SortOrder
    bio?: SortOrder
    notable_works?: SortOrder
    period?: SortOrder
    references?: SortOrder
    youtube_link?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    suggester_email?: SortOrder
    suggester_ip?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    composerId?: SortOrder
    is_student_contribution?: SortOrder
    student_first_name?: SortOrder
    student_last_name?: SortOrder
    points?: SortOrder
  }

  export type EditSuggestionSumOrderByAggregateInput = {
    id?: SortOrder
    birth_year?: SortOrder
    birth_month?: SortOrder
    birth_day?: SortOrder
    death_year?: SortOrder
    death_month?: SortOrder
    death_day?: SortOrder
    composerId?: SortOrder
    points?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type PreguntaListRelationFilter = {
    every?: PreguntaWhereInput
    some?: PreguntaWhereInput
    none?: PreguntaWhereInput
  }

  export type PublicacionNullableScalarRelationFilter = {
    is?: PublicacionWhereInput | null
    isNot?: PublicacionWhereInput | null
  }

  export type PreguntaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EvaluacionCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    created_at?: SortOrder
    catedraId?: SortOrder
    fecha_limite?: SortOrder
    isMaster?: SortOrder
  }

  export type EvaluacionAvgOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
  }

  export type EvaluacionMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    created_at?: SortOrder
    catedraId?: SortOrder
    fecha_limite?: SortOrder
    isMaster?: SortOrder
  }

  export type EvaluacionMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    created_at?: SortOrder
    catedraId?: SortOrder
    fecha_limite?: SortOrder
    isMaster?: SortOrder
  }

  export type EvaluacionSumOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumEstadoEvaluacionAsignacionFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEvaluacionAsignacion | EnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEvaluacionAsignacionFilter<$PrismaModel> | $Enums.EstadoEvaluacionAsignacion
  }

  export type CalificacionEvaluacionNullableScalarRelationFilter = {
    is?: CalificacionEvaluacionWhereInput | null
    isNot?: CalificacionEvaluacionWhereInput | null
  }

  export type EvaluacionScalarRelationFilter = {
    is?: EvaluacionWhereInput
    isNot?: EvaluacionWhereInput
  }

  export type EvaluacionAsignacionAlumnoIdEvaluacionIdCompoundUniqueInput = {
    alumnoId: number
    evaluacionId: number
  }

  export type EvaluacionAsignacionCountOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    fecha_entrega?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionId?: SortOrder
    publicacionId?: SortOrder
  }

  export type EvaluacionAsignacionAvgOrderByAggregateInput = {
    id?: SortOrder
    alumnoId?: SortOrder
    evaluacionId?: SortOrder
    publicacionId?: SortOrder
  }

  export type EvaluacionAsignacionMaxOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    fecha_entrega?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionId?: SortOrder
    publicacionId?: SortOrder
  }

  export type EvaluacionAsignacionMinOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    fecha_entrega?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    evaluacionId?: SortOrder
    publicacionId?: SortOrder
  }

  export type EvaluacionAsignacionSumOrderByAggregateInput = {
    id?: SortOrder
    alumnoId?: SortOrder
    evaluacionId?: SortOrder
    publicacionId?: SortOrder
  }

  export type EnumEstadoEvaluacionAsignacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEvaluacionAsignacion | EnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEvaluacionAsignacionWithAggregatesFilter<$PrismaModel> | $Enums.EstadoEvaluacionAsignacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoEvaluacionAsignacionFilter<$PrismaModel>
    _max?: NestedEnumEstadoEvaluacionAsignacionFilter<$PrismaModel>
  }

  export type PreguntaScalarRelationFilter = {
    is?: PreguntaWhereInput
    isNot?: PreguntaWhereInput
  }

  export type OpcionCountOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    es_correcta?: SortOrder
    preguntaId?: SortOrder
  }

  export type OpcionAvgOrderByAggregateInput = {
    id?: SortOrder
    preguntaId?: SortOrder
  }

  export type OpcionMaxOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    es_correcta?: SortOrder
    preguntaId?: SortOrder
  }

  export type OpcionMinOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    es_correcta?: SortOrder
    preguntaId?: SortOrder
  }

  export type OpcionSumOrderByAggregateInput = {
    id?: SortOrder
    preguntaId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EnumTipoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPago | EnumTipoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPagoFilter<$PrismaModel> | $Enums.TipoPago
  }

  export type CatedraAlumnoScalarRelationFilter = {
    is?: CatedraAlumnoWhereInput
    isNot?: CatedraAlumnoWhereInput
  }

  export type PagoCatedraAlumnoIdTipo_pagoPeriodo_cubiertoCompoundUniqueInput = {
    catedraAlumnoId: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto: string
  }

  export type PagoCountOrderByAggregateInput = {
    id?: SortOrder
    catedraAlumnoId?: SortOrder
    fecha_pago?: SortOrder
    monto_pagado?: SortOrder
    tipo_pago?: SortOrder
    periodo_cubierto?: SortOrder
    confirmadoPorId?: SortOrder
    created_at?: SortOrder
  }

  export type PagoAvgOrderByAggregateInput = {
    id?: SortOrder
    catedraAlumnoId?: SortOrder
    monto_pagado?: SortOrder
    confirmadoPorId?: SortOrder
  }

  export type PagoMaxOrderByAggregateInput = {
    id?: SortOrder
    catedraAlumnoId?: SortOrder
    fecha_pago?: SortOrder
    monto_pagado?: SortOrder
    tipo_pago?: SortOrder
    periodo_cubierto?: SortOrder
    confirmadoPorId?: SortOrder
    created_at?: SortOrder
  }

  export type PagoMinOrderByAggregateInput = {
    id?: SortOrder
    catedraAlumnoId?: SortOrder
    fecha_pago?: SortOrder
    monto_pagado?: SortOrder
    tipo_pago?: SortOrder
    periodo_cubierto?: SortOrder
    confirmadoPorId?: SortOrder
    created_at?: SortOrder
  }

  export type PagoSumOrderByAggregateInput = {
    id?: SortOrder
    catedraAlumnoId?: SortOrder
    monto_pagado?: SortOrder
    confirmadoPorId?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumTipoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPago | EnumTipoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPagoWithAggregatesFilter<$PrismaModel> | $Enums.TipoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPagoFilter<$PrismaModel>
    _max?: NestedEnumTipoPagoFilter<$PrismaModel>
  }

  export type EnumTipoOrganizacionPlanFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrganizacionPlan | EnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrganizacionPlanFilter<$PrismaModel> | $Enums.TipoOrganizacionPlan
  }

  export type DocenteScalarRelationFilter = {
    is?: DocenteWhereInput
    isNot?: DocenteWhereInput
  }

  export type UnidadPlanListRelationFilter = {
    every?: UnidadPlanWhereInput
    some?: UnidadPlanWhereInput
    none?: UnidadPlanWhereInput
  }

  export type UnidadPlanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PlanDeClasesCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    tipoOrganizacion?: SortOrder
    docenteId?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type PlanDeClasesAvgOrderByAggregateInput = {
    id?: SortOrder
    docenteId?: SortOrder
    catedraId?: SortOrder
  }

  export type PlanDeClasesMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    tipoOrganizacion?: SortOrder
    docenteId?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type PlanDeClasesMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    tipoOrganizacion?: SortOrder
    docenteId?: SortOrder
    catedraId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type PlanDeClasesSumOrderByAggregateInput = {
    id?: SortOrder
    docenteId?: SortOrder
    catedraId?: SortOrder
  }

  export type EnumTipoOrganizacionPlanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrganizacionPlan | EnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrganizacionPlanWithAggregatesFilter<$PrismaModel> | $Enums.TipoOrganizacionPlan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoOrganizacionPlanFilter<$PrismaModel>
    _max?: NestedEnumTipoOrganizacionPlanFilter<$PrismaModel>
  }

  export type OpcionListRelationFilter = {
    every?: OpcionWhereInput
    some?: OpcionWhereInput
    none?: OpcionWhereInput
  }

  export type OpcionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PreguntaCountOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    evaluacionId?: SortOrder
  }

  export type PreguntaAvgOrderByAggregateInput = {
    id?: SortOrder
    evaluacionId?: SortOrder
  }

  export type PreguntaMaxOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    evaluacionId?: SortOrder
  }

  export type PreguntaMinOrderByAggregateInput = {
    id?: SortOrder
    texto?: SortOrder
    evaluacionId?: SortOrder
  }

  export type PreguntaSumOrderByAggregateInput = {
    id?: SortOrder
    evaluacionId?: SortOrder
  }

  export type EnumTipoPublicacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPublicacion | EnumTipoPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPublicacionFilter<$PrismaModel> | $Enums.TipoPublicacion
  }

  export type EvaluacionAsignacionNullableScalarRelationFilter = {
    is?: EvaluacionAsignacionWhereInput | null
    isNot?: EvaluacionAsignacionWhereInput | null
  }

  export type EvaluacionNullableScalarRelationFilter = {
    is?: EvaluacionWhereInput | null
    isNot?: EvaluacionWhereInput | null
  }

  export type TareaMaestraNullableScalarRelationFilter = {
    is?: TareaMaestraWhereInput | null
    isNot?: TareaMaestraWhereInput | null
  }

  export type PublicacionCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    tipo?: SortOrder
    catedraId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tareaMaestraId?: SortOrder
    visibleToStudents?: SortOrder
    evaluacionAsignacionId?: SortOrder
    evaluacionMaestraId?: SortOrder
  }

  export type PublicacionAvgOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    tareaMaestraId?: SortOrder
    evaluacionAsignacionId?: SortOrder
    evaluacionMaestraId?: SortOrder
  }

  export type PublicacionMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    tipo?: SortOrder
    catedraId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tareaMaestraId?: SortOrder
    visibleToStudents?: SortOrder
    evaluacionAsignacionId?: SortOrder
    evaluacionMaestraId?: SortOrder
  }

  export type PublicacionMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    tipo?: SortOrder
    catedraId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tareaMaestraId?: SortOrder
    visibleToStudents?: SortOrder
    evaluacionAsignacionId?: SortOrder
    evaluacionMaestraId?: SortOrder
  }

  export type PublicacionSumOrderByAggregateInput = {
    id?: SortOrder
    catedraId?: SortOrder
    autorAlumnoId?: SortOrder
    autorDocenteId?: SortOrder
    tareaMaestraId?: SortOrder
    evaluacionAsignacionId?: SortOrder
    evaluacionMaestraId?: SortOrder
  }

  export type EnumTipoPublicacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPublicacion | EnumTipoPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPublicacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoPublicacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPublicacionFilter<$PrismaModel>
    _max?: NestedEnumTipoPublicacionFilter<$PrismaModel>
  }

  export type EnumTipoInteraccionPublicacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoInteraccionPublicacion | EnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoInteraccionPublicacionFilter<$PrismaModel> | $Enums.TipoInteraccionPublicacion
  }

  export type PublicacionInteraccionPublicacionIdAlumnoIdCompoundUniqueInput = {
    publicacionId: number
    alumnoId: number
  }

  export type PublicacionInteraccionPublicacionIdDocenteIdCompoundUniqueInput = {
    publicacionId: number
    docenteId: number
  }

  export type PublicacionInteraccionCountOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    alumnoId?: SortOrder
    docenteId?: SortOrder
    tipo?: SortOrder
    created_at?: SortOrder
  }

  export type PublicacionInteraccionAvgOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    alumnoId?: SortOrder
    docenteId?: SortOrder
  }

  export type PublicacionInteraccionMaxOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    alumnoId?: SortOrder
    docenteId?: SortOrder
    tipo?: SortOrder
    created_at?: SortOrder
  }

  export type PublicacionInteraccionMinOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    alumnoId?: SortOrder
    docenteId?: SortOrder
    tipo?: SortOrder
    created_at?: SortOrder
  }

  export type PublicacionInteraccionSumOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    alumnoId?: SortOrder
    docenteId?: SortOrder
  }

  export type EnumTipoInteraccionPublicacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoInteraccionPublicacion | EnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoInteraccionPublicacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoInteraccionPublicacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoInteraccionPublicacionFilter<$PrismaModel>
    _max?: NestedEnumTipoInteraccionPublicacionFilter<$PrismaModel>
  }

  export type EnumTipoPuntuacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPuntuacion | EnumTipoPuntuacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPuntuacionFilter<$PrismaModel> | $Enums.TipoPuntuacion
  }

  export type CatedraNullableScalarRelationFilter = {
    is?: CatedraWhereInput | null
    isNot?: CatedraWhereInput | null
  }

  export type PuntuacionCountOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    motivo?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    catedraId?: SortOrder
    tipo?: SortOrder
  }

  export type PuntuacionAvgOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    alumnoId?: SortOrder
    catedraId?: SortOrder
  }

  export type PuntuacionMaxOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    motivo?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    catedraId?: SortOrder
    tipo?: SortOrder
  }

  export type PuntuacionMinOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    motivo?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    catedraId?: SortOrder
    tipo?: SortOrder
  }

  export type PuntuacionSumOrderByAggregateInput = {
    id?: SortOrder
    puntos?: SortOrder
    alumnoId?: SortOrder
    catedraId?: SortOrder
  }

  export type EnumTipoPuntuacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPuntuacion | EnumTipoPuntuacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPuntuacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoPuntuacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPuntuacionFilter<$PrismaModel>
    _max?: NestedEnumTipoPuntuacionFilter<$PrismaModel>
  }

  export type OpcionScalarRelationFilter = {
    is?: OpcionWhereInput
    isNot?: OpcionWhereInput
  }

  export type RespuestaAlumnoAlumnoIdPreguntaIdCompoundUniqueInput = {
    alumnoId: number
    preguntaId: number
  }

  export type RespuestaAlumnoCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    preguntaId?: SortOrder
    opcionElegidaId?: SortOrder
  }

  export type RespuestaAlumnoAvgOrderByAggregateInput = {
    id?: SortOrder
    alumnoId?: SortOrder
    preguntaId?: SortOrder
    opcionElegidaId?: SortOrder
  }

  export type RespuestaAlumnoMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    preguntaId?: SortOrder
    opcionElegidaId?: SortOrder
  }

  export type RespuestaAlumnoMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    alumnoId?: SortOrder
    preguntaId?: SortOrder
    opcionElegidaId?: SortOrder
  }

  export type RespuestaAlumnoSumOrderByAggregateInput = {
    id?: SortOrder
    alumnoId?: SortOrder
    preguntaId?: SortOrder
    opcionElegidaId?: SortOrder
  }

  export type EnumEstadoTareaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaFilter<$PrismaModel> | $Enums.EstadoTarea
  }

  export type TareaMaestraScalarRelationFilter = {
    is?: TareaMaestraWhereInput
    isNot?: TareaMaestraWhereInput
  }

  export type TareaAsignacionAlumnoIdTareaMaestraIdCompoundUniqueInput = {
    alumnoId: number
    tareaMaestraId: number
  }

  export type TareaAsignacionCountOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    submission_path?: SortOrder
    submission_date?: SortOrder
    puntos_obtenidos?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    tareaMaestraId?: SortOrder
  }

  export type TareaAsignacionAvgOrderByAggregateInput = {
    id?: SortOrder
    puntos_obtenidos?: SortOrder
    alumnoId?: SortOrder
    tareaMaestraId?: SortOrder
  }

  export type TareaAsignacionMaxOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    submission_path?: SortOrder
    submission_date?: SortOrder
    puntos_obtenidos?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    tareaMaestraId?: SortOrder
  }

  export type TareaAsignacionMinOrderByAggregateInput = {
    id?: SortOrder
    estado?: SortOrder
    submission_path?: SortOrder
    submission_date?: SortOrder
    puntos_obtenidos?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    alumnoId?: SortOrder
    tareaMaestraId?: SortOrder
  }

  export type TareaAsignacionSumOrderByAggregateInput = {
    id?: SortOrder
    puntos_obtenidos?: SortOrder
    alumnoId?: SortOrder
    tareaMaestraId?: SortOrder
  }

  export type EnumEstadoTareaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTarea
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTareaFilter<$PrismaModel>
    _max?: NestedEnumEstadoTareaFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type TareaMaestraCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_entrega?: SortOrder
    puntos_posibles?: SortOrder
    recursos?: SortOrder
    multimedia_path?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
    publicacionId?: SortOrder
  }

  export type TareaMaestraAvgOrderByAggregateInput = {
    id?: SortOrder
    puntos_posibles?: SortOrder
    catedraId?: SortOrder
    publicacionId?: SortOrder
  }

  export type TareaMaestraMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_entrega?: SortOrder
    puntos_posibles?: SortOrder
    multimedia_path?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
    publicacionId?: SortOrder
  }

  export type TareaMaestraMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descripcion?: SortOrder
    fecha_entrega?: SortOrder
    puntos_posibles?: SortOrder
    multimedia_path?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    catedraId?: SortOrder
    publicacionId?: SortOrder
  }

  export type TareaMaestraSumOrderByAggregateInput = {
    id?: SortOrder
    puntos_posibles?: SortOrder
    catedraId?: SortOrder
    publicacionId?: SortOrder
  }

  export type PlanDeClasesScalarRelationFilter = {
    is?: PlanDeClasesWhereInput
    isNot?: PlanDeClasesWhereInput
  }

  export type UnidadPlanCountOrderByAggregateInput = {
    id?: SortOrder
    planDeClasesId?: SortOrder
    periodo?: SortOrder
    contenido?: SortOrder
    capacidades?: SortOrder
    horasTeoricas?: SortOrder
    horasPracticas?: SortOrder
    estrategiasMetodologicas?: SortOrder
    mediosVerificacionEvaluacion?: SortOrder
    recursos?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UnidadPlanAvgOrderByAggregateInput = {
    id?: SortOrder
    planDeClasesId?: SortOrder
    horasTeoricas?: SortOrder
    horasPracticas?: SortOrder
  }

  export type UnidadPlanMaxOrderByAggregateInput = {
    id?: SortOrder
    planDeClasesId?: SortOrder
    periodo?: SortOrder
    contenido?: SortOrder
    capacidades?: SortOrder
    horasTeoricas?: SortOrder
    horasPracticas?: SortOrder
    estrategiasMetodologicas?: SortOrder
    mediosVerificacionEvaluacion?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UnidadPlanMinOrderByAggregateInput = {
    id?: SortOrder
    planDeClasesId?: SortOrder
    periodo?: SortOrder
    contenido?: SortOrder
    capacidades?: SortOrder
    horasTeoricas?: SortOrder
    horasPracticas?: SortOrder
    estrategiasMetodologicas?: SortOrder
    mediosVerificacionEvaluacion?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UnidadPlanSumOrderByAggregateInput = {
    id?: SortOrder
    planDeClasesId?: SortOrder
    horasTeoricas?: SortOrder
    horasPracticas?: SortOrder
  }

  export type ComposerCreatemainRoleInput = {
    set: $Enums.RoleType[]
  }

  export type CatedraAlumnoCreateNestedManyWithoutComposerInput = {
    create?: XOR<CatedraAlumnoCreateWithoutComposerInput, CatedraAlumnoUncheckedCreateWithoutComposerInput> | CatedraAlumnoCreateWithoutComposerInput[] | CatedraAlumnoUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutComposerInput | CatedraAlumnoCreateOrConnectWithoutComposerInput[]
    createMany?: CatedraAlumnoCreateManyComposerInputEnvelope
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutComposerInput = {
    create?: XOR<CommentCreateWithoutComposerInput, CommentUncheckedCreateWithoutComposerInput> | CommentCreateWithoutComposerInput[] | CommentUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutComposerInput | CommentCreateOrConnectWithoutComposerInput[]
    createMany?: CommentCreateManyComposerInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type EditSuggestionCreateNestedManyWithoutComposerInput = {
    create?: XOR<EditSuggestionCreateWithoutComposerInput, EditSuggestionUncheckedCreateWithoutComposerInput> | EditSuggestionCreateWithoutComposerInput[] | EditSuggestionUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: EditSuggestionCreateOrConnectWithoutComposerInput | EditSuggestionCreateOrConnectWithoutComposerInput[]
    createMany?: EditSuggestionCreateManyComposerInputEnvelope
    connect?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
  }

  export type RatingCreateNestedManyWithoutComposerInput = {
    create?: XOR<RatingCreateWithoutComposerInput, RatingUncheckedCreateWithoutComposerInput> | RatingCreateWithoutComposerInput[] | RatingUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutComposerInput | RatingCreateOrConnectWithoutComposerInput[]
    createMany?: RatingCreateManyComposerInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type CatedraAlumnoUncheckedCreateNestedManyWithoutComposerInput = {
    create?: XOR<CatedraAlumnoCreateWithoutComposerInput, CatedraAlumnoUncheckedCreateWithoutComposerInput> | CatedraAlumnoCreateWithoutComposerInput[] | CatedraAlumnoUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutComposerInput | CatedraAlumnoCreateOrConnectWithoutComposerInput[]
    createMany?: CatedraAlumnoCreateManyComposerInputEnvelope
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutComposerInput = {
    create?: XOR<CommentCreateWithoutComposerInput, CommentUncheckedCreateWithoutComposerInput> | CommentCreateWithoutComposerInput[] | CommentUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutComposerInput | CommentCreateOrConnectWithoutComposerInput[]
    createMany?: CommentCreateManyComposerInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type EditSuggestionUncheckedCreateNestedManyWithoutComposerInput = {
    create?: XOR<EditSuggestionCreateWithoutComposerInput, EditSuggestionUncheckedCreateWithoutComposerInput> | EditSuggestionCreateWithoutComposerInput[] | EditSuggestionUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: EditSuggestionCreateOrConnectWithoutComposerInput | EditSuggestionCreateOrConnectWithoutComposerInput[]
    createMany?: EditSuggestionCreateManyComposerInputEnvelope
    connect?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
  }

  export type RatingUncheckedCreateNestedManyWithoutComposerInput = {
    create?: XOR<RatingCreateWithoutComposerInput, RatingUncheckedCreateWithoutComposerInput> | RatingCreateWithoutComposerInput[] | RatingUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutComposerInput | RatingCreateOrConnectWithoutComposerInput[]
    createMany?: RatingCreateManyComposerInputEnvelope
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type ComposerUpdatemainRoleInput = {
    set?: $Enums.RoleType[]
    push?: $Enums.RoleType | $Enums.RoleType[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type CatedraAlumnoUpdateManyWithoutComposerNestedInput = {
    create?: XOR<CatedraAlumnoCreateWithoutComposerInput, CatedraAlumnoUncheckedCreateWithoutComposerInput> | CatedraAlumnoCreateWithoutComposerInput[] | CatedraAlumnoUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutComposerInput | CatedraAlumnoCreateOrConnectWithoutComposerInput[]
    upsert?: CatedraAlumnoUpsertWithWhereUniqueWithoutComposerInput | CatedraAlumnoUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: CatedraAlumnoCreateManyComposerInputEnvelope
    set?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    disconnect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    delete?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    update?: CatedraAlumnoUpdateWithWhereUniqueWithoutComposerInput | CatedraAlumnoUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: CatedraAlumnoUpdateManyWithWhereWithoutComposerInput | CatedraAlumnoUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutComposerNestedInput = {
    create?: XOR<CommentCreateWithoutComposerInput, CommentUncheckedCreateWithoutComposerInput> | CommentCreateWithoutComposerInput[] | CommentUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutComposerInput | CommentCreateOrConnectWithoutComposerInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutComposerInput | CommentUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: CommentCreateManyComposerInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutComposerInput | CommentUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutComposerInput | CommentUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type EditSuggestionUpdateManyWithoutComposerNestedInput = {
    create?: XOR<EditSuggestionCreateWithoutComposerInput, EditSuggestionUncheckedCreateWithoutComposerInput> | EditSuggestionCreateWithoutComposerInput[] | EditSuggestionUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: EditSuggestionCreateOrConnectWithoutComposerInput | EditSuggestionCreateOrConnectWithoutComposerInput[]
    upsert?: EditSuggestionUpsertWithWhereUniqueWithoutComposerInput | EditSuggestionUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: EditSuggestionCreateManyComposerInputEnvelope
    set?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    disconnect?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    delete?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    connect?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    update?: EditSuggestionUpdateWithWhereUniqueWithoutComposerInput | EditSuggestionUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: EditSuggestionUpdateManyWithWhereWithoutComposerInput | EditSuggestionUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: EditSuggestionScalarWhereInput | EditSuggestionScalarWhereInput[]
  }

  export type RatingUpdateManyWithoutComposerNestedInput = {
    create?: XOR<RatingCreateWithoutComposerInput, RatingUncheckedCreateWithoutComposerInput> | RatingCreateWithoutComposerInput[] | RatingUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutComposerInput | RatingCreateOrConnectWithoutComposerInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutComposerInput | RatingUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: RatingCreateManyComposerInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutComposerInput | RatingUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutComposerInput | RatingUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type CatedraAlumnoUncheckedUpdateManyWithoutComposerNestedInput = {
    create?: XOR<CatedraAlumnoCreateWithoutComposerInput, CatedraAlumnoUncheckedCreateWithoutComposerInput> | CatedraAlumnoCreateWithoutComposerInput[] | CatedraAlumnoUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutComposerInput | CatedraAlumnoCreateOrConnectWithoutComposerInput[]
    upsert?: CatedraAlumnoUpsertWithWhereUniqueWithoutComposerInput | CatedraAlumnoUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: CatedraAlumnoCreateManyComposerInputEnvelope
    set?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    disconnect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    delete?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    update?: CatedraAlumnoUpdateWithWhereUniqueWithoutComposerInput | CatedraAlumnoUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: CatedraAlumnoUpdateManyWithWhereWithoutComposerInput | CatedraAlumnoUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutComposerNestedInput = {
    create?: XOR<CommentCreateWithoutComposerInput, CommentUncheckedCreateWithoutComposerInput> | CommentCreateWithoutComposerInput[] | CommentUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutComposerInput | CommentCreateOrConnectWithoutComposerInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutComposerInput | CommentUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: CommentCreateManyComposerInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutComposerInput | CommentUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutComposerInput | CommentUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type EditSuggestionUncheckedUpdateManyWithoutComposerNestedInput = {
    create?: XOR<EditSuggestionCreateWithoutComposerInput, EditSuggestionUncheckedCreateWithoutComposerInput> | EditSuggestionCreateWithoutComposerInput[] | EditSuggestionUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: EditSuggestionCreateOrConnectWithoutComposerInput | EditSuggestionCreateOrConnectWithoutComposerInput[]
    upsert?: EditSuggestionUpsertWithWhereUniqueWithoutComposerInput | EditSuggestionUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: EditSuggestionCreateManyComposerInputEnvelope
    set?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    disconnect?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    delete?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    connect?: EditSuggestionWhereUniqueInput | EditSuggestionWhereUniqueInput[]
    update?: EditSuggestionUpdateWithWhereUniqueWithoutComposerInput | EditSuggestionUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: EditSuggestionUpdateManyWithWhereWithoutComposerInput | EditSuggestionUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: EditSuggestionScalarWhereInput | EditSuggestionScalarWhereInput[]
  }

  export type RatingUncheckedUpdateManyWithoutComposerNestedInput = {
    create?: XOR<RatingCreateWithoutComposerInput, RatingUncheckedCreateWithoutComposerInput> | RatingCreateWithoutComposerInput[] | RatingUncheckedCreateWithoutComposerInput[]
    connectOrCreate?: RatingCreateOrConnectWithoutComposerInput | RatingCreateOrConnectWithoutComposerInput[]
    upsert?: RatingUpsertWithWhereUniqueWithoutComposerInput | RatingUpsertWithWhereUniqueWithoutComposerInput[]
    createMany?: RatingCreateManyComposerInputEnvelope
    set?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    disconnect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    delete?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    connect?: RatingWhereUniqueInput | RatingWhereUniqueInput[]
    update?: RatingUpdateWithWhereUniqueWithoutComposerInput | RatingUpdateWithWhereUniqueWithoutComposerInput[]
    updateMany?: RatingUpdateManyWithWhereWithoutComposerInput | RatingUpdateManyWithWhereWithoutComposerInput[]
    deleteMany?: RatingScalarWhereInput | RatingScalarWhereInput[]
  }

  export type ComposerCreateNestedOneWithoutCommentsInput = {
    create?: XOR<ComposerCreateWithoutCommentsInput, ComposerUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutCommentsInput
    connect?: ComposerWhereUniqueInput
  }

  export type ComposerUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<ComposerCreateWithoutCommentsInput, ComposerUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutCommentsInput
    upsert?: ComposerUpsertWithoutCommentsInput
    connect?: ComposerWhereUniqueInput
    update?: XOR<XOR<ComposerUpdateToOneWithWhereWithoutCommentsInput, ComposerUpdateWithoutCommentsInput>, ComposerUncheckedUpdateWithoutCommentsInput>
  }

  export type ComposerCreateNestedOneWithoutRatingsInput = {
    create?: XOR<ComposerCreateWithoutRatingsInput, ComposerUncheckedCreateWithoutRatingsInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutRatingsInput
    connect?: ComposerWhereUniqueInput
  }

  export type ComposerUpdateOneRequiredWithoutRatingsNestedInput = {
    create?: XOR<ComposerCreateWithoutRatingsInput, ComposerUncheckedCreateWithoutRatingsInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutRatingsInput
    upsert?: ComposerUpsertWithoutRatingsInput
    connect?: ComposerWhereUniqueInput
    update?: XOR<XOR<ComposerUpdateToOneWithWhereWithoutRatingsInput, ComposerUpdateWithoutRatingsInput>, ComposerUncheckedUpdateWithoutRatingsInput>
  }

  export type AsistenciaCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<AsistenciaCreateWithoutAlumnoInput, AsistenciaUncheckedCreateWithoutAlumnoInput> | AsistenciaCreateWithoutAlumnoInput[] | AsistenciaUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutAlumnoInput | AsistenciaCreateOrConnectWithoutAlumnoInput[]
    createMany?: AsistenciaCreateManyAlumnoInputEnvelope
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
  }

  export type CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutAlumnoInput, CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput> | CalificacionEvaluacionCreateWithoutAlumnoInput[] | CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput | CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: CalificacionEvaluacionCreateManyAlumnoInputEnvelope
    connect?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
  }

  export type CatedraAlumnoCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<CatedraAlumnoCreateWithoutAlumnoInput, CatedraAlumnoUncheckedCreateWithoutAlumnoInput> | CatedraAlumnoCreateWithoutAlumnoInput[] | CatedraAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutAlumnoInput | CatedraAlumnoCreateOrConnectWithoutAlumnoInput[]
    createMany?: CatedraAlumnoCreateManyAlumnoInputEnvelope
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
  }

  export type ComentarioPublicacionCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutAlumnoInput, ComentarioPublicacionUncheckedCreateWithoutAlumnoInput> | ComentarioPublicacionCreateWithoutAlumnoInput[] | ComentarioPublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutAlumnoInput | ComentarioPublicacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: ComentarioPublicacionCreateManyAlumnoInputEnvelope
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
  }

  export type EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutAlumnoInput, EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput> | EvaluacionAsignacionCreateWithoutAlumnoInput[] | EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput | EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: EvaluacionAsignacionCreateManyAlumnoInputEnvelope
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
  }

  export type PublicacionCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<PublicacionCreateWithoutAlumnoInput, PublicacionUncheckedCreateWithoutAlumnoInput> | PublicacionCreateWithoutAlumnoInput[] | PublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutAlumnoInput | PublicacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: PublicacionCreateManyAlumnoInputEnvelope
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
  }

  export type PublicacionInteraccionCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutAlumnoInput, PublicacionInteraccionUncheckedCreateWithoutAlumnoInput> | PublicacionInteraccionCreateWithoutAlumnoInput[] | PublicacionInteraccionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutAlumnoInput | PublicacionInteraccionCreateOrConnectWithoutAlumnoInput[]
    createMany?: PublicacionInteraccionCreateManyAlumnoInputEnvelope
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
  }

  export type PuntuacionCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<PuntuacionCreateWithoutAlumnoInput, PuntuacionUncheckedCreateWithoutAlumnoInput> | PuntuacionCreateWithoutAlumnoInput[] | PuntuacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutAlumnoInput | PuntuacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: PuntuacionCreateManyAlumnoInputEnvelope
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
  }

  export type RespuestaAlumnoCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutAlumnoInput, RespuestaAlumnoUncheckedCreateWithoutAlumnoInput> | RespuestaAlumnoCreateWithoutAlumnoInput[] | RespuestaAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutAlumnoInput | RespuestaAlumnoCreateOrConnectWithoutAlumnoInput[]
    createMany?: RespuestaAlumnoCreateManyAlumnoInputEnvelope
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
  }

  export type TareaAsignacionCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<TareaAsignacionCreateWithoutAlumnoInput, TareaAsignacionUncheckedCreateWithoutAlumnoInput> | TareaAsignacionCreateWithoutAlumnoInput[] | TareaAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutAlumnoInput | TareaAsignacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: TareaAsignacionCreateManyAlumnoInputEnvelope
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
  }

  export type AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<AsistenciaCreateWithoutAlumnoInput, AsistenciaUncheckedCreateWithoutAlumnoInput> | AsistenciaCreateWithoutAlumnoInput[] | AsistenciaUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutAlumnoInput | AsistenciaCreateOrConnectWithoutAlumnoInput[]
    createMany?: AsistenciaCreateManyAlumnoInputEnvelope
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
  }

  export type CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutAlumnoInput, CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput> | CalificacionEvaluacionCreateWithoutAlumnoInput[] | CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput | CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: CalificacionEvaluacionCreateManyAlumnoInputEnvelope
    connect?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
  }

  export type CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<CatedraAlumnoCreateWithoutAlumnoInput, CatedraAlumnoUncheckedCreateWithoutAlumnoInput> | CatedraAlumnoCreateWithoutAlumnoInput[] | CatedraAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutAlumnoInput | CatedraAlumnoCreateOrConnectWithoutAlumnoInput[]
    createMany?: CatedraAlumnoCreateManyAlumnoInputEnvelope
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
  }

  export type ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutAlumnoInput, ComentarioPublicacionUncheckedCreateWithoutAlumnoInput> | ComentarioPublicacionCreateWithoutAlumnoInput[] | ComentarioPublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutAlumnoInput | ComentarioPublicacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: ComentarioPublicacionCreateManyAlumnoInputEnvelope
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
  }

  export type EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutAlumnoInput, EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput> | EvaluacionAsignacionCreateWithoutAlumnoInput[] | EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput | EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: EvaluacionAsignacionCreateManyAlumnoInputEnvelope
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
  }

  export type PublicacionUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<PublicacionCreateWithoutAlumnoInput, PublicacionUncheckedCreateWithoutAlumnoInput> | PublicacionCreateWithoutAlumnoInput[] | PublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutAlumnoInput | PublicacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: PublicacionCreateManyAlumnoInputEnvelope
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
  }

  export type PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutAlumnoInput, PublicacionInteraccionUncheckedCreateWithoutAlumnoInput> | PublicacionInteraccionCreateWithoutAlumnoInput[] | PublicacionInteraccionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutAlumnoInput | PublicacionInteraccionCreateOrConnectWithoutAlumnoInput[]
    createMany?: PublicacionInteraccionCreateManyAlumnoInputEnvelope
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
  }

  export type PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<PuntuacionCreateWithoutAlumnoInput, PuntuacionUncheckedCreateWithoutAlumnoInput> | PuntuacionCreateWithoutAlumnoInput[] | PuntuacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutAlumnoInput | PuntuacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: PuntuacionCreateManyAlumnoInputEnvelope
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
  }

  export type RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutAlumnoInput, RespuestaAlumnoUncheckedCreateWithoutAlumnoInput> | RespuestaAlumnoCreateWithoutAlumnoInput[] | RespuestaAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutAlumnoInput | RespuestaAlumnoCreateOrConnectWithoutAlumnoInput[]
    createMany?: RespuestaAlumnoCreateManyAlumnoInputEnvelope
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
  }

  export type TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput = {
    create?: XOR<TareaAsignacionCreateWithoutAlumnoInput, TareaAsignacionUncheckedCreateWithoutAlumnoInput> | TareaAsignacionCreateWithoutAlumnoInput[] | TareaAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutAlumnoInput | TareaAsignacionCreateOrConnectWithoutAlumnoInput[]
    createMany?: TareaAsignacionCreateManyAlumnoInputEnvelope
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type AsistenciaUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<AsistenciaCreateWithoutAlumnoInput, AsistenciaUncheckedCreateWithoutAlumnoInput> | AsistenciaCreateWithoutAlumnoInput[] | AsistenciaUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutAlumnoInput | AsistenciaCreateOrConnectWithoutAlumnoInput[]
    upsert?: AsistenciaUpsertWithWhereUniqueWithoutAlumnoInput | AsistenciaUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: AsistenciaCreateManyAlumnoInputEnvelope
    set?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    disconnect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    delete?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    update?: AsistenciaUpdateWithWhereUniqueWithoutAlumnoInput | AsistenciaUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: AsistenciaUpdateManyWithWhereWithoutAlumnoInput | AsistenciaUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: AsistenciaScalarWhereInput | AsistenciaScalarWhereInput[]
  }

  export type CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutAlumnoInput, CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput> | CalificacionEvaluacionCreateWithoutAlumnoInput[] | CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput | CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: CalificacionEvaluacionUpsertWithWhereUniqueWithoutAlumnoInput | CalificacionEvaluacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: CalificacionEvaluacionCreateManyAlumnoInputEnvelope
    set?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    disconnect?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    delete?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    connect?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    update?: CalificacionEvaluacionUpdateWithWhereUniqueWithoutAlumnoInput | CalificacionEvaluacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: CalificacionEvaluacionUpdateManyWithWhereWithoutAlumnoInput | CalificacionEvaluacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: CalificacionEvaluacionScalarWhereInput | CalificacionEvaluacionScalarWhereInput[]
  }

  export type CatedraAlumnoUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<CatedraAlumnoCreateWithoutAlumnoInput, CatedraAlumnoUncheckedCreateWithoutAlumnoInput> | CatedraAlumnoCreateWithoutAlumnoInput[] | CatedraAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutAlumnoInput | CatedraAlumnoCreateOrConnectWithoutAlumnoInput[]
    upsert?: CatedraAlumnoUpsertWithWhereUniqueWithoutAlumnoInput | CatedraAlumnoUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: CatedraAlumnoCreateManyAlumnoInputEnvelope
    set?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    disconnect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    delete?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    update?: CatedraAlumnoUpdateWithWhereUniqueWithoutAlumnoInput | CatedraAlumnoUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: CatedraAlumnoUpdateManyWithWhereWithoutAlumnoInput | CatedraAlumnoUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
  }

  export type ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutAlumnoInput, ComentarioPublicacionUncheckedCreateWithoutAlumnoInput> | ComentarioPublicacionCreateWithoutAlumnoInput[] | ComentarioPublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutAlumnoInput | ComentarioPublicacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: ComentarioPublicacionUpsertWithWhereUniqueWithoutAlumnoInput | ComentarioPublicacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: ComentarioPublicacionCreateManyAlumnoInputEnvelope
    set?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    disconnect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    delete?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    update?: ComentarioPublicacionUpdateWithWhereUniqueWithoutAlumnoInput | ComentarioPublicacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: ComentarioPublicacionUpdateManyWithWhereWithoutAlumnoInput | ComentarioPublicacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
  }

  export type EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutAlumnoInput, EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput> | EvaluacionAsignacionCreateWithoutAlumnoInput[] | EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput | EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: EvaluacionAsignacionUpsertWithWhereUniqueWithoutAlumnoInput | EvaluacionAsignacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: EvaluacionAsignacionCreateManyAlumnoInputEnvelope
    set?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    disconnect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    delete?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    update?: EvaluacionAsignacionUpdateWithWhereUniqueWithoutAlumnoInput | EvaluacionAsignacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: EvaluacionAsignacionUpdateManyWithWhereWithoutAlumnoInput | EvaluacionAsignacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: EvaluacionAsignacionScalarWhereInput | EvaluacionAsignacionScalarWhereInput[]
  }

  export type PublicacionUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<PublicacionCreateWithoutAlumnoInput, PublicacionUncheckedCreateWithoutAlumnoInput> | PublicacionCreateWithoutAlumnoInput[] | PublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutAlumnoInput | PublicacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: PublicacionUpsertWithWhereUniqueWithoutAlumnoInput | PublicacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: PublicacionCreateManyAlumnoInputEnvelope
    set?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    disconnect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    delete?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    update?: PublicacionUpdateWithWhereUniqueWithoutAlumnoInput | PublicacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: PublicacionUpdateManyWithWhereWithoutAlumnoInput | PublicacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
  }

  export type PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutAlumnoInput, PublicacionInteraccionUncheckedCreateWithoutAlumnoInput> | PublicacionInteraccionCreateWithoutAlumnoInput[] | PublicacionInteraccionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutAlumnoInput | PublicacionInteraccionCreateOrConnectWithoutAlumnoInput[]
    upsert?: PublicacionInteraccionUpsertWithWhereUniqueWithoutAlumnoInput | PublicacionInteraccionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: PublicacionInteraccionCreateManyAlumnoInputEnvelope
    set?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    disconnect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    delete?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    update?: PublicacionInteraccionUpdateWithWhereUniqueWithoutAlumnoInput | PublicacionInteraccionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: PublicacionInteraccionUpdateManyWithWhereWithoutAlumnoInput | PublicacionInteraccionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
  }

  export type PuntuacionUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<PuntuacionCreateWithoutAlumnoInput, PuntuacionUncheckedCreateWithoutAlumnoInput> | PuntuacionCreateWithoutAlumnoInput[] | PuntuacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutAlumnoInput | PuntuacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: PuntuacionUpsertWithWhereUniqueWithoutAlumnoInput | PuntuacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: PuntuacionCreateManyAlumnoInputEnvelope
    set?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    disconnect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    delete?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    update?: PuntuacionUpdateWithWhereUniqueWithoutAlumnoInput | PuntuacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: PuntuacionUpdateManyWithWhereWithoutAlumnoInput | PuntuacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: PuntuacionScalarWhereInput | PuntuacionScalarWhereInput[]
  }

  export type RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutAlumnoInput, RespuestaAlumnoUncheckedCreateWithoutAlumnoInput> | RespuestaAlumnoCreateWithoutAlumnoInput[] | RespuestaAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutAlumnoInput | RespuestaAlumnoCreateOrConnectWithoutAlumnoInput[]
    upsert?: RespuestaAlumnoUpsertWithWhereUniqueWithoutAlumnoInput | RespuestaAlumnoUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: RespuestaAlumnoCreateManyAlumnoInputEnvelope
    set?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    disconnect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    delete?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    update?: RespuestaAlumnoUpdateWithWhereUniqueWithoutAlumnoInput | RespuestaAlumnoUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: RespuestaAlumnoUpdateManyWithWhereWithoutAlumnoInput | RespuestaAlumnoUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
  }

  export type TareaAsignacionUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<TareaAsignacionCreateWithoutAlumnoInput, TareaAsignacionUncheckedCreateWithoutAlumnoInput> | TareaAsignacionCreateWithoutAlumnoInput[] | TareaAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutAlumnoInput | TareaAsignacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: TareaAsignacionUpsertWithWhereUniqueWithoutAlumnoInput | TareaAsignacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: TareaAsignacionCreateManyAlumnoInputEnvelope
    set?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    disconnect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    delete?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    update?: TareaAsignacionUpdateWithWhereUniqueWithoutAlumnoInput | TareaAsignacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: TareaAsignacionUpdateManyWithWhereWithoutAlumnoInput | TareaAsignacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: TareaAsignacionScalarWhereInput | TareaAsignacionScalarWhereInput[]
  }

  export type AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<AsistenciaCreateWithoutAlumnoInput, AsistenciaUncheckedCreateWithoutAlumnoInput> | AsistenciaCreateWithoutAlumnoInput[] | AsistenciaUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutAlumnoInput | AsistenciaCreateOrConnectWithoutAlumnoInput[]
    upsert?: AsistenciaUpsertWithWhereUniqueWithoutAlumnoInput | AsistenciaUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: AsistenciaCreateManyAlumnoInputEnvelope
    set?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    disconnect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    delete?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    update?: AsistenciaUpdateWithWhereUniqueWithoutAlumnoInput | AsistenciaUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: AsistenciaUpdateManyWithWhereWithoutAlumnoInput | AsistenciaUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: AsistenciaScalarWhereInput | AsistenciaScalarWhereInput[]
  }

  export type CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutAlumnoInput, CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput> | CalificacionEvaluacionCreateWithoutAlumnoInput[] | CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput | CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: CalificacionEvaluacionUpsertWithWhereUniqueWithoutAlumnoInput | CalificacionEvaluacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: CalificacionEvaluacionCreateManyAlumnoInputEnvelope
    set?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    disconnect?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    delete?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    connect?: CalificacionEvaluacionWhereUniqueInput | CalificacionEvaluacionWhereUniqueInput[]
    update?: CalificacionEvaluacionUpdateWithWhereUniqueWithoutAlumnoInput | CalificacionEvaluacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: CalificacionEvaluacionUpdateManyWithWhereWithoutAlumnoInput | CalificacionEvaluacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: CalificacionEvaluacionScalarWhereInput | CalificacionEvaluacionScalarWhereInput[]
  }

  export type CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<CatedraAlumnoCreateWithoutAlumnoInput, CatedraAlumnoUncheckedCreateWithoutAlumnoInput> | CatedraAlumnoCreateWithoutAlumnoInput[] | CatedraAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutAlumnoInput | CatedraAlumnoCreateOrConnectWithoutAlumnoInput[]
    upsert?: CatedraAlumnoUpsertWithWhereUniqueWithoutAlumnoInput | CatedraAlumnoUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: CatedraAlumnoCreateManyAlumnoInputEnvelope
    set?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    disconnect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    delete?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    update?: CatedraAlumnoUpdateWithWhereUniqueWithoutAlumnoInput | CatedraAlumnoUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: CatedraAlumnoUpdateManyWithWhereWithoutAlumnoInput | CatedraAlumnoUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
  }

  export type ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutAlumnoInput, ComentarioPublicacionUncheckedCreateWithoutAlumnoInput> | ComentarioPublicacionCreateWithoutAlumnoInput[] | ComentarioPublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutAlumnoInput | ComentarioPublicacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: ComentarioPublicacionUpsertWithWhereUniqueWithoutAlumnoInput | ComentarioPublicacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: ComentarioPublicacionCreateManyAlumnoInputEnvelope
    set?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    disconnect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    delete?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    update?: ComentarioPublicacionUpdateWithWhereUniqueWithoutAlumnoInput | ComentarioPublicacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: ComentarioPublicacionUpdateManyWithWhereWithoutAlumnoInput | ComentarioPublicacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
  }

  export type EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutAlumnoInput, EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput> | EvaluacionAsignacionCreateWithoutAlumnoInput[] | EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput | EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: EvaluacionAsignacionUpsertWithWhereUniqueWithoutAlumnoInput | EvaluacionAsignacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: EvaluacionAsignacionCreateManyAlumnoInputEnvelope
    set?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    disconnect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    delete?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    update?: EvaluacionAsignacionUpdateWithWhereUniqueWithoutAlumnoInput | EvaluacionAsignacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: EvaluacionAsignacionUpdateManyWithWhereWithoutAlumnoInput | EvaluacionAsignacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: EvaluacionAsignacionScalarWhereInput | EvaluacionAsignacionScalarWhereInput[]
  }

  export type PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<PublicacionCreateWithoutAlumnoInput, PublicacionUncheckedCreateWithoutAlumnoInput> | PublicacionCreateWithoutAlumnoInput[] | PublicacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutAlumnoInput | PublicacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: PublicacionUpsertWithWhereUniqueWithoutAlumnoInput | PublicacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: PublicacionCreateManyAlumnoInputEnvelope
    set?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    disconnect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    delete?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    update?: PublicacionUpdateWithWhereUniqueWithoutAlumnoInput | PublicacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: PublicacionUpdateManyWithWhereWithoutAlumnoInput | PublicacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
  }

  export type PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutAlumnoInput, PublicacionInteraccionUncheckedCreateWithoutAlumnoInput> | PublicacionInteraccionCreateWithoutAlumnoInput[] | PublicacionInteraccionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutAlumnoInput | PublicacionInteraccionCreateOrConnectWithoutAlumnoInput[]
    upsert?: PublicacionInteraccionUpsertWithWhereUniqueWithoutAlumnoInput | PublicacionInteraccionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: PublicacionInteraccionCreateManyAlumnoInputEnvelope
    set?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    disconnect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    delete?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    update?: PublicacionInteraccionUpdateWithWhereUniqueWithoutAlumnoInput | PublicacionInteraccionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: PublicacionInteraccionUpdateManyWithWhereWithoutAlumnoInput | PublicacionInteraccionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
  }

  export type PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<PuntuacionCreateWithoutAlumnoInput, PuntuacionUncheckedCreateWithoutAlumnoInput> | PuntuacionCreateWithoutAlumnoInput[] | PuntuacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutAlumnoInput | PuntuacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: PuntuacionUpsertWithWhereUniqueWithoutAlumnoInput | PuntuacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: PuntuacionCreateManyAlumnoInputEnvelope
    set?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    disconnect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    delete?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    update?: PuntuacionUpdateWithWhereUniqueWithoutAlumnoInput | PuntuacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: PuntuacionUpdateManyWithWhereWithoutAlumnoInput | PuntuacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: PuntuacionScalarWhereInput | PuntuacionScalarWhereInput[]
  }

  export type RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutAlumnoInput, RespuestaAlumnoUncheckedCreateWithoutAlumnoInput> | RespuestaAlumnoCreateWithoutAlumnoInput[] | RespuestaAlumnoUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutAlumnoInput | RespuestaAlumnoCreateOrConnectWithoutAlumnoInput[]
    upsert?: RespuestaAlumnoUpsertWithWhereUniqueWithoutAlumnoInput | RespuestaAlumnoUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: RespuestaAlumnoCreateManyAlumnoInputEnvelope
    set?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    disconnect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    delete?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    update?: RespuestaAlumnoUpdateWithWhereUniqueWithoutAlumnoInput | RespuestaAlumnoUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: RespuestaAlumnoUpdateManyWithWhereWithoutAlumnoInput | RespuestaAlumnoUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
  }

  export type TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput = {
    create?: XOR<TareaAsignacionCreateWithoutAlumnoInput, TareaAsignacionUncheckedCreateWithoutAlumnoInput> | TareaAsignacionCreateWithoutAlumnoInput[] | TareaAsignacionUncheckedCreateWithoutAlumnoInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutAlumnoInput | TareaAsignacionCreateOrConnectWithoutAlumnoInput[]
    upsert?: TareaAsignacionUpsertWithWhereUniqueWithoutAlumnoInput | TareaAsignacionUpsertWithWhereUniqueWithoutAlumnoInput[]
    createMany?: TareaAsignacionCreateManyAlumnoInputEnvelope
    set?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    disconnect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    delete?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    update?: TareaAsignacionUpdateWithWhereUniqueWithoutAlumnoInput | TareaAsignacionUpdateWithWhereUniqueWithoutAlumnoInput[]
    updateMany?: TareaAsignacionUpdateManyWithWhereWithoutAlumnoInput | TareaAsignacionUpdateManyWithWhereWithoutAlumnoInput[]
    deleteMany?: TareaAsignacionScalarWhereInput | TareaAsignacionScalarWhereInput[]
  }

  export type AlumnoCreateNestedOneWithoutAsistenciaInput = {
    create?: XOR<AlumnoCreateWithoutAsistenciaInput, AlumnoUncheckedCreateWithoutAsistenciaInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutAsistenciaInput
    connect?: AlumnoWhereUniqueInput
  }

  export type DiaClaseCreateNestedOneWithoutAsistenciaInput = {
    create?: XOR<DiaClaseCreateWithoutAsistenciaInput, DiaClaseUncheckedCreateWithoutAsistenciaInput>
    connectOrCreate?: DiaClaseCreateOrConnectWithoutAsistenciaInput
    connect?: DiaClaseWhereUniqueInput
  }

  export type AlumnoUpdateOneRequiredWithoutAsistenciaNestedInput = {
    create?: XOR<AlumnoCreateWithoutAsistenciaInput, AlumnoUncheckedCreateWithoutAsistenciaInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutAsistenciaInput
    upsert?: AlumnoUpsertWithoutAsistenciaInput
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutAsistenciaInput, AlumnoUpdateWithoutAsistenciaInput>, AlumnoUncheckedUpdateWithoutAsistenciaInput>
  }

  export type DiaClaseUpdateOneRequiredWithoutAsistenciaNestedInput = {
    create?: XOR<DiaClaseCreateWithoutAsistenciaInput, DiaClaseUncheckedCreateWithoutAsistenciaInput>
    connectOrCreate?: DiaClaseCreateOrConnectWithoutAsistenciaInput
    upsert?: DiaClaseUpsertWithoutAsistenciaInput
    connect?: DiaClaseWhereUniqueInput
    update?: XOR<XOR<DiaClaseUpdateToOneWithWhereWithoutAsistenciaInput, DiaClaseUpdateWithoutAsistenciaInput>, DiaClaseUncheckedUpdateWithoutAsistenciaInput>
  }

  export type AlumnoCreateNestedOneWithoutCalificacionEvaluacionInput = {
    create?: XOR<AlumnoCreateWithoutCalificacionEvaluacionInput, AlumnoUncheckedCreateWithoutCalificacionEvaluacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutCalificacionEvaluacionInput
    connect?: AlumnoWhereUniqueInput
  }

  export type EvaluacionAsignacionCreateNestedOneWithoutCalificacionEvaluacionInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutCalificacionEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutCalificacionEvaluacionInput>
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutCalificacionEvaluacionInput
    connect?: EvaluacionAsignacionWhereUniqueInput
  }

  export type AlumnoUpdateOneRequiredWithoutCalificacionEvaluacionNestedInput = {
    create?: XOR<AlumnoCreateWithoutCalificacionEvaluacionInput, AlumnoUncheckedCreateWithoutCalificacionEvaluacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutCalificacionEvaluacionInput
    upsert?: AlumnoUpsertWithoutCalificacionEvaluacionInput
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutCalificacionEvaluacionInput, AlumnoUpdateWithoutCalificacionEvaluacionInput>, AlumnoUncheckedUpdateWithoutCalificacionEvaluacionInput>
  }

  export type EvaluacionAsignacionUpdateOneRequiredWithoutCalificacionEvaluacionNestedInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutCalificacionEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutCalificacionEvaluacionInput>
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutCalificacionEvaluacionInput
    upsert?: EvaluacionAsignacionUpsertWithoutCalificacionEvaluacionInput
    connect?: EvaluacionAsignacionWhereUniqueInput
    update?: XOR<XOR<EvaluacionAsignacionUpdateToOneWithWhereWithoutCalificacionEvaluacionInput, EvaluacionAsignacionUpdateWithoutCalificacionEvaluacionInput>, EvaluacionAsignacionUncheckedUpdateWithoutCalificacionEvaluacionInput>
  }

  export type DocenteCreateNestedOneWithoutCatedraInput = {
    create?: XOR<DocenteCreateWithoutCatedraInput, DocenteUncheckedCreateWithoutCatedraInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutCatedraInput
    connect?: DocenteWhereUniqueInput
  }

  export type CatedraAlumnoCreateNestedManyWithoutCatedraInput = {
    create?: XOR<CatedraAlumnoCreateWithoutCatedraInput, CatedraAlumnoUncheckedCreateWithoutCatedraInput> | CatedraAlumnoCreateWithoutCatedraInput[] | CatedraAlumnoUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutCatedraInput | CatedraAlumnoCreateOrConnectWithoutCatedraInput[]
    createMany?: CatedraAlumnoCreateManyCatedraInputEnvelope
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
  }

  export type CatedraDiaHorarioCreateNestedManyWithoutCatedraInput = {
    create?: XOR<CatedraDiaHorarioCreateWithoutCatedraInput, CatedraDiaHorarioUncheckedCreateWithoutCatedraInput> | CatedraDiaHorarioCreateWithoutCatedraInput[] | CatedraDiaHorarioUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraDiaHorarioCreateOrConnectWithoutCatedraInput | CatedraDiaHorarioCreateOrConnectWithoutCatedraInput[]
    createMany?: CatedraDiaHorarioCreateManyCatedraInputEnvelope
    connect?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
  }

  export type CostoCatedraCreateNestedOneWithoutCatedraInput = {
    create?: XOR<CostoCatedraCreateWithoutCatedraInput, CostoCatedraUncheckedCreateWithoutCatedraInput>
    connectOrCreate?: CostoCatedraCreateOrConnectWithoutCatedraInput
    connect?: CostoCatedraWhereUniqueInput
  }

  export type DiaClaseCreateNestedManyWithoutCatedraInput = {
    create?: XOR<DiaClaseCreateWithoutCatedraInput, DiaClaseUncheckedCreateWithoutCatedraInput> | DiaClaseCreateWithoutCatedraInput[] | DiaClaseUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: DiaClaseCreateOrConnectWithoutCatedraInput | DiaClaseCreateOrConnectWithoutCatedraInput[]
    createMany?: DiaClaseCreateManyCatedraInputEnvelope
    connect?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
  }

  export type EvaluacionCreateNestedManyWithoutCatedraInput = {
    create?: XOR<EvaluacionCreateWithoutCatedraInput, EvaluacionUncheckedCreateWithoutCatedraInput> | EvaluacionCreateWithoutCatedraInput[] | EvaluacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutCatedraInput | EvaluacionCreateOrConnectWithoutCatedraInput[]
    createMany?: EvaluacionCreateManyCatedraInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type PlanDeClasesCreateNestedManyWithoutCatedraInput = {
    create?: XOR<PlanDeClasesCreateWithoutCatedraInput, PlanDeClasesUncheckedCreateWithoutCatedraInput> | PlanDeClasesCreateWithoutCatedraInput[] | PlanDeClasesUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutCatedraInput | PlanDeClasesCreateOrConnectWithoutCatedraInput[]
    createMany?: PlanDeClasesCreateManyCatedraInputEnvelope
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
  }

  export type PublicacionCreateNestedManyWithoutCatedraInput = {
    create?: XOR<PublicacionCreateWithoutCatedraInput, PublicacionUncheckedCreateWithoutCatedraInput> | PublicacionCreateWithoutCatedraInput[] | PublicacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutCatedraInput | PublicacionCreateOrConnectWithoutCatedraInput[]
    createMany?: PublicacionCreateManyCatedraInputEnvelope
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
  }

  export type PuntuacionCreateNestedManyWithoutCatedraInput = {
    create?: XOR<PuntuacionCreateWithoutCatedraInput, PuntuacionUncheckedCreateWithoutCatedraInput> | PuntuacionCreateWithoutCatedraInput[] | PuntuacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutCatedraInput | PuntuacionCreateOrConnectWithoutCatedraInput[]
    createMany?: PuntuacionCreateManyCatedraInputEnvelope
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
  }

  export type TareaMaestraCreateNestedManyWithoutCatedraInput = {
    create?: XOR<TareaMaestraCreateWithoutCatedraInput, TareaMaestraUncheckedCreateWithoutCatedraInput> | TareaMaestraCreateWithoutCatedraInput[] | TareaMaestraUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutCatedraInput | TareaMaestraCreateOrConnectWithoutCatedraInput[]
    createMany?: TareaMaestraCreateManyCatedraInputEnvelope
    connect?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
  }

  export type CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<CatedraAlumnoCreateWithoutCatedraInput, CatedraAlumnoUncheckedCreateWithoutCatedraInput> | CatedraAlumnoCreateWithoutCatedraInput[] | CatedraAlumnoUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutCatedraInput | CatedraAlumnoCreateOrConnectWithoutCatedraInput[]
    createMany?: CatedraAlumnoCreateManyCatedraInputEnvelope
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
  }

  export type CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<CatedraDiaHorarioCreateWithoutCatedraInput, CatedraDiaHorarioUncheckedCreateWithoutCatedraInput> | CatedraDiaHorarioCreateWithoutCatedraInput[] | CatedraDiaHorarioUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraDiaHorarioCreateOrConnectWithoutCatedraInput | CatedraDiaHorarioCreateOrConnectWithoutCatedraInput[]
    createMany?: CatedraDiaHorarioCreateManyCatedraInputEnvelope
    connect?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
  }

  export type CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput = {
    create?: XOR<CostoCatedraCreateWithoutCatedraInput, CostoCatedraUncheckedCreateWithoutCatedraInput>
    connectOrCreate?: CostoCatedraCreateOrConnectWithoutCatedraInput
    connect?: CostoCatedraWhereUniqueInput
  }

  export type DiaClaseUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<DiaClaseCreateWithoutCatedraInput, DiaClaseUncheckedCreateWithoutCatedraInput> | DiaClaseCreateWithoutCatedraInput[] | DiaClaseUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: DiaClaseCreateOrConnectWithoutCatedraInput | DiaClaseCreateOrConnectWithoutCatedraInput[]
    createMany?: DiaClaseCreateManyCatedraInputEnvelope
    connect?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
  }

  export type EvaluacionUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<EvaluacionCreateWithoutCatedraInput, EvaluacionUncheckedCreateWithoutCatedraInput> | EvaluacionCreateWithoutCatedraInput[] | EvaluacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutCatedraInput | EvaluacionCreateOrConnectWithoutCatedraInput[]
    createMany?: EvaluacionCreateManyCatedraInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<PlanDeClasesCreateWithoutCatedraInput, PlanDeClasesUncheckedCreateWithoutCatedraInput> | PlanDeClasesCreateWithoutCatedraInput[] | PlanDeClasesUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutCatedraInput | PlanDeClasesCreateOrConnectWithoutCatedraInput[]
    createMany?: PlanDeClasesCreateManyCatedraInputEnvelope
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
  }

  export type PublicacionUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<PublicacionCreateWithoutCatedraInput, PublicacionUncheckedCreateWithoutCatedraInput> | PublicacionCreateWithoutCatedraInput[] | PublicacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutCatedraInput | PublicacionCreateOrConnectWithoutCatedraInput[]
    createMany?: PublicacionCreateManyCatedraInputEnvelope
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
  }

  export type PuntuacionUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<PuntuacionCreateWithoutCatedraInput, PuntuacionUncheckedCreateWithoutCatedraInput> | PuntuacionCreateWithoutCatedraInput[] | PuntuacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutCatedraInput | PuntuacionCreateOrConnectWithoutCatedraInput[]
    createMany?: PuntuacionCreateManyCatedraInputEnvelope
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
  }

  export type TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput = {
    create?: XOR<TareaMaestraCreateWithoutCatedraInput, TareaMaestraUncheckedCreateWithoutCatedraInput> | TareaMaestraCreateWithoutCatedraInput[] | TareaMaestraUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutCatedraInput | TareaMaestraCreateOrConnectWithoutCatedraInput[]
    createMany?: TareaMaestraCreateManyCatedraInputEnvelope
    connect?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
  }

  export type EnumModalidadPagoFieldUpdateOperationsInput = {
    set?: $Enums.ModalidadPago
  }

  export type DocenteUpdateOneWithoutCatedraNestedInput = {
    create?: XOR<DocenteCreateWithoutCatedraInput, DocenteUncheckedCreateWithoutCatedraInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutCatedraInput
    upsert?: DocenteUpsertWithoutCatedraInput
    disconnect?: DocenteWhereInput | boolean
    delete?: DocenteWhereInput | boolean
    connect?: DocenteWhereUniqueInput
    update?: XOR<XOR<DocenteUpdateToOneWithWhereWithoutCatedraInput, DocenteUpdateWithoutCatedraInput>, DocenteUncheckedUpdateWithoutCatedraInput>
  }

  export type CatedraAlumnoUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<CatedraAlumnoCreateWithoutCatedraInput, CatedraAlumnoUncheckedCreateWithoutCatedraInput> | CatedraAlumnoCreateWithoutCatedraInput[] | CatedraAlumnoUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutCatedraInput | CatedraAlumnoCreateOrConnectWithoutCatedraInput[]
    upsert?: CatedraAlumnoUpsertWithWhereUniqueWithoutCatedraInput | CatedraAlumnoUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: CatedraAlumnoCreateManyCatedraInputEnvelope
    set?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    disconnect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    delete?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    update?: CatedraAlumnoUpdateWithWhereUniqueWithoutCatedraInput | CatedraAlumnoUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: CatedraAlumnoUpdateManyWithWhereWithoutCatedraInput | CatedraAlumnoUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
  }

  export type CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<CatedraDiaHorarioCreateWithoutCatedraInput, CatedraDiaHorarioUncheckedCreateWithoutCatedraInput> | CatedraDiaHorarioCreateWithoutCatedraInput[] | CatedraDiaHorarioUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraDiaHorarioCreateOrConnectWithoutCatedraInput | CatedraDiaHorarioCreateOrConnectWithoutCatedraInput[]
    upsert?: CatedraDiaHorarioUpsertWithWhereUniqueWithoutCatedraInput | CatedraDiaHorarioUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: CatedraDiaHorarioCreateManyCatedraInputEnvelope
    set?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    disconnect?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    delete?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    connect?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    update?: CatedraDiaHorarioUpdateWithWhereUniqueWithoutCatedraInput | CatedraDiaHorarioUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: CatedraDiaHorarioUpdateManyWithWhereWithoutCatedraInput | CatedraDiaHorarioUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: CatedraDiaHorarioScalarWhereInput | CatedraDiaHorarioScalarWhereInput[]
  }

  export type CostoCatedraUpdateOneWithoutCatedraNestedInput = {
    create?: XOR<CostoCatedraCreateWithoutCatedraInput, CostoCatedraUncheckedCreateWithoutCatedraInput>
    connectOrCreate?: CostoCatedraCreateOrConnectWithoutCatedraInput
    upsert?: CostoCatedraUpsertWithoutCatedraInput
    disconnect?: CostoCatedraWhereInput | boolean
    delete?: CostoCatedraWhereInput | boolean
    connect?: CostoCatedraWhereUniqueInput
    update?: XOR<XOR<CostoCatedraUpdateToOneWithWhereWithoutCatedraInput, CostoCatedraUpdateWithoutCatedraInput>, CostoCatedraUncheckedUpdateWithoutCatedraInput>
  }

  export type DiaClaseUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<DiaClaseCreateWithoutCatedraInput, DiaClaseUncheckedCreateWithoutCatedraInput> | DiaClaseCreateWithoutCatedraInput[] | DiaClaseUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: DiaClaseCreateOrConnectWithoutCatedraInput | DiaClaseCreateOrConnectWithoutCatedraInput[]
    upsert?: DiaClaseUpsertWithWhereUniqueWithoutCatedraInput | DiaClaseUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: DiaClaseCreateManyCatedraInputEnvelope
    set?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    disconnect?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    delete?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    connect?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    update?: DiaClaseUpdateWithWhereUniqueWithoutCatedraInput | DiaClaseUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: DiaClaseUpdateManyWithWhereWithoutCatedraInput | DiaClaseUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: DiaClaseScalarWhereInput | DiaClaseScalarWhereInput[]
  }

  export type EvaluacionUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<EvaluacionCreateWithoutCatedraInput, EvaluacionUncheckedCreateWithoutCatedraInput> | EvaluacionCreateWithoutCatedraInput[] | EvaluacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutCatedraInput | EvaluacionCreateOrConnectWithoutCatedraInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutCatedraInput | EvaluacionUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: EvaluacionCreateManyCatedraInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutCatedraInput | EvaluacionUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutCatedraInput | EvaluacionUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type PlanDeClasesUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<PlanDeClasesCreateWithoutCatedraInput, PlanDeClasesUncheckedCreateWithoutCatedraInput> | PlanDeClasesCreateWithoutCatedraInput[] | PlanDeClasesUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutCatedraInput | PlanDeClasesCreateOrConnectWithoutCatedraInput[]
    upsert?: PlanDeClasesUpsertWithWhereUniqueWithoutCatedraInput | PlanDeClasesUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: PlanDeClasesCreateManyCatedraInputEnvelope
    set?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    disconnect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    delete?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    update?: PlanDeClasesUpdateWithWhereUniqueWithoutCatedraInput | PlanDeClasesUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: PlanDeClasesUpdateManyWithWhereWithoutCatedraInput | PlanDeClasesUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: PlanDeClasesScalarWhereInput | PlanDeClasesScalarWhereInput[]
  }

  export type PublicacionUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<PublicacionCreateWithoutCatedraInput, PublicacionUncheckedCreateWithoutCatedraInput> | PublicacionCreateWithoutCatedraInput[] | PublicacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutCatedraInput | PublicacionCreateOrConnectWithoutCatedraInput[]
    upsert?: PublicacionUpsertWithWhereUniqueWithoutCatedraInput | PublicacionUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: PublicacionCreateManyCatedraInputEnvelope
    set?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    disconnect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    delete?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    update?: PublicacionUpdateWithWhereUniqueWithoutCatedraInput | PublicacionUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: PublicacionUpdateManyWithWhereWithoutCatedraInput | PublicacionUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
  }

  export type PuntuacionUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<PuntuacionCreateWithoutCatedraInput, PuntuacionUncheckedCreateWithoutCatedraInput> | PuntuacionCreateWithoutCatedraInput[] | PuntuacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutCatedraInput | PuntuacionCreateOrConnectWithoutCatedraInput[]
    upsert?: PuntuacionUpsertWithWhereUniqueWithoutCatedraInput | PuntuacionUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: PuntuacionCreateManyCatedraInputEnvelope
    set?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    disconnect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    delete?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    update?: PuntuacionUpdateWithWhereUniqueWithoutCatedraInput | PuntuacionUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: PuntuacionUpdateManyWithWhereWithoutCatedraInput | PuntuacionUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: PuntuacionScalarWhereInput | PuntuacionScalarWhereInput[]
  }

  export type TareaMaestraUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<TareaMaestraCreateWithoutCatedraInput, TareaMaestraUncheckedCreateWithoutCatedraInput> | TareaMaestraCreateWithoutCatedraInput[] | TareaMaestraUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutCatedraInput | TareaMaestraCreateOrConnectWithoutCatedraInput[]
    upsert?: TareaMaestraUpsertWithWhereUniqueWithoutCatedraInput | TareaMaestraUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: TareaMaestraCreateManyCatedraInputEnvelope
    set?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    disconnect?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    delete?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    connect?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    update?: TareaMaestraUpdateWithWhereUniqueWithoutCatedraInput | TareaMaestraUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: TareaMaestraUpdateManyWithWhereWithoutCatedraInput | TareaMaestraUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: TareaMaestraScalarWhereInput | TareaMaestraScalarWhereInput[]
  }

  export type CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<CatedraAlumnoCreateWithoutCatedraInput, CatedraAlumnoUncheckedCreateWithoutCatedraInput> | CatedraAlumnoCreateWithoutCatedraInput[] | CatedraAlumnoUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutCatedraInput | CatedraAlumnoCreateOrConnectWithoutCatedraInput[]
    upsert?: CatedraAlumnoUpsertWithWhereUniqueWithoutCatedraInput | CatedraAlumnoUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: CatedraAlumnoCreateManyCatedraInputEnvelope
    set?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    disconnect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    delete?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    connect?: CatedraAlumnoWhereUniqueInput | CatedraAlumnoWhereUniqueInput[]
    update?: CatedraAlumnoUpdateWithWhereUniqueWithoutCatedraInput | CatedraAlumnoUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: CatedraAlumnoUpdateManyWithWhereWithoutCatedraInput | CatedraAlumnoUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
  }

  export type CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<CatedraDiaHorarioCreateWithoutCatedraInput, CatedraDiaHorarioUncheckedCreateWithoutCatedraInput> | CatedraDiaHorarioCreateWithoutCatedraInput[] | CatedraDiaHorarioUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: CatedraDiaHorarioCreateOrConnectWithoutCatedraInput | CatedraDiaHorarioCreateOrConnectWithoutCatedraInput[]
    upsert?: CatedraDiaHorarioUpsertWithWhereUniqueWithoutCatedraInput | CatedraDiaHorarioUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: CatedraDiaHorarioCreateManyCatedraInputEnvelope
    set?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    disconnect?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    delete?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    connect?: CatedraDiaHorarioWhereUniqueInput | CatedraDiaHorarioWhereUniqueInput[]
    update?: CatedraDiaHorarioUpdateWithWhereUniqueWithoutCatedraInput | CatedraDiaHorarioUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: CatedraDiaHorarioUpdateManyWithWhereWithoutCatedraInput | CatedraDiaHorarioUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: CatedraDiaHorarioScalarWhereInput | CatedraDiaHorarioScalarWhereInput[]
  }

  export type CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput = {
    create?: XOR<CostoCatedraCreateWithoutCatedraInput, CostoCatedraUncheckedCreateWithoutCatedraInput>
    connectOrCreate?: CostoCatedraCreateOrConnectWithoutCatedraInput
    upsert?: CostoCatedraUpsertWithoutCatedraInput
    disconnect?: CostoCatedraWhereInput | boolean
    delete?: CostoCatedraWhereInput | boolean
    connect?: CostoCatedraWhereUniqueInput
    update?: XOR<XOR<CostoCatedraUpdateToOneWithWhereWithoutCatedraInput, CostoCatedraUpdateWithoutCatedraInput>, CostoCatedraUncheckedUpdateWithoutCatedraInput>
  }

  export type DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<DiaClaseCreateWithoutCatedraInput, DiaClaseUncheckedCreateWithoutCatedraInput> | DiaClaseCreateWithoutCatedraInput[] | DiaClaseUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: DiaClaseCreateOrConnectWithoutCatedraInput | DiaClaseCreateOrConnectWithoutCatedraInput[]
    upsert?: DiaClaseUpsertWithWhereUniqueWithoutCatedraInput | DiaClaseUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: DiaClaseCreateManyCatedraInputEnvelope
    set?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    disconnect?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    delete?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    connect?: DiaClaseWhereUniqueInput | DiaClaseWhereUniqueInput[]
    update?: DiaClaseUpdateWithWhereUniqueWithoutCatedraInput | DiaClaseUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: DiaClaseUpdateManyWithWhereWithoutCatedraInput | DiaClaseUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: DiaClaseScalarWhereInput | DiaClaseScalarWhereInput[]
  }

  export type EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<EvaluacionCreateWithoutCatedraInput, EvaluacionUncheckedCreateWithoutCatedraInput> | EvaluacionCreateWithoutCatedraInput[] | EvaluacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutCatedraInput | EvaluacionCreateOrConnectWithoutCatedraInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutCatedraInput | EvaluacionUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: EvaluacionCreateManyCatedraInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutCatedraInput | EvaluacionUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutCatedraInput | EvaluacionUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<PlanDeClasesCreateWithoutCatedraInput, PlanDeClasesUncheckedCreateWithoutCatedraInput> | PlanDeClasesCreateWithoutCatedraInput[] | PlanDeClasesUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutCatedraInput | PlanDeClasesCreateOrConnectWithoutCatedraInput[]
    upsert?: PlanDeClasesUpsertWithWhereUniqueWithoutCatedraInput | PlanDeClasesUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: PlanDeClasesCreateManyCatedraInputEnvelope
    set?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    disconnect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    delete?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    update?: PlanDeClasesUpdateWithWhereUniqueWithoutCatedraInput | PlanDeClasesUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: PlanDeClasesUpdateManyWithWhereWithoutCatedraInput | PlanDeClasesUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: PlanDeClasesScalarWhereInput | PlanDeClasesScalarWhereInput[]
  }

  export type PublicacionUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<PublicacionCreateWithoutCatedraInput, PublicacionUncheckedCreateWithoutCatedraInput> | PublicacionCreateWithoutCatedraInput[] | PublicacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutCatedraInput | PublicacionCreateOrConnectWithoutCatedraInput[]
    upsert?: PublicacionUpsertWithWhereUniqueWithoutCatedraInput | PublicacionUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: PublicacionCreateManyCatedraInputEnvelope
    set?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    disconnect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    delete?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    update?: PublicacionUpdateWithWhereUniqueWithoutCatedraInput | PublicacionUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: PublicacionUpdateManyWithWhereWithoutCatedraInput | PublicacionUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
  }

  export type PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<PuntuacionCreateWithoutCatedraInput, PuntuacionUncheckedCreateWithoutCatedraInput> | PuntuacionCreateWithoutCatedraInput[] | PuntuacionUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: PuntuacionCreateOrConnectWithoutCatedraInput | PuntuacionCreateOrConnectWithoutCatedraInput[]
    upsert?: PuntuacionUpsertWithWhereUniqueWithoutCatedraInput | PuntuacionUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: PuntuacionCreateManyCatedraInputEnvelope
    set?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    disconnect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    delete?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    connect?: PuntuacionWhereUniqueInput | PuntuacionWhereUniqueInput[]
    update?: PuntuacionUpdateWithWhereUniqueWithoutCatedraInput | PuntuacionUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: PuntuacionUpdateManyWithWhereWithoutCatedraInput | PuntuacionUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: PuntuacionScalarWhereInput | PuntuacionScalarWhereInput[]
  }

  export type TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput = {
    create?: XOR<TareaMaestraCreateWithoutCatedraInput, TareaMaestraUncheckedCreateWithoutCatedraInput> | TareaMaestraCreateWithoutCatedraInput[] | TareaMaestraUncheckedCreateWithoutCatedraInput[]
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutCatedraInput | TareaMaestraCreateOrConnectWithoutCatedraInput[]
    upsert?: TareaMaestraUpsertWithWhereUniqueWithoutCatedraInput | TareaMaestraUpsertWithWhereUniqueWithoutCatedraInput[]
    createMany?: TareaMaestraCreateManyCatedraInputEnvelope
    set?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    disconnect?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    delete?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    connect?: TareaMaestraWhereUniqueInput | TareaMaestraWhereUniqueInput[]
    update?: TareaMaestraUpdateWithWhereUniqueWithoutCatedraInput | TareaMaestraUpdateWithWhereUniqueWithoutCatedraInput[]
    updateMany?: TareaMaestraUpdateManyWithWhereWithoutCatedraInput | TareaMaestraUpdateManyWithWhereWithoutCatedraInput[]
    deleteMany?: TareaMaestraScalarWhereInput | TareaMaestraScalarWhereInput[]
  }

  export type AlumnoCreateNestedOneWithoutCatedraAlumnoInput = {
    create?: XOR<AlumnoCreateWithoutCatedraAlumnoInput, AlumnoUncheckedCreateWithoutCatedraAlumnoInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutCatedraAlumnoInput
    connect?: AlumnoWhereUniqueInput
  }

  export type CatedraCreateNestedOneWithoutCatedraAlumnoInput = {
    create?: XOR<CatedraCreateWithoutCatedraAlumnoInput, CatedraUncheckedCreateWithoutCatedraAlumnoInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutCatedraAlumnoInput
    connect?: CatedraWhereUniqueInput
  }

  export type ComposerCreateNestedOneWithoutCatedraAlumnoInput = {
    create?: XOR<ComposerCreateWithoutCatedraAlumnoInput, ComposerUncheckedCreateWithoutCatedraAlumnoInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutCatedraAlumnoInput
    connect?: ComposerWhereUniqueInput
  }

  export type PagoCreateNestedManyWithoutCatedraAlumnoInput = {
    create?: XOR<PagoCreateWithoutCatedraAlumnoInput, PagoUncheckedCreateWithoutCatedraAlumnoInput> | PagoCreateWithoutCatedraAlumnoInput[] | PagoUncheckedCreateWithoutCatedraAlumnoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutCatedraAlumnoInput | PagoCreateOrConnectWithoutCatedraAlumnoInput[]
    createMany?: PagoCreateManyCatedraAlumnoInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type PagoUncheckedCreateNestedManyWithoutCatedraAlumnoInput = {
    create?: XOR<PagoCreateWithoutCatedraAlumnoInput, PagoUncheckedCreateWithoutCatedraAlumnoInput> | PagoCreateWithoutCatedraAlumnoInput[] | PagoUncheckedCreateWithoutCatedraAlumnoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutCatedraAlumnoInput | PagoCreateOrConnectWithoutCatedraAlumnoInput[]
    createMany?: PagoCreateManyCatedraAlumnoInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type AlumnoUpdateOneWithoutCatedraAlumnoNestedInput = {
    create?: XOR<AlumnoCreateWithoutCatedraAlumnoInput, AlumnoUncheckedCreateWithoutCatedraAlumnoInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutCatedraAlumnoInput
    upsert?: AlumnoUpsertWithoutCatedraAlumnoInput
    disconnect?: AlumnoWhereInput | boolean
    delete?: AlumnoWhereInput | boolean
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutCatedraAlumnoInput, AlumnoUpdateWithoutCatedraAlumnoInput>, AlumnoUncheckedUpdateWithoutCatedraAlumnoInput>
  }

  export type CatedraUpdateOneRequiredWithoutCatedraAlumnoNestedInput = {
    create?: XOR<CatedraCreateWithoutCatedraAlumnoInput, CatedraUncheckedCreateWithoutCatedraAlumnoInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutCatedraAlumnoInput
    upsert?: CatedraUpsertWithoutCatedraAlumnoInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutCatedraAlumnoInput, CatedraUpdateWithoutCatedraAlumnoInput>, CatedraUncheckedUpdateWithoutCatedraAlumnoInput>
  }

  export type ComposerUpdateOneWithoutCatedraAlumnoNestedInput = {
    create?: XOR<ComposerCreateWithoutCatedraAlumnoInput, ComposerUncheckedCreateWithoutCatedraAlumnoInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutCatedraAlumnoInput
    upsert?: ComposerUpsertWithoutCatedraAlumnoInput
    disconnect?: ComposerWhereInput | boolean
    delete?: ComposerWhereInput | boolean
    connect?: ComposerWhereUniqueInput
    update?: XOR<XOR<ComposerUpdateToOneWithWhereWithoutCatedraAlumnoInput, ComposerUpdateWithoutCatedraAlumnoInput>, ComposerUncheckedUpdateWithoutCatedraAlumnoInput>
  }

  export type PagoUpdateManyWithoutCatedraAlumnoNestedInput = {
    create?: XOR<PagoCreateWithoutCatedraAlumnoInput, PagoUncheckedCreateWithoutCatedraAlumnoInput> | PagoCreateWithoutCatedraAlumnoInput[] | PagoUncheckedCreateWithoutCatedraAlumnoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutCatedraAlumnoInput | PagoCreateOrConnectWithoutCatedraAlumnoInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutCatedraAlumnoInput | PagoUpsertWithWhereUniqueWithoutCatedraAlumnoInput[]
    createMany?: PagoCreateManyCatedraAlumnoInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutCatedraAlumnoInput | PagoUpdateWithWhereUniqueWithoutCatedraAlumnoInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutCatedraAlumnoInput | PagoUpdateManyWithWhereWithoutCatedraAlumnoInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type PagoUncheckedUpdateManyWithoutCatedraAlumnoNestedInput = {
    create?: XOR<PagoCreateWithoutCatedraAlumnoInput, PagoUncheckedCreateWithoutCatedraAlumnoInput> | PagoCreateWithoutCatedraAlumnoInput[] | PagoUncheckedCreateWithoutCatedraAlumnoInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutCatedraAlumnoInput | PagoCreateOrConnectWithoutCatedraAlumnoInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutCatedraAlumnoInput | PagoUpsertWithWhereUniqueWithoutCatedraAlumnoInput[]
    createMany?: PagoCreateManyCatedraAlumnoInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutCatedraAlumnoInput | PagoUpdateWithWhereUniqueWithoutCatedraAlumnoInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutCatedraAlumnoInput | PagoUpdateManyWithWhereWithoutCatedraAlumnoInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type CatedraCreateNestedOneWithoutCatedraDiaHorarioInput = {
    create?: XOR<CatedraCreateWithoutCatedraDiaHorarioInput, CatedraUncheckedCreateWithoutCatedraDiaHorarioInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutCatedraDiaHorarioInput
    connect?: CatedraWhereUniqueInput
  }

  export type CatedraUpdateOneRequiredWithoutCatedraDiaHorarioNestedInput = {
    create?: XOR<CatedraCreateWithoutCatedraDiaHorarioInput, CatedraUncheckedCreateWithoutCatedraDiaHorarioInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutCatedraDiaHorarioInput
    upsert?: CatedraUpsertWithoutCatedraDiaHorarioInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutCatedraDiaHorarioInput, CatedraUpdateWithoutCatedraDiaHorarioInput>, CatedraUncheckedUpdateWithoutCatedraDiaHorarioInput>
  }

  export type AlumnoCreateNestedOneWithoutComentarioPublicacionInput = {
    create?: XOR<AlumnoCreateWithoutComentarioPublicacionInput, AlumnoUncheckedCreateWithoutComentarioPublicacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutComentarioPublicacionInput
    connect?: AlumnoWhereUniqueInput
  }

  export type DocenteCreateNestedOneWithoutComentarioPublicacionInput = {
    create?: XOR<DocenteCreateWithoutComentarioPublicacionInput, DocenteUncheckedCreateWithoutComentarioPublicacionInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutComentarioPublicacionInput
    connect?: DocenteWhereUniqueInput
  }

  export type PublicacionCreateNestedOneWithoutComentarioPublicacionInput = {
    create?: XOR<PublicacionCreateWithoutComentarioPublicacionInput, PublicacionUncheckedCreateWithoutComentarioPublicacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutComentarioPublicacionInput
    connect?: PublicacionWhereUniqueInput
  }

  export type AlumnoUpdateOneWithoutComentarioPublicacionNestedInput = {
    create?: XOR<AlumnoCreateWithoutComentarioPublicacionInput, AlumnoUncheckedCreateWithoutComentarioPublicacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutComentarioPublicacionInput
    upsert?: AlumnoUpsertWithoutComentarioPublicacionInput
    disconnect?: AlumnoWhereInput | boolean
    delete?: AlumnoWhereInput | boolean
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutComentarioPublicacionInput, AlumnoUpdateWithoutComentarioPublicacionInput>, AlumnoUncheckedUpdateWithoutComentarioPublicacionInput>
  }

  export type DocenteUpdateOneWithoutComentarioPublicacionNestedInput = {
    create?: XOR<DocenteCreateWithoutComentarioPublicacionInput, DocenteUncheckedCreateWithoutComentarioPublicacionInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutComentarioPublicacionInput
    upsert?: DocenteUpsertWithoutComentarioPublicacionInput
    disconnect?: DocenteWhereInput | boolean
    delete?: DocenteWhereInput | boolean
    connect?: DocenteWhereUniqueInput
    update?: XOR<XOR<DocenteUpdateToOneWithWhereWithoutComentarioPublicacionInput, DocenteUpdateWithoutComentarioPublicacionInput>, DocenteUncheckedUpdateWithoutComentarioPublicacionInput>
  }

  export type PublicacionUpdateOneRequiredWithoutComentarioPublicacionNestedInput = {
    create?: XOR<PublicacionCreateWithoutComentarioPublicacionInput, PublicacionUncheckedCreateWithoutComentarioPublicacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutComentarioPublicacionInput
    upsert?: PublicacionUpsertWithoutComentarioPublicacionInput
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutComentarioPublicacionInput, PublicacionUpdateWithoutComentarioPublicacionInput>, PublicacionUncheckedUpdateWithoutComentarioPublicacionInput>
  }

  export type CatedraCreateNestedOneWithoutCostoCatedraInput = {
    create?: XOR<CatedraCreateWithoutCostoCatedraInput, CatedraUncheckedCreateWithoutCostoCatedraInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutCostoCatedraInput
    connect?: CatedraWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CatedraUpdateOneRequiredWithoutCostoCatedraNestedInput = {
    create?: XOR<CatedraCreateWithoutCostoCatedraInput, CatedraUncheckedCreateWithoutCostoCatedraInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutCostoCatedraInput
    upsert?: CatedraUpsertWithoutCostoCatedraInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutCostoCatedraInput, CatedraUpdateWithoutCostoCatedraInput>, CatedraUncheckedUpdateWithoutCostoCatedraInput>
  }

  export type AsistenciaCreateNestedManyWithoutDiaClaseInput = {
    create?: XOR<AsistenciaCreateWithoutDiaClaseInput, AsistenciaUncheckedCreateWithoutDiaClaseInput> | AsistenciaCreateWithoutDiaClaseInput[] | AsistenciaUncheckedCreateWithoutDiaClaseInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutDiaClaseInput | AsistenciaCreateOrConnectWithoutDiaClaseInput[]
    createMany?: AsistenciaCreateManyDiaClaseInputEnvelope
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
  }

  export type CatedraCreateNestedOneWithoutDiaClaseInput = {
    create?: XOR<CatedraCreateWithoutDiaClaseInput, CatedraUncheckedCreateWithoutDiaClaseInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutDiaClaseInput
    connect?: CatedraWhereUniqueInput
  }

  export type AsistenciaUncheckedCreateNestedManyWithoutDiaClaseInput = {
    create?: XOR<AsistenciaCreateWithoutDiaClaseInput, AsistenciaUncheckedCreateWithoutDiaClaseInput> | AsistenciaCreateWithoutDiaClaseInput[] | AsistenciaUncheckedCreateWithoutDiaClaseInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutDiaClaseInput | AsistenciaCreateOrConnectWithoutDiaClaseInput[]
    createMany?: AsistenciaCreateManyDiaClaseInputEnvelope
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
  }

  export type AsistenciaUpdateManyWithoutDiaClaseNestedInput = {
    create?: XOR<AsistenciaCreateWithoutDiaClaseInput, AsistenciaUncheckedCreateWithoutDiaClaseInput> | AsistenciaCreateWithoutDiaClaseInput[] | AsistenciaUncheckedCreateWithoutDiaClaseInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutDiaClaseInput | AsistenciaCreateOrConnectWithoutDiaClaseInput[]
    upsert?: AsistenciaUpsertWithWhereUniqueWithoutDiaClaseInput | AsistenciaUpsertWithWhereUniqueWithoutDiaClaseInput[]
    createMany?: AsistenciaCreateManyDiaClaseInputEnvelope
    set?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    disconnect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    delete?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    update?: AsistenciaUpdateWithWhereUniqueWithoutDiaClaseInput | AsistenciaUpdateWithWhereUniqueWithoutDiaClaseInput[]
    updateMany?: AsistenciaUpdateManyWithWhereWithoutDiaClaseInput | AsistenciaUpdateManyWithWhereWithoutDiaClaseInput[]
    deleteMany?: AsistenciaScalarWhereInput | AsistenciaScalarWhereInput[]
  }

  export type CatedraUpdateOneRequiredWithoutDiaClaseNestedInput = {
    create?: XOR<CatedraCreateWithoutDiaClaseInput, CatedraUncheckedCreateWithoutDiaClaseInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutDiaClaseInput
    upsert?: CatedraUpsertWithoutDiaClaseInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutDiaClaseInput, CatedraUpdateWithoutDiaClaseInput>, CatedraUncheckedUpdateWithoutDiaClaseInput>
  }

  export type AsistenciaUncheckedUpdateManyWithoutDiaClaseNestedInput = {
    create?: XOR<AsistenciaCreateWithoutDiaClaseInput, AsistenciaUncheckedCreateWithoutDiaClaseInput> | AsistenciaCreateWithoutDiaClaseInput[] | AsistenciaUncheckedCreateWithoutDiaClaseInput[]
    connectOrCreate?: AsistenciaCreateOrConnectWithoutDiaClaseInput | AsistenciaCreateOrConnectWithoutDiaClaseInput[]
    upsert?: AsistenciaUpsertWithWhereUniqueWithoutDiaClaseInput | AsistenciaUpsertWithWhereUniqueWithoutDiaClaseInput[]
    createMany?: AsistenciaCreateManyDiaClaseInputEnvelope
    set?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    disconnect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    delete?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    connect?: AsistenciaWhereUniqueInput | AsistenciaWhereUniqueInput[]
    update?: AsistenciaUpdateWithWhereUniqueWithoutDiaClaseInput | AsistenciaUpdateWithWhereUniqueWithoutDiaClaseInput[]
    updateMany?: AsistenciaUpdateManyWithWhereWithoutDiaClaseInput | AsistenciaUpdateManyWithWhereWithoutDiaClaseInput[]
    deleteMany?: AsistenciaScalarWhereInput | AsistenciaScalarWhereInput[]
  }

  export type CatedraCreateNestedManyWithoutDocenteInput = {
    create?: XOR<CatedraCreateWithoutDocenteInput, CatedraUncheckedCreateWithoutDocenteInput> | CatedraCreateWithoutDocenteInput[] | CatedraUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: CatedraCreateOrConnectWithoutDocenteInput | CatedraCreateOrConnectWithoutDocenteInput[]
    createMany?: CatedraCreateManyDocenteInputEnvelope
    connect?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
  }

  export type ComentarioPublicacionCreateNestedManyWithoutDocenteInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutDocenteInput, ComentarioPublicacionUncheckedCreateWithoutDocenteInput> | ComentarioPublicacionCreateWithoutDocenteInput[] | ComentarioPublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutDocenteInput | ComentarioPublicacionCreateOrConnectWithoutDocenteInput[]
    createMany?: ComentarioPublicacionCreateManyDocenteInputEnvelope
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
  }

  export type PagoCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PagoCreateWithoutDocenteInput, PagoUncheckedCreateWithoutDocenteInput> | PagoCreateWithoutDocenteInput[] | PagoUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutDocenteInput | PagoCreateOrConnectWithoutDocenteInput[]
    createMany?: PagoCreateManyDocenteInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type PlanDeClasesCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PlanDeClasesCreateWithoutDocenteInput, PlanDeClasesUncheckedCreateWithoutDocenteInput> | PlanDeClasesCreateWithoutDocenteInput[] | PlanDeClasesUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutDocenteInput | PlanDeClasesCreateOrConnectWithoutDocenteInput[]
    createMany?: PlanDeClasesCreateManyDocenteInputEnvelope
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
  }

  export type PublicacionCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PublicacionCreateWithoutDocenteInput, PublicacionUncheckedCreateWithoutDocenteInput> | PublicacionCreateWithoutDocenteInput[] | PublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutDocenteInput | PublicacionCreateOrConnectWithoutDocenteInput[]
    createMany?: PublicacionCreateManyDocenteInputEnvelope
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
  }

  export type PublicacionInteraccionCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutDocenteInput, PublicacionInteraccionUncheckedCreateWithoutDocenteInput> | PublicacionInteraccionCreateWithoutDocenteInput[] | PublicacionInteraccionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutDocenteInput | PublicacionInteraccionCreateOrConnectWithoutDocenteInput[]
    createMany?: PublicacionInteraccionCreateManyDocenteInputEnvelope
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
  }

  export type CatedraUncheckedCreateNestedManyWithoutDocenteInput = {
    create?: XOR<CatedraCreateWithoutDocenteInput, CatedraUncheckedCreateWithoutDocenteInput> | CatedraCreateWithoutDocenteInput[] | CatedraUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: CatedraCreateOrConnectWithoutDocenteInput | CatedraCreateOrConnectWithoutDocenteInput[]
    createMany?: CatedraCreateManyDocenteInputEnvelope
    connect?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
  }

  export type ComentarioPublicacionUncheckedCreateNestedManyWithoutDocenteInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutDocenteInput, ComentarioPublicacionUncheckedCreateWithoutDocenteInput> | ComentarioPublicacionCreateWithoutDocenteInput[] | ComentarioPublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutDocenteInput | ComentarioPublicacionCreateOrConnectWithoutDocenteInput[]
    createMany?: ComentarioPublicacionCreateManyDocenteInputEnvelope
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
  }

  export type PagoUncheckedCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PagoCreateWithoutDocenteInput, PagoUncheckedCreateWithoutDocenteInput> | PagoCreateWithoutDocenteInput[] | PagoUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutDocenteInput | PagoCreateOrConnectWithoutDocenteInput[]
    createMany?: PagoCreateManyDocenteInputEnvelope
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
  }

  export type PlanDeClasesUncheckedCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PlanDeClasesCreateWithoutDocenteInput, PlanDeClasesUncheckedCreateWithoutDocenteInput> | PlanDeClasesCreateWithoutDocenteInput[] | PlanDeClasesUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutDocenteInput | PlanDeClasesCreateOrConnectWithoutDocenteInput[]
    createMany?: PlanDeClasesCreateManyDocenteInputEnvelope
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
  }

  export type PublicacionUncheckedCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PublicacionCreateWithoutDocenteInput, PublicacionUncheckedCreateWithoutDocenteInput> | PublicacionCreateWithoutDocenteInput[] | PublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutDocenteInput | PublicacionCreateOrConnectWithoutDocenteInput[]
    createMany?: PublicacionCreateManyDocenteInputEnvelope
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
  }

  export type PublicacionInteraccionUncheckedCreateNestedManyWithoutDocenteInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutDocenteInput, PublicacionInteraccionUncheckedCreateWithoutDocenteInput> | PublicacionInteraccionCreateWithoutDocenteInput[] | PublicacionInteraccionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutDocenteInput | PublicacionInteraccionCreateOrConnectWithoutDocenteInput[]
    createMany?: PublicacionInteraccionCreateManyDocenteInputEnvelope
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
  }

  export type CatedraUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<CatedraCreateWithoutDocenteInput, CatedraUncheckedCreateWithoutDocenteInput> | CatedraCreateWithoutDocenteInput[] | CatedraUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: CatedraCreateOrConnectWithoutDocenteInput | CatedraCreateOrConnectWithoutDocenteInput[]
    upsert?: CatedraUpsertWithWhereUniqueWithoutDocenteInput | CatedraUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: CatedraCreateManyDocenteInputEnvelope
    set?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    disconnect?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    delete?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    connect?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    update?: CatedraUpdateWithWhereUniqueWithoutDocenteInput | CatedraUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: CatedraUpdateManyWithWhereWithoutDocenteInput | CatedraUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: CatedraScalarWhereInput | CatedraScalarWhereInput[]
  }

  export type ComentarioPublicacionUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutDocenteInput, ComentarioPublicacionUncheckedCreateWithoutDocenteInput> | ComentarioPublicacionCreateWithoutDocenteInput[] | ComentarioPublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutDocenteInput | ComentarioPublicacionCreateOrConnectWithoutDocenteInput[]
    upsert?: ComentarioPublicacionUpsertWithWhereUniqueWithoutDocenteInput | ComentarioPublicacionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: ComentarioPublicacionCreateManyDocenteInputEnvelope
    set?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    disconnect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    delete?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    update?: ComentarioPublicacionUpdateWithWhereUniqueWithoutDocenteInput | ComentarioPublicacionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: ComentarioPublicacionUpdateManyWithWhereWithoutDocenteInput | ComentarioPublicacionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
  }

  export type PagoUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PagoCreateWithoutDocenteInput, PagoUncheckedCreateWithoutDocenteInput> | PagoCreateWithoutDocenteInput[] | PagoUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutDocenteInput | PagoCreateOrConnectWithoutDocenteInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutDocenteInput | PagoUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PagoCreateManyDocenteInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutDocenteInput | PagoUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutDocenteInput | PagoUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type PlanDeClasesUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PlanDeClasesCreateWithoutDocenteInput, PlanDeClasesUncheckedCreateWithoutDocenteInput> | PlanDeClasesCreateWithoutDocenteInput[] | PlanDeClasesUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutDocenteInput | PlanDeClasesCreateOrConnectWithoutDocenteInput[]
    upsert?: PlanDeClasesUpsertWithWhereUniqueWithoutDocenteInput | PlanDeClasesUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PlanDeClasesCreateManyDocenteInputEnvelope
    set?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    disconnect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    delete?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    update?: PlanDeClasesUpdateWithWhereUniqueWithoutDocenteInput | PlanDeClasesUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PlanDeClasesUpdateManyWithWhereWithoutDocenteInput | PlanDeClasesUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PlanDeClasesScalarWhereInput | PlanDeClasesScalarWhereInput[]
  }

  export type PublicacionUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PublicacionCreateWithoutDocenteInput, PublicacionUncheckedCreateWithoutDocenteInput> | PublicacionCreateWithoutDocenteInput[] | PublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutDocenteInput | PublicacionCreateOrConnectWithoutDocenteInput[]
    upsert?: PublicacionUpsertWithWhereUniqueWithoutDocenteInput | PublicacionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PublicacionCreateManyDocenteInputEnvelope
    set?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    disconnect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    delete?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    update?: PublicacionUpdateWithWhereUniqueWithoutDocenteInput | PublicacionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PublicacionUpdateManyWithWhereWithoutDocenteInput | PublicacionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
  }

  export type PublicacionInteraccionUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutDocenteInput, PublicacionInteraccionUncheckedCreateWithoutDocenteInput> | PublicacionInteraccionCreateWithoutDocenteInput[] | PublicacionInteraccionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutDocenteInput | PublicacionInteraccionCreateOrConnectWithoutDocenteInput[]
    upsert?: PublicacionInteraccionUpsertWithWhereUniqueWithoutDocenteInput | PublicacionInteraccionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PublicacionInteraccionCreateManyDocenteInputEnvelope
    set?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    disconnect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    delete?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    update?: PublicacionInteraccionUpdateWithWhereUniqueWithoutDocenteInput | PublicacionInteraccionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PublicacionInteraccionUpdateManyWithWhereWithoutDocenteInput | PublicacionInteraccionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
  }

  export type CatedraUncheckedUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<CatedraCreateWithoutDocenteInput, CatedraUncheckedCreateWithoutDocenteInput> | CatedraCreateWithoutDocenteInput[] | CatedraUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: CatedraCreateOrConnectWithoutDocenteInput | CatedraCreateOrConnectWithoutDocenteInput[]
    upsert?: CatedraUpsertWithWhereUniqueWithoutDocenteInput | CatedraUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: CatedraCreateManyDocenteInputEnvelope
    set?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    disconnect?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    delete?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    connect?: CatedraWhereUniqueInput | CatedraWhereUniqueInput[]
    update?: CatedraUpdateWithWhereUniqueWithoutDocenteInput | CatedraUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: CatedraUpdateManyWithWhereWithoutDocenteInput | CatedraUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: CatedraScalarWhereInput | CatedraScalarWhereInput[]
  }

  export type ComentarioPublicacionUncheckedUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutDocenteInput, ComentarioPublicacionUncheckedCreateWithoutDocenteInput> | ComentarioPublicacionCreateWithoutDocenteInput[] | ComentarioPublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutDocenteInput | ComentarioPublicacionCreateOrConnectWithoutDocenteInput[]
    upsert?: ComentarioPublicacionUpsertWithWhereUniqueWithoutDocenteInput | ComentarioPublicacionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: ComentarioPublicacionCreateManyDocenteInputEnvelope
    set?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    disconnect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    delete?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    update?: ComentarioPublicacionUpdateWithWhereUniqueWithoutDocenteInput | ComentarioPublicacionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: ComentarioPublicacionUpdateManyWithWhereWithoutDocenteInput | ComentarioPublicacionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
  }

  export type PagoUncheckedUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PagoCreateWithoutDocenteInput, PagoUncheckedCreateWithoutDocenteInput> | PagoCreateWithoutDocenteInput[] | PagoUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PagoCreateOrConnectWithoutDocenteInput | PagoCreateOrConnectWithoutDocenteInput[]
    upsert?: PagoUpsertWithWhereUniqueWithoutDocenteInput | PagoUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PagoCreateManyDocenteInputEnvelope
    set?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    disconnect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    delete?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    connect?: PagoWhereUniqueInput | PagoWhereUniqueInput[]
    update?: PagoUpdateWithWhereUniqueWithoutDocenteInput | PagoUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PagoUpdateManyWithWhereWithoutDocenteInput | PagoUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PagoScalarWhereInput | PagoScalarWhereInput[]
  }

  export type PlanDeClasesUncheckedUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PlanDeClasesCreateWithoutDocenteInput, PlanDeClasesUncheckedCreateWithoutDocenteInput> | PlanDeClasesCreateWithoutDocenteInput[] | PlanDeClasesUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutDocenteInput | PlanDeClasesCreateOrConnectWithoutDocenteInput[]
    upsert?: PlanDeClasesUpsertWithWhereUniqueWithoutDocenteInput | PlanDeClasesUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PlanDeClasesCreateManyDocenteInputEnvelope
    set?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    disconnect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    delete?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    connect?: PlanDeClasesWhereUniqueInput | PlanDeClasesWhereUniqueInput[]
    update?: PlanDeClasesUpdateWithWhereUniqueWithoutDocenteInput | PlanDeClasesUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PlanDeClasesUpdateManyWithWhereWithoutDocenteInput | PlanDeClasesUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PlanDeClasesScalarWhereInput | PlanDeClasesScalarWhereInput[]
  }

  export type PublicacionUncheckedUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PublicacionCreateWithoutDocenteInput, PublicacionUncheckedCreateWithoutDocenteInput> | PublicacionCreateWithoutDocenteInput[] | PublicacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionCreateOrConnectWithoutDocenteInput | PublicacionCreateOrConnectWithoutDocenteInput[]
    upsert?: PublicacionUpsertWithWhereUniqueWithoutDocenteInput | PublicacionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PublicacionCreateManyDocenteInputEnvelope
    set?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    disconnect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    delete?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    connect?: PublicacionWhereUniqueInput | PublicacionWhereUniqueInput[]
    update?: PublicacionUpdateWithWhereUniqueWithoutDocenteInput | PublicacionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PublicacionUpdateManyWithWhereWithoutDocenteInput | PublicacionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
  }

  export type PublicacionInteraccionUncheckedUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutDocenteInput, PublicacionInteraccionUncheckedCreateWithoutDocenteInput> | PublicacionInteraccionCreateWithoutDocenteInput[] | PublicacionInteraccionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutDocenteInput | PublicacionInteraccionCreateOrConnectWithoutDocenteInput[]
    upsert?: PublicacionInteraccionUpsertWithWhereUniqueWithoutDocenteInput | PublicacionInteraccionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: PublicacionInteraccionCreateManyDocenteInputEnvelope
    set?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    disconnect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    delete?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    update?: PublicacionInteraccionUpdateWithWhereUniqueWithoutDocenteInput | PublicacionInteraccionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: PublicacionInteraccionUpdateManyWithWhereWithoutDocenteInput | PublicacionInteraccionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
  }

  export type EditSuggestionCreatemainRoleInput = {
    set: $Enums.RoleType[]
  }

  export type ComposerCreateNestedOneWithoutEditSuggestionInput = {
    create?: XOR<ComposerCreateWithoutEditSuggestionInput, ComposerUncheckedCreateWithoutEditSuggestionInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutEditSuggestionInput
    connect?: ComposerWhereUniqueInput
  }

  export type EditSuggestionUpdatemainRoleInput = {
    set?: $Enums.RoleType[]
    push?: $Enums.RoleType | $Enums.RoleType[]
  }

  export type ComposerUpdateOneRequiredWithoutEditSuggestionNestedInput = {
    create?: XOR<ComposerCreateWithoutEditSuggestionInput, ComposerUncheckedCreateWithoutEditSuggestionInput>
    connectOrCreate?: ComposerCreateOrConnectWithoutEditSuggestionInput
    upsert?: ComposerUpsertWithoutEditSuggestionInput
    connect?: ComposerWhereUniqueInput
    update?: XOR<XOR<ComposerUpdateToOneWithWhereWithoutEditSuggestionInput, ComposerUpdateWithoutEditSuggestionInput>, ComposerUncheckedUpdateWithoutEditSuggestionInput>
  }

  export type CatedraCreateNestedOneWithoutEvaluacionInput = {
    create?: XOR<CatedraCreateWithoutEvaluacionInput, CatedraUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutEvaluacionInput
    connect?: CatedraWhereUniqueInput
  }

  export type EvaluacionAsignacionCreateNestedManyWithoutEvaluacionInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput> | EvaluacionAsignacionCreateWithoutEvaluacionInput[] | EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput | EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput[]
    createMany?: EvaluacionAsignacionCreateManyEvaluacionInputEnvelope
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
  }

  export type PreguntaCreateNestedManyWithoutEvaluacionInput = {
    create?: XOR<PreguntaCreateWithoutEvaluacionInput, PreguntaUncheckedCreateWithoutEvaluacionInput> | PreguntaCreateWithoutEvaluacionInput[] | PreguntaUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: PreguntaCreateOrConnectWithoutEvaluacionInput | PreguntaCreateOrConnectWithoutEvaluacionInput[]
    createMany?: PreguntaCreateManyEvaluacionInputEnvelope
    connect?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
  }

  export type PublicacionCreateNestedOneWithoutEvaluacionInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionInput, PublicacionUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionInput
    connect?: PublicacionWhereUniqueInput
  }

  export type EvaluacionAsignacionUncheckedCreateNestedManyWithoutEvaluacionInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput> | EvaluacionAsignacionCreateWithoutEvaluacionInput[] | EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput | EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput[]
    createMany?: EvaluacionAsignacionCreateManyEvaluacionInputEnvelope
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
  }

  export type PreguntaUncheckedCreateNestedManyWithoutEvaluacionInput = {
    create?: XOR<PreguntaCreateWithoutEvaluacionInput, PreguntaUncheckedCreateWithoutEvaluacionInput> | PreguntaCreateWithoutEvaluacionInput[] | PreguntaUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: PreguntaCreateOrConnectWithoutEvaluacionInput | PreguntaCreateOrConnectWithoutEvaluacionInput[]
    createMany?: PreguntaCreateManyEvaluacionInputEnvelope
    connect?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
  }

  export type PublicacionUncheckedCreateNestedOneWithoutEvaluacionInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionInput, PublicacionUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionInput
    connect?: PublicacionWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type CatedraUpdateOneRequiredWithoutEvaluacionNestedInput = {
    create?: XOR<CatedraCreateWithoutEvaluacionInput, CatedraUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutEvaluacionInput
    upsert?: CatedraUpsertWithoutEvaluacionInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutEvaluacionInput, CatedraUpdateWithoutEvaluacionInput>, CatedraUncheckedUpdateWithoutEvaluacionInput>
  }

  export type EvaluacionAsignacionUpdateManyWithoutEvaluacionNestedInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput> | EvaluacionAsignacionCreateWithoutEvaluacionInput[] | EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput | EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput[]
    upsert?: EvaluacionAsignacionUpsertWithWhereUniqueWithoutEvaluacionInput | EvaluacionAsignacionUpsertWithWhereUniqueWithoutEvaluacionInput[]
    createMany?: EvaluacionAsignacionCreateManyEvaluacionInputEnvelope
    set?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    disconnect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    delete?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    update?: EvaluacionAsignacionUpdateWithWhereUniqueWithoutEvaluacionInput | EvaluacionAsignacionUpdateWithWhereUniqueWithoutEvaluacionInput[]
    updateMany?: EvaluacionAsignacionUpdateManyWithWhereWithoutEvaluacionInput | EvaluacionAsignacionUpdateManyWithWhereWithoutEvaluacionInput[]
    deleteMany?: EvaluacionAsignacionScalarWhereInput | EvaluacionAsignacionScalarWhereInput[]
  }

  export type PreguntaUpdateManyWithoutEvaluacionNestedInput = {
    create?: XOR<PreguntaCreateWithoutEvaluacionInput, PreguntaUncheckedCreateWithoutEvaluacionInput> | PreguntaCreateWithoutEvaluacionInput[] | PreguntaUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: PreguntaCreateOrConnectWithoutEvaluacionInput | PreguntaCreateOrConnectWithoutEvaluacionInput[]
    upsert?: PreguntaUpsertWithWhereUniqueWithoutEvaluacionInput | PreguntaUpsertWithWhereUniqueWithoutEvaluacionInput[]
    createMany?: PreguntaCreateManyEvaluacionInputEnvelope
    set?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    disconnect?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    delete?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    connect?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    update?: PreguntaUpdateWithWhereUniqueWithoutEvaluacionInput | PreguntaUpdateWithWhereUniqueWithoutEvaluacionInput[]
    updateMany?: PreguntaUpdateManyWithWhereWithoutEvaluacionInput | PreguntaUpdateManyWithWhereWithoutEvaluacionInput[]
    deleteMany?: PreguntaScalarWhereInput | PreguntaScalarWhereInput[]
  }

  export type PublicacionUpdateOneWithoutEvaluacionNestedInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionInput, PublicacionUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionInput
    upsert?: PublicacionUpsertWithoutEvaluacionInput
    disconnect?: PublicacionWhereInput | boolean
    delete?: PublicacionWhereInput | boolean
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutEvaluacionInput, PublicacionUpdateWithoutEvaluacionInput>, PublicacionUncheckedUpdateWithoutEvaluacionInput>
  }

  export type EvaluacionAsignacionUncheckedUpdateManyWithoutEvaluacionNestedInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput> | EvaluacionAsignacionCreateWithoutEvaluacionInput[] | EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput | EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput[]
    upsert?: EvaluacionAsignacionUpsertWithWhereUniqueWithoutEvaluacionInput | EvaluacionAsignacionUpsertWithWhereUniqueWithoutEvaluacionInput[]
    createMany?: EvaluacionAsignacionCreateManyEvaluacionInputEnvelope
    set?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    disconnect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    delete?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    connect?: EvaluacionAsignacionWhereUniqueInput | EvaluacionAsignacionWhereUniqueInput[]
    update?: EvaluacionAsignacionUpdateWithWhereUniqueWithoutEvaluacionInput | EvaluacionAsignacionUpdateWithWhereUniqueWithoutEvaluacionInput[]
    updateMany?: EvaluacionAsignacionUpdateManyWithWhereWithoutEvaluacionInput | EvaluacionAsignacionUpdateManyWithWhereWithoutEvaluacionInput[]
    deleteMany?: EvaluacionAsignacionScalarWhereInput | EvaluacionAsignacionScalarWhereInput[]
  }

  export type PreguntaUncheckedUpdateManyWithoutEvaluacionNestedInput = {
    create?: XOR<PreguntaCreateWithoutEvaluacionInput, PreguntaUncheckedCreateWithoutEvaluacionInput> | PreguntaCreateWithoutEvaluacionInput[] | PreguntaUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: PreguntaCreateOrConnectWithoutEvaluacionInput | PreguntaCreateOrConnectWithoutEvaluacionInput[]
    upsert?: PreguntaUpsertWithWhereUniqueWithoutEvaluacionInput | PreguntaUpsertWithWhereUniqueWithoutEvaluacionInput[]
    createMany?: PreguntaCreateManyEvaluacionInputEnvelope
    set?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    disconnect?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    delete?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    connect?: PreguntaWhereUniqueInput | PreguntaWhereUniqueInput[]
    update?: PreguntaUpdateWithWhereUniqueWithoutEvaluacionInput | PreguntaUpdateWithWhereUniqueWithoutEvaluacionInput[]
    updateMany?: PreguntaUpdateManyWithWhereWithoutEvaluacionInput | PreguntaUpdateManyWithWhereWithoutEvaluacionInput[]
    deleteMany?: PreguntaScalarWhereInput | PreguntaScalarWhereInput[]
  }

  export type PublicacionUncheckedUpdateOneWithoutEvaluacionNestedInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionInput, PublicacionUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionInput
    upsert?: PublicacionUpsertWithoutEvaluacionInput
    disconnect?: PublicacionWhereInput | boolean
    delete?: PublicacionWhereInput | boolean
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutEvaluacionInput, PublicacionUpdateWithoutEvaluacionInput>, PublicacionUncheckedUpdateWithoutEvaluacionInput>
  }

  export type CalificacionEvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput
    connect?: CalificacionEvaluacionWhereUniqueInput
  }

  export type AlumnoCreateNestedOneWithoutEvaluacionAsignacionInput = {
    create?: XOR<AlumnoCreateWithoutEvaluacionAsignacionInput, AlumnoUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutEvaluacionAsignacionInput
    connect?: AlumnoWhereUniqueInput
  }

  export type EvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput = {
    create?: XOR<EvaluacionCreateWithoutEvaluacionAsignacionInput, EvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput
    connect?: EvaluacionWhereUniqueInput
  }

  export type PublicacionCreateNestedOneWithoutEvaluacionAsignacionInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionAsignacionInput, PublicacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionAsignacionInput
    connect?: PublicacionWhereUniqueInput
  }

  export type CalificacionEvaluacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput
    connect?: CalificacionEvaluacionWhereUniqueInput
  }

  export type PublicacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionAsignacionInput, PublicacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionAsignacionInput
    connect?: PublicacionWhereUniqueInput
  }

  export type EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput = {
    set?: $Enums.EstadoEvaluacionAsignacion
  }

  export type CalificacionEvaluacionUpdateOneWithoutEvaluacionAsignacionNestedInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput
    upsert?: CalificacionEvaluacionUpsertWithoutEvaluacionAsignacionInput
    disconnect?: CalificacionEvaluacionWhereInput | boolean
    delete?: CalificacionEvaluacionWhereInput | boolean
    connect?: CalificacionEvaluacionWhereUniqueInput
    update?: XOR<XOR<CalificacionEvaluacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUpdateWithoutEvaluacionAsignacionInput>, CalificacionEvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type AlumnoUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput = {
    create?: XOR<AlumnoCreateWithoutEvaluacionAsignacionInput, AlumnoUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutEvaluacionAsignacionInput
    upsert?: AlumnoUpsertWithoutEvaluacionAsignacionInput
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutEvaluacionAsignacionInput, AlumnoUpdateWithoutEvaluacionAsignacionInput>, AlumnoUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type EvaluacionUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput = {
    create?: XOR<EvaluacionCreateWithoutEvaluacionAsignacionInput, EvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput
    upsert?: EvaluacionUpsertWithoutEvaluacionAsignacionInput
    connect?: EvaluacionWhereUniqueInput
    update?: XOR<XOR<EvaluacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput, EvaluacionUpdateWithoutEvaluacionAsignacionInput>, EvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type PublicacionUpdateOneWithoutEvaluacionAsignacionNestedInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionAsignacionInput, PublicacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionAsignacionInput
    upsert?: PublicacionUpsertWithoutEvaluacionAsignacionInput
    disconnect?: PublicacionWhereInput | boolean
    delete?: PublicacionWhereInput | boolean
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput, PublicacionUpdateWithoutEvaluacionAsignacionInput>, PublicacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type CalificacionEvaluacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput = {
    create?: XOR<CalificacionEvaluacionCreateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: CalificacionEvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput
    upsert?: CalificacionEvaluacionUpsertWithoutEvaluacionAsignacionInput
    disconnect?: CalificacionEvaluacionWhereInput | boolean
    delete?: CalificacionEvaluacionWhereInput | boolean
    connect?: CalificacionEvaluacionWhereUniqueInput
    update?: XOR<XOR<CalificacionEvaluacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUpdateWithoutEvaluacionAsignacionInput>, CalificacionEvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type PublicacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput = {
    create?: XOR<PublicacionCreateWithoutEvaluacionAsignacionInput, PublicacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutEvaluacionAsignacionInput
    upsert?: PublicacionUpsertWithoutEvaluacionAsignacionInput
    disconnect?: PublicacionWhereInput | boolean
    delete?: PublicacionWhereInput | boolean
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput, PublicacionUpdateWithoutEvaluacionAsignacionInput>, PublicacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type PreguntaCreateNestedOneWithoutOpcionInput = {
    create?: XOR<PreguntaCreateWithoutOpcionInput, PreguntaUncheckedCreateWithoutOpcionInput>
    connectOrCreate?: PreguntaCreateOrConnectWithoutOpcionInput
    connect?: PreguntaWhereUniqueInput
  }

  export type RespuestaAlumnoCreateNestedManyWithoutOpcionInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutOpcionInput, RespuestaAlumnoUncheckedCreateWithoutOpcionInput> | RespuestaAlumnoCreateWithoutOpcionInput[] | RespuestaAlumnoUncheckedCreateWithoutOpcionInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutOpcionInput | RespuestaAlumnoCreateOrConnectWithoutOpcionInput[]
    createMany?: RespuestaAlumnoCreateManyOpcionInputEnvelope
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
  }

  export type RespuestaAlumnoUncheckedCreateNestedManyWithoutOpcionInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutOpcionInput, RespuestaAlumnoUncheckedCreateWithoutOpcionInput> | RespuestaAlumnoCreateWithoutOpcionInput[] | RespuestaAlumnoUncheckedCreateWithoutOpcionInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutOpcionInput | RespuestaAlumnoCreateOrConnectWithoutOpcionInput[]
    createMany?: RespuestaAlumnoCreateManyOpcionInputEnvelope
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
  }

  export type PreguntaUpdateOneRequiredWithoutOpcionNestedInput = {
    create?: XOR<PreguntaCreateWithoutOpcionInput, PreguntaUncheckedCreateWithoutOpcionInput>
    connectOrCreate?: PreguntaCreateOrConnectWithoutOpcionInput
    upsert?: PreguntaUpsertWithoutOpcionInput
    connect?: PreguntaWhereUniqueInput
    update?: XOR<XOR<PreguntaUpdateToOneWithWhereWithoutOpcionInput, PreguntaUpdateWithoutOpcionInput>, PreguntaUncheckedUpdateWithoutOpcionInput>
  }

  export type RespuestaAlumnoUpdateManyWithoutOpcionNestedInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutOpcionInput, RespuestaAlumnoUncheckedCreateWithoutOpcionInput> | RespuestaAlumnoCreateWithoutOpcionInput[] | RespuestaAlumnoUncheckedCreateWithoutOpcionInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutOpcionInput | RespuestaAlumnoCreateOrConnectWithoutOpcionInput[]
    upsert?: RespuestaAlumnoUpsertWithWhereUniqueWithoutOpcionInput | RespuestaAlumnoUpsertWithWhereUniqueWithoutOpcionInput[]
    createMany?: RespuestaAlumnoCreateManyOpcionInputEnvelope
    set?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    disconnect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    delete?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    update?: RespuestaAlumnoUpdateWithWhereUniqueWithoutOpcionInput | RespuestaAlumnoUpdateWithWhereUniqueWithoutOpcionInput[]
    updateMany?: RespuestaAlumnoUpdateManyWithWhereWithoutOpcionInput | RespuestaAlumnoUpdateManyWithWhereWithoutOpcionInput[]
    deleteMany?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
  }

  export type RespuestaAlumnoUncheckedUpdateManyWithoutOpcionNestedInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutOpcionInput, RespuestaAlumnoUncheckedCreateWithoutOpcionInput> | RespuestaAlumnoCreateWithoutOpcionInput[] | RespuestaAlumnoUncheckedCreateWithoutOpcionInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutOpcionInput | RespuestaAlumnoCreateOrConnectWithoutOpcionInput[]
    upsert?: RespuestaAlumnoUpsertWithWhereUniqueWithoutOpcionInput | RespuestaAlumnoUpsertWithWhereUniqueWithoutOpcionInput[]
    createMany?: RespuestaAlumnoCreateManyOpcionInputEnvelope
    set?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    disconnect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    delete?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    update?: RespuestaAlumnoUpdateWithWhereUniqueWithoutOpcionInput | RespuestaAlumnoUpdateWithWhereUniqueWithoutOpcionInput[]
    updateMany?: RespuestaAlumnoUpdateManyWithWhereWithoutOpcionInput | RespuestaAlumnoUpdateManyWithWhereWithoutOpcionInput[]
    deleteMany?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
  }

  export type CatedraAlumnoCreateNestedOneWithoutPagoInput = {
    create?: XOR<CatedraAlumnoCreateWithoutPagoInput, CatedraAlumnoUncheckedCreateWithoutPagoInput>
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutPagoInput
    connect?: CatedraAlumnoWhereUniqueInput
  }

  export type DocenteCreateNestedOneWithoutPagoInput = {
    create?: XOR<DocenteCreateWithoutPagoInput, DocenteUncheckedCreateWithoutPagoInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPagoInput
    connect?: DocenteWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumTipoPagoFieldUpdateOperationsInput = {
    set?: $Enums.TipoPago
  }

  export type CatedraAlumnoUpdateOneRequiredWithoutPagoNestedInput = {
    create?: XOR<CatedraAlumnoCreateWithoutPagoInput, CatedraAlumnoUncheckedCreateWithoutPagoInput>
    connectOrCreate?: CatedraAlumnoCreateOrConnectWithoutPagoInput
    upsert?: CatedraAlumnoUpsertWithoutPagoInput
    connect?: CatedraAlumnoWhereUniqueInput
    update?: XOR<XOR<CatedraAlumnoUpdateToOneWithWhereWithoutPagoInput, CatedraAlumnoUpdateWithoutPagoInput>, CatedraAlumnoUncheckedUpdateWithoutPagoInput>
  }

  export type DocenteUpdateOneWithoutPagoNestedInput = {
    create?: XOR<DocenteCreateWithoutPagoInput, DocenteUncheckedCreateWithoutPagoInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPagoInput
    upsert?: DocenteUpsertWithoutPagoInput
    disconnect?: DocenteWhereInput | boolean
    delete?: DocenteWhereInput | boolean
    connect?: DocenteWhereUniqueInput
    update?: XOR<XOR<DocenteUpdateToOneWithWhereWithoutPagoInput, DocenteUpdateWithoutPagoInput>, DocenteUncheckedUpdateWithoutPagoInput>
  }

  export type CatedraCreateNestedOneWithoutPlanDeClasesInput = {
    create?: XOR<CatedraCreateWithoutPlanDeClasesInput, CatedraUncheckedCreateWithoutPlanDeClasesInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutPlanDeClasesInput
    connect?: CatedraWhereUniqueInput
  }

  export type DocenteCreateNestedOneWithoutPlanDeClasesInput = {
    create?: XOR<DocenteCreateWithoutPlanDeClasesInput, DocenteUncheckedCreateWithoutPlanDeClasesInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPlanDeClasesInput
    connect?: DocenteWhereUniqueInput
  }

  export type UnidadPlanCreateNestedManyWithoutPlanDeClasesInput = {
    create?: XOR<UnidadPlanCreateWithoutPlanDeClasesInput, UnidadPlanUncheckedCreateWithoutPlanDeClasesInput> | UnidadPlanCreateWithoutPlanDeClasesInput[] | UnidadPlanUncheckedCreateWithoutPlanDeClasesInput[]
    connectOrCreate?: UnidadPlanCreateOrConnectWithoutPlanDeClasesInput | UnidadPlanCreateOrConnectWithoutPlanDeClasesInput[]
    createMany?: UnidadPlanCreateManyPlanDeClasesInputEnvelope
    connect?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
  }

  export type UnidadPlanUncheckedCreateNestedManyWithoutPlanDeClasesInput = {
    create?: XOR<UnidadPlanCreateWithoutPlanDeClasesInput, UnidadPlanUncheckedCreateWithoutPlanDeClasesInput> | UnidadPlanCreateWithoutPlanDeClasesInput[] | UnidadPlanUncheckedCreateWithoutPlanDeClasesInput[]
    connectOrCreate?: UnidadPlanCreateOrConnectWithoutPlanDeClasesInput | UnidadPlanCreateOrConnectWithoutPlanDeClasesInput[]
    createMany?: UnidadPlanCreateManyPlanDeClasesInputEnvelope
    connect?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
  }

  export type EnumTipoOrganizacionPlanFieldUpdateOperationsInput = {
    set?: $Enums.TipoOrganizacionPlan
  }

  export type CatedraUpdateOneRequiredWithoutPlanDeClasesNestedInput = {
    create?: XOR<CatedraCreateWithoutPlanDeClasesInput, CatedraUncheckedCreateWithoutPlanDeClasesInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutPlanDeClasesInput
    upsert?: CatedraUpsertWithoutPlanDeClasesInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutPlanDeClasesInput, CatedraUpdateWithoutPlanDeClasesInput>, CatedraUncheckedUpdateWithoutPlanDeClasesInput>
  }

  export type DocenteUpdateOneRequiredWithoutPlanDeClasesNestedInput = {
    create?: XOR<DocenteCreateWithoutPlanDeClasesInput, DocenteUncheckedCreateWithoutPlanDeClasesInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPlanDeClasesInput
    upsert?: DocenteUpsertWithoutPlanDeClasesInput
    connect?: DocenteWhereUniqueInput
    update?: XOR<XOR<DocenteUpdateToOneWithWhereWithoutPlanDeClasesInput, DocenteUpdateWithoutPlanDeClasesInput>, DocenteUncheckedUpdateWithoutPlanDeClasesInput>
  }

  export type UnidadPlanUpdateManyWithoutPlanDeClasesNestedInput = {
    create?: XOR<UnidadPlanCreateWithoutPlanDeClasesInput, UnidadPlanUncheckedCreateWithoutPlanDeClasesInput> | UnidadPlanCreateWithoutPlanDeClasesInput[] | UnidadPlanUncheckedCreateWithoutPlanDeClasesInput[]
    connectOrCreate?: UnidadPlanCreateOrConnectWithoutPlanDeClasesInput | UnidadPlanCreateOrConnectWithoutPlanDeClasesInput[]
    upsert?: UnidadPlanUpsertWithWhereUniqueWithoutPlanDeClasesInput | UnidadPlanUpsertWithWhereUniqueWithoutPlanDeClasesInput[]
    createMany?: UnidadPlanCreateManyPlanDeClasesInputEnvelope
    set?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    disconnect?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    delete?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    connect?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    update?: UnidadPlanUpdateWithWhereUniqueWithoutPlanDeClasesInput | UnidadPlanUpdateWithWhereUniqueWithoutPlanDeClasesInput[]
    updateMany?: UnidadPlanUpdateManyWithWhereWithoutPlanDeClasesInput | UnidadPlanUpdateManyWithWhereWithoutPlanDeClasesInput[]
    deleteMany?: UnidadPlanScalarWhereInput | UnidadPlanScalarWhereInput[]
  }

  export type UnidadPlanUncheckedUpdateManyWithoutPlanDeClasesNestedInput = {
    create?: XOR<UnidadPlanCreateWithoutPlanDeClasesInput, UnidadPlanUncheckedCreateWithoutPlanDeClasesInput> | UnidadPlanCreateWithoutPlanDeClasesInput[] | UnidadPlanUncheckedCreateWithoutPlanDeClasesInput[]
    connectOrCreate?: UnidadPlanCreateOrConnectWithoutPlanDeClasesInput | UnidadPlanCreateOrConnectWithoutPlanDeClasesInput[]
    upsert?: UnidadPlanUpsertWithWhereUniqueWithoutPlanDeClasesInput | UnidadPlanUpsertWithWhereUniqueWithoutPlanDeClasesInput[]
    createMany?: UnidadPlanCreateManyPlanDeClasesInputEnvelope
    set?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    disconnect?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    delete?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    connect?: UnidadPlanWhereUniqueInput | UnidadPlanWhereUniqueInput[]
    update?: UnidadPlanUpdateWithWhereUniqueWithoutPlanDeClasesInput | UnidadPlanUpdateWithWhereUniqueWithoutPlanDeClasesInput[]
    updateMany?: UnidadPlanUpdateManyWithWhereWithoutPlanDeClasesInput | UnidadPlanUpdateManyWithWhereWithoutPlanDeClasesInput[]
    deleteMany?: UnidadPlanScalarWhereInput | UnidadPlanScalarWhereInput[]
  }

  export type OpcionCreateNestedManyWithoutPreguntaInput = {
    create?: XOR<OpcionCreateWithoutPreguntaInput, OpcionUncheckedCreateWithoutPreguntaInput> | OpcionCreateWithoutPreguntaInput[] | OpcionUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: OpcionCreateOrConnectWithoutPreguntaInput | OpcionCreateOrConnectWithoutPreguntaInput[]
    createMany?: OpcionCreateManyPreguntaInputEnvelope
    connect?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
  }

  export type EvaluacionCreateNestedOneWithoutPreguntaInput = {
    create?: XOR<EvaluacionCreateWithoutPreguntaInput, EvaluacionUncheckedCreateWithoutPreguntaInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPreguntaInput
    connect?: EvaluacionWhereUniqueInput
  }

  export type RespuestaAlumnoCreateNestedManyWithoutPreguntaInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutPreguntaInput, RespuestaAlumnoUncheckedCreateWithoutPreguntaInput> | RespuestaAlumnoCreateWithoutPreguntaInput[] | RespuestaAlumnoUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutPreguntaInput | RespuestaAlumnoCreateOrConnectWithoutPreguntaInput[]
    createMany?: RespuestaAlumnoCreateManyPreguntaInputEnvelope
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
  }

  export type OpcionUncheckedCreateNestedManyWithoutPreguntaInput = {
    create?: XOR<OpcionCreateWithoutPreguntaInput, OpcionUncheckedCreateWithoutPreguntaInput> | OpcionCreateWithoutPreguntaInput[] | OpcionUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: OpcionCreateOrConnectWithoutPreguntaInput | OpcionCreateOrConnectWithoutPreguntaInput[]
    createMany?: OpcionCreateManyPreguntaInputEnvelope
    connect?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
  }

  export type RespuestaAlumnoUncheckedCreateNestedManyWithoutPreguntaInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutPreguntaInput, RespuestaAlumnoUncheckedCreateWithoutPreguntaInput> | RespuestaAlumnoCreateWithoutPreguntaInput[] | RespuestaAlumnoUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutPreguntaInput | RespuestaAlumnoCreateOrConnectWithoutPreguntaInput[]
    createMany?: RespuestaAlumnoCreateManyPreguntaInputEnvelope
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
  }

  export type OpcionUpdateManyWithoutPreguntaNestedInput = {
    create?: XOR<OpcionCreateWithoutPreguntaInput, OpcionUncheckedCreateWithoutPreguntaInput> | OpcionCreateWithoutPreguntaInput[] | OpcionUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: OpcionCreateOrConnectWithoutPreguntaInput | OpcionCreateOrConnectWithoutPreguntaInput[]
    upsert?: OpcionUpsertWithWhereUniqueWithoutPreguntaInput | OpcionUpsertWithWhereUniqueWithoutPreguntaInput[]
    createMany?: OpcionCreateManyPreguntaInputEnvelope
    set?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    disconnect?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    delete?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    connect?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    update?: OpcionUpdateWithWhereUniqueWithoutPreguntaInput | OpcionUpdateWithWhereUniqueWithoutPreguntaInput[]
    updateMany?: OpcionUpdateManyWithWhereWithoutPreguntaInput | OpcionUpdateManyWithWhereWithoutPreguntaInput[]
    deleteMany?: OpcionScalarWhereInput | OpcionScalarWhereInput[]
  }

  export type EvaluacionUpdateOneRequiredWithoutPreguntaNestedInput = {
    create?: XOR<EvaluacionCreateWithoutPreguntaInput, EvaluacionUncheckedCreateWithoutPreguntaInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPreguntaInput
    upsert?: EvaluacionUpsertWithoutPreguntaInput
    connect?: EvaluacionWhereUniqueInput
    update?: XOR<XOR<EvaluacionUpdateToOneWithWhereWithoutPreguntaInput, EvaluacionUpdateWithoutPreguntaInput>, EvaluacionUncheckedUpdateWithoutPreguntaInput>
  }

  export type RespuestaAlumnoUpdateManyWithoutPreguntaNestedInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutPreguntaInput, RespuestaAlumnoUncheckedCreateWithoutPreguntaInput> | RespuestaAlumnoCreateWithoutPreguntaInput[] | RespuestaAlumnoUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutPreguntaInput | RespuestaAlumnoCreateOrConnectWithoutPreguntaInput[]
    upsert?: RespuestaAlumnoUpsertWithWhereUniqueWithoutPreguntaInput | RespuestaAlumnoUpsertWithWhereUniqueWithoutPreguntaInput[]
    createMany?: RespuestaAlumnoCreateManyPreguntaInputEnvelope
    set?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    disconnect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    delete?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    update?: RespuestaAlumnoUpdateWithWhereUniqueWithoutPreguntaInput | RespuestaAlumnoUpdateWithWhereUniqueWithoutPreguntaInput[]
    updateMany?: RespuestaAlumnoUpdateManyWithWhereWithoutPreguntaInput | RespuestaAlumnoUpdateManyWithWhereWithoutPreguntaInput[]
    deleteMany?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
  }

  export type OpcionUncheckedUpdateManyWithoutPreguntaNestedInput = {
    create?: XOR<OpcionCreateWithoutPreguntaInput, OpcionUncheckedCreateWithoutPreguntaInput> | OpcionCreateWithoutPreguntaInput[] | OpcionUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: OpcionCreateOrConnectWithoutPreguntaInput | OpcionCreateOrConnectWithoutPreguntaInput[]
    upsert?: OpcionUpsertWithWhereUniqueWithoutPreguntaInput | OpcionUpsertWithWhereUniqueWithoutPreguntaInput[]
    createMany?: OpcionCreateManyPreguntaInputEnvelope
    set?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    disconnect?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    delete?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    connect?: OpcionWhereUniqueInput | OpcionWhereUniqueInput[]
    update?: OpcionUpdateWithWhereUniqueWithoutPreguntaInput | OpcionUpdateWithWhereUniqueWithoutPreguntaInput[]
    updateMany?: OpcionUpdateManyWithWhereWithoutPreguntaInput | OpcionUpdateManyWithWhereWithoutPreguntaInput[]
    deleteMany?: OpcionScalarWhereInput | OpcionScalarWhereInput[]
  }

  export type RespuestaAlumnoUncheckedUpdateManyWithoutPreguntaNestedInput = {
    create?: XOR<RespuestaAlumnoCreateWithoutPreguntaInput, RespuestaAlumnoUncheckedCreateWithoutPreguntaInput> | RespuestaAlumnoCreateWithoutPreguntaInput[] | RespuestaAlumnoUncheckedCreateWithoutPreguntaInput[]
    connectOrCreate?: RespuestaAlumnoCreateOrConnectWithoutPreguntaInput | RespuestaAlumnoCreateOrConnectWithoutPreguntaInput[]
    upsert?: RespuestaAlumnoUpsertWithWhereUniqueWithoutPreguntaInput | RespuestaAlumnoUpsertWithWhereUniqueWithoutPreguntaInput[]
    createMany?: RespuestaAlumnoCreateManyPreguntaInputEnvelope
    set?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    disconnect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    delete?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    connect?: RespuestaAlumnoWhereUniqueInput | RespuestaAlumnoWhereUniqueInput[]
    update?: RespuestaAlumnoUpdateWithWhereUniqueWithoutPreguntaInput | RespuestaAlumnoUpdateWithWhereUniqueWithoutPreguntaInput[]
    updateMany?: RespuestaAlumnoUpdateManyWithWhereWithoutPreguntaInput | RespuestaAlumnoUpdateManyWithWhereWithoutPreguntaInput[]
    deleteMany?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
  }

  export type ComentarioPublicacionCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutPublicacionInput, ComentarioPublicacionUncheckedCreateWithoutPublicacionInput> | ComentarioPublicacionCreateWithoutPublicacionInput[] | ComentarioPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutPublicacionInput | ComentarioPublicacionCreateOrConnectWithoutPublicacionInput[]
    createMany?: ComentarioPublicacionCreateManyPublicacionInputEnvelope
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
  }

  export type AlumnoCreateNestedOneWithoutPublicacionInput = {
    create?: XOR<AlumnoCreateWithoutPublicacionInput, AlumnoUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutPublicacionInput
    connect?: AlumnoWhereUniqueInput
  }

  export type DocenteCreateNestedOneWithoutPublicacionInput = {
    create?: XOR<DocenteCreateWithoutPublicacionInput, DocenteUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPublicacionInput
    connect?: DocenteWhereUniqueInput
  }

  export type CatedraCreateNestedOneWithoutPublicacionInput = {
    create?: XOR<CatedraCreateWithoutPublicacionInput, CatedraUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutPublicacionInput
    connect?: CatedraWhereUniqueInput
  }

  export type EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutPublicacionInput, EvaluacionAsignacionUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutPublicacionInput
    connect?: EvaluacionAsignacionWhereUniqueInput
  }

  export type EvaluacionCreateNestedOneWithoutPublicacionInput = {
    create?: XOR<EvaluacionCreateWithoutPublicacionInput, EvaluacionUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPublicacionInput
    connect?: EvaluacionWhereUniqueInput
  }

  export type TareaMaestraCreateNestedOneWithoutPublicacionInput = {
    create?: XOR<TareaMaestraCreateWithoutPublicacionInput, TareaMaestraUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutPublicacionInput
    connect?: TareaMaestraWhereUniqueInput
  }

  export type PublicacionInteraccionCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutPublicacionInput, PublicacionInteraccionUncheckedCreateWithoutPublicacionInput> | PublicacionInteraccionCreateWithoutPublicacionInput[] | PublicacionInteraccionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutPublicacionInput | PublicacionInteraccionCreateOrConnectWithoutPublicacionInput[]
    createMany?: PublicacionInteraccionCreateManyPublicacionInputEnvelope
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
  }

  export type ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutPublicacionInput, ComentarioPublicacionUncheckedCreateWithoutPublicacionInput> | ComentarioPublicacionCreateWithoutPublicacionInput[] | ComentarioPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutPublicacionInput | ComentarioPublicacionCreateOrConnectWithoutPublicacionInput[]
    createMany?: ComentarioPublicacionCreateManyPublicacionInputEnvelope
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
  }

  export type PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutPublicacionInput, PublicacionInteraccionUncheckedCreateWithoutPublicacionInput> | PublicacionInteraccionCreateWithoutPublicacionInput[] | PublicacionInteraccionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutPublicacionInput | PublicacionInteraccionCreateOrConnectWithoutPublicacionInput[]
    createMany?: PublicacionInteraccionCreateManyPublicacionInputEnvelope
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
  }

  export type EnumTipoPublicacionFieldUpdateOperationsInput = {
    set?: $Enums.TipoPublicacion
  }

  export type ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutPublicacionInput, ComentarioPublicacionUncheckedCreateWithoutPublicacionInput> | ComentarioPublicacionCreateWithoutPublicacionInput[] | ComentarioPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutPublicacionInput | ComentarioPublicacionCreateOrConnectWithoutPublicacionInput[]
    upsert?: ComentarioPublicacionUpsertWithWhereUniqueWithoutPublicacionInput | ComentarioPublicacionUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: ComentarioPublicacionCreateManyPublicacionInputEnvelope
    set?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    disconnect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    delete?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    update?: ComentarioPublicacionUpdateWithWhereUniqueWithoutPublicacionInput | ComentarioPublicacionUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: ComentarioPublicacionUpdateManyWithWhereWithoutPublicacionInput | ComentarioPublicacionUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
  }

  export type AlumnoUpdateOneWithoutPublicacionNestedInput = {
    create?: XOR<AlumnoCreateWithoutPublicacionInput, AlumnoUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutPublicacionInput
    upsert?: AlumnoUpsertWithoutPublicacionInput
    disconnect?: AlumnoWhereInput | boolean
    delete?: AlumnoWhereInput | boolean
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutPublicacionInput, AlumnoUpdateWithoutPublicacionInput>, AlumnoUncheckedUpdateWithoutPublicacionInput>
  }

  export type DocenteUpdateOneWithoutPublicacionNestedInput = {
    create?: XOR<DocenteCreateWithoutPublicacionInput, DocenteUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPublicacionInput
    upsert?: DocenteUpsertWithoutPublicacionInput
    disconnect?: DocenteWhereInput | boolean
    delete?: DocenteWhereInput | boolean
    connect?: DocenteWhereUniqueInput
    update?: XOR<XOR<DocenteUpdateToOneWithWhereWithoutPublicacionInput, DocenteUpdateWithoutPublicacionInput>, DocenteUncheckedUpdateWithoutPublicacionInput>
  }

  export type CatedraUpdateOneRequiredWithoutPublicacionNestedInput = {
    create?: XOR<CatedraCreateWithoutPublicacionInput, CatedraUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutPublicacionInput
    upsert?: CatedraUpsertWithoutPublicacionInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutPublicacionInput, CatedraUpdateWithoutPublicacionInput>, CatedraUncheckedUpdateWithoutPublicacionInput>
  }

  export type EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput = {
    create?: XOR<EvaluacionAsignacionCreateWithoutPublicacionInput, EvaluacionAsignacionUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: EvaluacionAsignacionCreateOrConnectWithoutPublicacionInput
    upsert?: EvaluacionAsignacionUpsertWithoutPublicacionInput
    disconnect?: EvaluacionAsignacionWhereInput | boolean
    delete?: EvaluacionAsignacionWhereInput | boolean
    connect?: EvaluacionAsignacionWhereUniqueInput
    update?: XOR<XOR<EvaluacionAsignacionUpdateToOneWithWhereWithoutPublicacionInput, EvaluacionAsignacionUpdateWithoutPublicacionInput>, EvaluacionAsignacionUncheckedUpdateWithoutPublicacionInput>
  }

  export type EvaluacionUpdateOneWithoutPublicacionNestedInput = {
    create?: XOR<EvaluacionCreateWithoutPublicacionInput, EvaluacionUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPublicacionInput
    upsert?: EvaluacionUpsertWithoutPublicacionInput
    disconnect?: EvaluacionWhereInput | boolean
    delete?: EvaluacionWhereInput | boolean
    connect?: EvaluacionWhereUniqueInput
    update?: XOR<XOR<EvaluacionUpdateToOneWithWhereWithoutPublicacionInput, EvaluacionUpdateWithoutPublicacionInput>, EvaluacionUncheckedUpdateWithoutPublicacionInput>
  }

  export type TareaMaestraUpdateOneWithoutPublicacionNestedInput = {
    create?: XOR<TareaMaestraCreateWithoutPublicacionInput, TareaMaestraUncheckedCreateWithoutPublicacionInput>
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutPublicacionInput
    upsert?: TareaMaestraUpsertWithoutPublicacionInput
    disconnect?: TareaMaestraWhereInput | boolean
    delete?: TareaMaestraWhereInput | boolean
    connect?: TareaMaestraWhereUniqueInput
    update?: XOR<XOR<TareaMaestraUpdateToOneWithWhereWithoutPublicacionInput, TareaMaestraUpdateWithoutPublicacionInput>, TareaMaestraUncheckedUpdateWithoutPublicacionInput>
  }

  export type PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutPublicacionInput, PublicacionInteraccionUncheckedCreateWithoutPublicacionInput> | PublicacionInteraccionCreateWithoutPublicacionInput[] | PublicacionInteraccionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutPublicacionInput | PublicacionInteraccionCreateOrConnectWithoutPublicacionInput[]
    upsert?: PublicacionInteraccionUpsertWithWhereUniqueWithoutPublicacionInput | PublicacionInteraccionUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: PublicacionInteraccionCreateManyPublicacionInputEnvelope
    set?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    disconnect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    delete?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    update?: PublicacionInteraccionUpdateWithWhereUniqueWithoutPublicacionInput | PublicacionInteraccionUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: PublicacionInteraccionUpdateManyWithWhereWithoutPublicacionInput | PublicacionInteraccionUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
  }

  export type ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<ComentarioPublicacionCreateWithoutPublicacionInput, ComentarioPublicacionUncheckedCreateWithoutPublicacionInput> | ComentarioPublicacionCreateWithoutPublicacionInput[] | ComentarioPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentarioPublicacionCreateOrConnectWithoutPublicacionInput | ComentarioPublicacionCreateOrConnectWithoutPublicacionInput[]
    upsert?: ComentarioPublicacionUpsertWithWhereUniqueWithoutPublicacionInput | ComentarioPublicacionUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: ComentarioPublicacionCreateManyPublicacionInputEnvelope
    set?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    disconnect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    delete?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    connect?: ComentarioPublicacionWhereUniqueInput | ComentarioPublicacionWhereUniqueInput[]
    update?: ComentarioPublicacionUpdateWithWhereUniqueWithoutPublicacionInput | ComentarioPublicacionUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: ComentarioPublicacionUpdateManyWithWhereWithoutPublicacionInput | ComentarioPublicacionUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
  }

  export type PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<PublicacionInteraccionCreateWithoutPublicacionInput, PublicacionInteraccionUncheckedCreateWithoutPublicacionInput> | PublicacionInteraccionCreateWithoutPublicacionInput[] | PublicacionInteraccionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: PublicacionInteraccionCreateOrConnectWithoutPublicacionInput | PublicacionInteraccionCreateOrConnectWithoutPublicacionInput[]
    upsert?: PublicacionInteraccionUpsertWithWhereUniqueWithoutPublicacionInput | PublicacionInteraccionUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: PublicacionInteraccionCreateManyPublicacionInputEnvelope
    set?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    disconnect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    delete?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    connect?: PublicacionInteraccionWhereUniqueInput | PublicacionInteraccionWhereUniqueInput[]
    update?: PublicacionInteraccionUpdateWithWhereUniqueWithoutPublicacionInput | PublicacionInteraccionUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: PublicacionInteraccionUpdateManyWithWhereWithoutPublicacionInput | PublicacionInteraccionUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
  }

  export type AlumnoCreateNestedOneWithoutPublicacionInteraccionInput = {
    create?: XOR<AlumnoCreateWithoutPublicacionInteraccionInput, AlumnoUncheckedCreateWithoutPublicacionInteraccionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutPublicacionInteraccionInput
    connect?: AlumnoWhereUniqueInput
  }

  export type DocenteCreateNestedOneWithoutPublicacionInteraccionInput = {
    create?: XOR<DocenteCreateWithoutPublicacionInteraccionInput, DocenteUncheckedCreateWithoutPublicacionInteraccionInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPublicacionInteraccionInput
    connect?: DocenteWhereUniqueInput
  }

  export type PublicacionCreateNestedOneWithoutPublicacionInteraccionInput = {
    create?: XOR<PublicacionCreateWithoutPublicacionInteraccionInput, PublicacionUncheckedCreateWithoutPublicacionInteraccionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutPublicacionInteraccionInput
    connect?: PublicacionWhereUniqueInput
  }

  export type EnumTipoInteraccionPublicacionFieldUpdateOperationsInput = {
    set?: $Enums.TipoInteraccionPublicacion
  }

  export type AlumnoUpdateOneWithoutPublicacionInteraccionNestedInput = {
    create?: XOR<AlumnoCreateWithoutPublicacionInteraccionInput, AlumnoUncheckedCreateWithoutPublicacionInteraccionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutPublicacionInteraccionInput
    upsert?: AlumnoUpsertWithoutPublicacionInteraccionInput
    disconnect?: AlumnoWhereInput | boolean
    delete?: AlumnoWhereInput | boolean
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutPublicacionInteraccionInput, AlumnoUpdateWithoutPublicacionInteraccionInput>, AlumnoUncheckedUpdateWithoutPublicacionInteraccionInput>
  }

  export type DocenteUpdateOneWithoutPublicacionInteraccionNestedInput = {
    create?: XOR<DocenteCreateWithoutPublicacionInteraccionInput, DocenteUncheckedCreateWithoutPublicacionInteraccionInput>
    connectOrCreate?: DocenteCreateOrConnectWithoutPublicacionInteraccionInput
    upsert?: DocenteUpsertWithoutPublicacionInteraccionInput
    disconnect?: DocenteWhereInput | boolean
    delete?: DocenteWhereInput | boolean
    connect?: DocenteWhereUniqueInput
    update?: XOR<XOR<DocenteUpdateToOneWithWhereWithoutPublicacionInteraccionInput, DocenteUpdateWithoutPublicacionInteraccionInput>, DocenteUncheckedUpdateWithoutPublicacionInteraccionInput>
  }

  export type PublicacionUpdateOneRequiredWithoutPublicacionInteraccionNestedInput = {
    create?: XOR<PublicacionCreateWithoutPublicacionInteraccionInput, PublicacionUncheckedCreateWithoutPublicacionInteraccionInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutPublicacionInteraccionInput
    upsert?: PublicacionUpsertWithoutPublicacionInteraccionInput
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutPublicacionInteraccionInput, PublicacionUpdateWithoutPublicacionInteraccionInput>, PublicacionUncheckedUpdateWithoutPublicacionInteraccionInput>
  }

  export type AlumnoCreateNestedOneWithoutPuntuacionInput = {
    create?: XOR<AlumnoCreateWithoutPuntuacionInput, AlumnoUncheckedCreateWithoutPuntuacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutPuntuacionInput
    connect?: AlumnoWhereUniqueInput
  }

  export type CatedraCreateNestedOneWithoutPuntuacionInput = {
    create?: XOR<CatedraCreateWithoutPuntuacionInput, CatedraUncheckedCreateWithoutPuntuacionInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutPuntuacionInput
    connect?: CatedraWhereUniqueInput
  }

  export type EnumTipoPuntuacionFieldUpdateOperationsInput = {
    set?: $Enums.TipoPuntuacion
  }

  export type AlumnoUpdateOneRequiredWithoutPuntuacionNestedInput = {
    create?: XOR<AlumnoCreateWithoutPuntuacionInput, AlumnoUncheckedCreateWithoutPuntuacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutPuntuacionInput
    upsert?: AlumnoUpsertWithoutPuntuacionInput
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutPuntuacionInput, AlumnoUpdateWithoutPuntuacionInput>, AlumnoUncheckedUpdateWithoutPuntuacionInput>
  }

  export type CatedraUpdateOneWithoutPuntuacionNestedInput = {
    create?: XOR<CatedraCreateWithoutPuntuacionInput, CatedraUncheckedCreateWithoutPuntuacionInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutPuntuacionInput
    upsert?: CatedraUpsertWithoutPuntuacionInput
    disconnect?: CatedraWhereInput | boolean
    delete?: CatedraWhereInput | boolean
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutPuntuacionInput, CatedraUpdateWithoutPuntuacionInput>, CatedraUncheckedUpdateWithoutPuntuacionInput>
  }

  export type AlumnoCreateNestedOneWithoutRespuestaAlumnoInput = {
    create?: XOR<AlumnoCreateWithoutRespuestaAlumnoInput, AlumnoUncheckedCreateWithoutRespuestaAlumnoInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutRespuestaAlumnoInput
    connect?: AlumnoWhereUniqueInput
  }

  export type OpcionCreateNestedOneWithoutRespuestaAlumnoInput = {
    create?: XOR<OpcionCreateWithoutRespuestaAlumnoInput, OpcionUncheckedCreateWithoutRespuestaAlumnoInput>
    connectOrCreate?: OpcionCreateOrConnectWithoutRespuestaAlumnoInput
    connect?: OpcionWhereUniqueInput
  }

  export type PreguntaCreateNestedOneWithoutRespuestaAlumnoInput = {
    create?: XOR<PreguntaCreateWithoutRespuestaAlumnoInput, PreguntaUncheckedCreateWithoutRespuestaAlumnoInput>
    connectOrCreate?: PreguntaCreateOrConnectWithoutRespuestaAlumnoInput
    connect?: PreguntaWhereUniqueInput
  }

  export type AlumnoUpdateOneRequiredWithoutRespuestaAlumnoNestedInput = {
    create?: XOR<AlumnoCreateWithoutRespuestaAlumnoInput, AlumnoUncheckedCreateWithoutRespuestaAlumnoInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutRespuestaAlumnoInput
    upsert?: AlumnoUpsertWithoutRespuestaAlumnoInput
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutRespuestaAlumnoInput, AlumnoUpdateWithoutRespuestaAlumnoInput>, AlumnoUncheckedUpdateWithoutRespuestaAlumnoInput>
  }

  export type OpcionUpdateOneRequiredWithoutRespuestaAlumnoNestedInput = {
    create?: XOR<OpcionCreateWithoutRespuestaAlumnoInput, OpcionUncheckedCreateWithoutRespuestaAlumnoInput>
    connectOrCreate?: OpcionCreateOrConnectWithoutRespuestaAlumnoInput
    upsert?: OpcionUpsertWithoutRespuestaAlumnoInput
    connect?: OpcionWhereUniqueInput
    update?: XOR<XOR<OpcionUpdateToOneWithWhereWithoutRespuestaAlumnoInput, OpcionUpdateWithoutRespuestaAlumnoInput>, OpcionUncheckedUpdateWithoutRespuestaAlumnoInput>
  }

  export type PreguntaUpdateOneRequiredWithoutRespuestaAlumnoNestedInput = {
    create?: XOR<PreguntaCreateWithoutRespuestaAlumnoInput, PreguntaUncheckedCreateWithoutRespuestaAlumnoInput>
    connectOrCreate?: PreguntaCreateOrConnectWithoutRespuestaAlumnoInput
    upsert?: PreguntaUpsertWithoutRespuestaAlumnoInput
    connect?: PreguntaWhereUniqueInput
    update?: XOR<XOR<PreguntaUpdateToOneWithWhereWithoutRespuestaAlumnoInput, PreguntaUpdateWithoutRespuestaAlumnoInput>, PreguntaUncheckedUpdateWithoutRespuestaAlumnoInput>
  }

  export type AlumnoCreateNestedOneWithoutTareaAsignacionInput = {
    create?: XOR<AlumnoCreateWithoutTareaAsignacionInput, AlumnoUncheckedCreateWithoutTareaAsignacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutTareaAsignacionInput
    connect?: AlumnoWhereUniqueInput
  }

  export type TareaMaestraCreateNestedOneWithoutTareaAsignacionInput = {
    create?: XOR<TareaMaestraCreateWithoutTareaAsignacionInput, TareaMaestraUncheckedCreateWithoutTareaAsignacionInput>
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutTareaAsignacionInput
    connect?: TareaMaestraWhereUniqueInput
  }

  export type EnumEstadoTareaFieldUpdateOperationsInput = {
    set?: $Enums.EstadoTarea
  }

  export type AlumnoUpdateOneRequiredWithoutTareaAsignacionNestedInput = {
    create?: XOR<AlumnoCreateWithoutTareaAsignacionInput, AlumnoUncheckedCreateWithoutTareaAsignacionInput>
    connectOrCreate?: AlumnoCreateOrConnectWithoutTareaAsignacionInput
    upsert?: AlumnoUpsertWithoutTareaAsignacionInput
    connect?: AlumnoWhereUniqueInput
    update?: XOR<XOR<AlumnoUpdateToOneWithWhereWithoutTareaAsignacionInput, AlumnoUpdateWithoutTareaAsignacionInput>, AlumnoUncheckedUpdateWithoutTareaAsignacionInput>
  }

  export type TareaMaestraUpdateOneRequiredWithoutTareaAsignacionNestedInput = {
    create?: XOR<TareaMaestraCreateWithoutTareaAsignacionInput, TareaMaestraUncheckedCreateWithoutTareaAsignacionInput>
    connectOrCreate?: TareaMaestraCreateOrConnectWithoutTareaAsignacionInput
    upsert?: TareaMaestraUpsertWithoutTareaAsignacionInput
    connect?: TareaMaestraWhereUniqueInput
    update?: XOR<XOR<TareaMaestraUpdateToOneWithWhereWithoutTareaAsignacionInput, TareaMaestraUpdateWithoutTareaAsignacionInput>, TareaMaestraUncheckedUpdateWithoutTareaAsignacionInput>
  }

  export type TareaMaestraCreaterecursosInput = {
    set: string[]
  }

  export type PublicacionCreateNestedOneWithoutTareaMaestraInput = {
    create?: XOR<PublicacionCreateWithoutTareaMaestraInput, PublicacionUncheckedCreateWithoutTareaMaestraInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutTareaMaestraInput
    connect?: PublicacionWhereUniqueInput
  }

  export type TareaAsignacionCreateNestedManyWithoutTareaMaestraInput = {
    create?: XOR<TareaAsignacionCreateWithoutTareaMaestraInput, TareaAsignacionUncheckedCreateWithoutTareaMaestraInput> | TareaAsignacionCreateWithoutTareaMaestraInput[] | TareaAsignacionUncheckedCreateWithoutTareaMaestraInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutTareaMaestraInput | TareaAsignacionCreateOrConnectWithoutTareaMaestraInput[]
    createMany?: TareaAsignacionCreateManyTareaMaestraInputEnvelope
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
  }

  export type CatedraCreateNestedOneWithoutTareaMaestraInput = {
    create?: XOR<CatedraCreateWithoutTareaMaestraInput, CatedraUncheckedCreateWithoutTareaMaestraInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutTareaMaestraInput
    connect?: CatedraWhereUniqueInput
  }

  export type PublicacionUncheckedCreateNestedOneWithoutTareaMaestraInput = {
    create?: XOR<PublicacionCreateWithoutTareaMaestraInput, PublicacionUncheckedCreateWithoutTareaMaestraInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutTareaMaestraInput
    connect?: PublicacionWhereUniqueInput
  }

  export type TareaAsignacionUncheckedCreateNestedManyWithoutTareaMaestraInput = {
    create?: XOR<TareaAsignacionCreateWithoutTareaMaestraInput, TareaAsignacionUncheckedCreateWithoutTareaMaestraInput> | TareaAsignacionCreateWithoutTareaMaestraInput[] | TareaAsignacionUncheckedCreateWithoutTareaMaestraInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutTareaMaestraInput | TareaAsignacionCreateOrConnectWithoutTareaMaestraInput[]
    createMany?: TareaAsignacionCreateManyTareaMaestraInputEnvelope
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
  }

  export type TareaMaestraUpdaterecursosInput = {
    set?: string[]
    push?: string | string[]
  }

  export type PublicacionUpdateOneWithoutTareaMaestraNestedInput = {
    create?: XOR<PublicacionCreateWithoutTareaMaestraInput, PublicacionUncheckedCreateWithoutTareaMaestraInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutTareaMaestraInput
    upsert?: PublicacionUpsertWithoutTareaMaestraInput
    disconnect?: PublicacionWhereInput | boolean
    delete?: PublicacionWhereInput | boolean
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutTareaMaestraInput, PublicacionUpdateWithoutTareaMaestraInput>, PublicacionUncheckedUpdateWithoutTareaMaestraInput>
  }

  export type TareaAsignacionUpdateManyWithoutTareaMaestraNestedInput = {
    create?: XOR<TareaAsignacionCreateWithoutTareaMaestraInput, TareaAsignacionUncheckedCreateWithoutTareaMaestraInput> | TareaAsignacionCreateWithoutTareaMaestraInput[] | TareaAsignacionUncheckedCreateWithoutTareaMaestraInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutTareaMaestraInput | TareaAsignacionCreateOrConnectWithoutTareaMaestraInput[]
    upsert?: TareaAsignacionUpsertWithWhereUniqueWithoutTareaMaestraInput | TareaAsignacionUpsertWithWhereUniqueWithoutTareaMaestraInput[]
    createMany?: TareaAsignacionCreateManyTareaMaestraInputEnvelope
    set?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    disconnect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    delete?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    update?: TareaAsignacionUpdateWithWhereUniqueWithoutTareaMaestraInput | TareaAsignacionUpdateWithWhereUniqueWithoutTareaMaestraInput[]
    updateMany?: TareaAsignacionUpdateManyWithWhereWithoutTareaMaestraInput | TareaAsignacionUpdateManyWithWhereWithoutTareaMaestraInput[]
    deleteMany?: TareaAsignacionScalarWhereInput | TareaAsignacionScalarWhereInput[]
  }

  export type CatedraUpdateOneRequiredWithoutTareaMaestraNestedInput = {
    create?: XOR<CatedraCreateWithoutTareaMaestraInput, CatedraUncheckedCreateWithoutTareaMaestraInput>
    connectOrCreate?: CatedraCreateOrConnectWithoutTareaMaestraInput
    upsert?: CatedraUpsertWithoutTareaMaestraInput
    connect?: CatedraWhereUniqueInput
    update?: XOR<XOR<CatedraUpdateToOneWithWhereWithoutTareaMaestraInput, CatedraUpdateWithoutTareaMaestraInput>, CatedraUncheckedUpdateWithoutTareaMaestraInput>
  }

  export type PublicacionUncheckedUpdateOneWithoutTareaMaestraNestedInput = {
    create?: XOR<PublicacionCreateWithoutTareaMaestraInput, PublicacionUncheckedCreateWithoutTareaMaestraInput>
    connectOrCreate?: PublicacionCreateOrConnectWithoutTareaMaestraInput
    upsert?: PublicacionUpsertWithoutTareaMaestraInput
    disconnect?: PublicacionWhereInput | boolean
    delete?: PublicacionWhereInput | boolean
    connect?: PublicacionWhereUniqueInput
    update?: XOR<XOR<PublicacionUpdateToOneWithWhereWithoutTareaMaestraInput, PublicacionUpdateWithoutTareaMaestraInput>, PublicacionUncheckedUpdateWithoutTareaMaestraInput>
  }

  export type TareaAsignacionUncheckedUpdateManyWithoutTareaMaestraNestedInput = {
    create?: XOR<TareaAsignacionCreateWithoutTareaMaestraInput, TareaAsignacionUncheckedCreateWithoutTareaMaestraInput> | TareaAsignacionCreateWithoutTareaMaestraInput[] | TareaAsignacionUncheckedCreateWithoutTareaMaestraInput[]
    connectOrCreate?: TareaAsignacionCreateOrConnectWithoutTareaMaestraInput | TareaAsignacionCreateOrConnectWithoutTareaMaestraInput[]
    upsert?: TareaAsignacionUpsertWithWhereUniqueWithoutTareaMaestraInput | TareaAsignacionUpsertWithWhereUniqueWithoutTareaMaestraInput[]
    createMany?: TareaAsignacionCreateManyTareaMaestraInputEnvelope
    set?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    disconnect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    delete?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    connect?: TareaAsignacionWhereUniqueInput | TareaAsignacionWhereUniqueInput[]
    update?: TareaAsignacionUpdateWithWhereUniqueWithoutTareaMaestraInput | TareaAsignacionUpdateWithWhereUniqueWithoutTareaMaestraInput[]
    updateMany?: TareaAsignacionUpdateManyWithWhereWithoutTareaMaestraInput | TareaAsignacionUpdateManyWithWhereWithoutTareaMaestraInput[]
    deleteMany?: TareaAsignacionScalarWhereInput | TareaAsignacionScalarWhereInput[]
  }

  export type UnidadPlanCreaterecursosInput = {
    set: string[]
  }

  export type PlanDeClasesCreateNestedOneWithoutUnidadPlanInput = {
    create?: XOR<PlanDeClasesCreateWithoutUnidadPlanInput, PlanDeClasesUncheckedCreateWithoutUnidadPlanInput>
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutUnidadPlanInput
    connect?: PlanDeClasesWhereUniqueInput
  }

  export type UnidadPlanUpdaterecursosInput = {
    set?: string[]
    push?: string | string[]
  }

  export type PlanDeClasesUpdateOneRequiredWithoutUnidadPlanNestedInput = {
    create?: XOR<PlanDeClasesCreateWithoutUnidadPlanInput, PlanDeClasesUncheckedCreateWithoutUnidadPlanInput>
    connectOrCreate?: PlanDeClasesCreateOrConnectWithoutUnidadPlanInput
    upsert?: PlanDeClasesUpsertWithoutUnidadPlanInput
    connect?: PlanDeClasesWhereUniqueInput
    update?: XOR<XOR<PlanDeClasesUpdateToOneWithWhereWithoutUnidadPlanInput, PlanDeClasesUpdateWithoutUnidadPlanInput>, PlanDeClasesUncheckedUpdateWithoutUnidadPlanInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumModalidadPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.ModalidadPago | EnumModalidadPagoFieldRefInput<$PrismaModel>
    in?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumModalidadPagoFilter<$PrismaModel> | $Enums.ModalidadPago
  }

  export type NestedEnumModalidadPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModalidadPago | EnumModalidadPagoFieldRefInput<$PrismaModel>
    in?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModalidadPago[] | ListEnumModalidadPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumModalidadPagoWithAggregatesFilter<$PrismaModel> | $Enums.ModalidadPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModalidadPagoFilter<$PrismaModel>
    _max?: NestedEnumModalidadPagoFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumEstadoEvaluacionAsignacionFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEvaluacionAsignacion | EnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEvaluacionAsignacionFilter<$PrismaModel> | $Enums.EstadoEvaluacionAsignacion
  }

  export type NestedEnumEstadoEvaluacionAsignacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoEvaluacionAsignacion | EnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoEvaluacionAsignacion[] | ListEnumEstadoEvaluacionAsignacionFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoEvaluacionAsignacionWithAggregatesFilter<$PrismaModel> | $Enums.EstadoEvaluacionAsignacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoEvaluacionAsignacionFilter<$PrismaModel>
    _max?: NestedEnumEstadoEvaluacionAsignacionFilter<$PrismaModel>
  }

  export type NestedEnumTipoPagoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPago | EnumTipoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPagoFilter<$PrismaModel> | $Enums.TipoPago
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumTipoPagoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPago | EnumTipoPagoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPago[] | ListEnumTipoPagoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPagoWithAggregatesFilter<$PrismaModel> | $Enums.TipoPago
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPagoFilter<$PrismaModel>
    _max?: NestedEnumTipoPagoFilter<$PrismaModel>
  }

  export type NestedEnumTipoOrganizacionPlanFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrganizacionPlan | EnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrganizacionPlanFilter<$PrismaModel> | $Enums.TipoOrganizacionPlan
  }

  export type NestedEnumTipoOrganizacionPlanWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrganizacionPlan | EnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrganizacionPlan[] | ListEnumTipoOrganizacionPlanFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrganizacionPlanWithAggregatesFilter<$PrismaModel> | $Enums.TipoOrganizacionPlan
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoOrganizacionPlanFilter<$PrismaModel>
    _max?: NestedEnumTipoOrganizacionPlanFilter<$PrismaModel>
  }

  export type NestedEnumTipoPublicacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPublicacion | EnumTipoPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPublicacionFilter<$PrismaModel> | $Enums.TipoPublicacion
  }

  export type NestedEnumTipoPublicacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPublicacion | EnumTipoPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPublicacion[] | ListEnumTipoPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPublicacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoPublicacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPublicacionFilter<$PrismaModel>
    _max?: NestedEnumTipoPublicacionFilter<$PrismaModel>
  }

  export type NestedEnumTipoInteraccionPublicacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoInteraccionPublicacion | EnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoInteraccionPublicacionFilter<$PrismaModel> | $Enums.TipoInteraccionPublicacion
  }

  export type NestedEnumTipoInteraccionPublicacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoInteraccionPublicacion | EnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoInteraccionPublicacion[] | ListEnumTipoInteraccionPublicacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoInteraccionPublicacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoInteraccionPublicacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoInteraccionPublicacionFilter<$PrismaModel>
    _max?: NestedEnumTipoInteraccionPublicacionFilter<$PrismaModel>
  }

  export type NestedEnumTipoPuntuacionFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPuntuacion | EnumTipoPuntuacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPuntuacionFilter<$PrismaModel> | $Enums.TipoPuntuacion
  }

  export type NestedEnumTipoPuntuacionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPuntuacion | EnumTipoPuntuacionFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPuntuacion[] | ListEnumTipoPuntuacionFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPuntuacionWithAggregatesFilter<$PrismaModel> | $Enums.TipoPuntuacion
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPuntuacionFilter<$PrismaModel>
    _max?: NestedEnumTipoPuntuacionFilter<$PrismaModel>
  }

  export type NestedEnumEstadoTareaFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaFilter<$PrismaModel> | $Enums.EstadoTarea
  }

  export type NestedEnumEstadoTareaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EstadoTarea | EnumEstadoTareaFieldRefInput<$PrismaModel>
    in?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    notIn?: $Enums.EstadoTarea[] | ListEnumEstadoTareaFieldRefInput<$PrismaModel>
    not?: NestedEnumEstadoTareaWithAggregatesFilter<$PrismaModel> | $Enums.EstadoTarea
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstadoTareaFilter<$PrismaModel>
    _max?: NestedEnumEstadoTareaFilter<$PrismaModel>
  }

  export type CatedraAlumnoCreateWithoutComposerInput = {
    assignedAt?: Date | string
    assignedBy: string
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutCatedraAlumnoInput
    Catedra: CatedraCreateNestedOneWithoutCatedraAlumnoInput
    Pago?: PagoCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoUncheckedCreateWithoutComposerInput = {
    catedraId: number
    alumnoId?: number | null
    assignedAt?: Date | string
    assignedBy: string
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Pago?: PagoUncheckedCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoCreateOrConnectWithoutComposerInput = {
    where: CatedraAlumnoWhereUniqueInput
    create: XOR<CatedraAlumnoCreateWithoutComposerInput, CatedraAlumnoUncheckedCreateWithoutComposerInput>
  }

  export type CatedraAlumnoCreateManyComposerInputEnvelope = {
    data: CatedraAlumnoCreateManyComposerInput | CatedraAlumnoCreateManyComposerInput[]
    skipDuplicates?: boolean
  }

  export type CommentCreateWithoutComposerInput = {
    text: string
    created_at?: Date | string
    ip_address?: string | null
    name: string
  }

  export type CommentUncheckedCreateWithoutComposerInput = {
    id?: number
    text: string
    created_at?: Date | string
    ip_address?: string | null
    name: string
  }

  export type CommentCreateOrConnectWithoutComposerInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutComposerInput, CommentUncheckedCreateWithoutComposerInput>
  }

  export type CommentCreateManyComposerInputEnvelope = {
    data: CommentCreateManyComposerInput | CommentCreateManyComposerInput[]
    skipDuplicates?: boolean
  }

  export type EditSuggestionCreateWithoutComposerInput = {
    first_name?: string | null
    last_name?: string | null
    birth_year?: number | null
    birth_month?: number | null
    birth_day?: number | null
    death_year?: number | null
    death_month?: number | null
    death_day?: number | null
    bio?: string | null
    notable_works?: string | null
    period?: string | null
    references?: string | null
    youtube_link?: string | null
    mainRole?: EditSuggestionCreatemainRoleInput | $Enums.RoleType[]
    reason: string
    status?: string
    suggester_email: string
    suggester_ip?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_student_contribution?: boolean | null
    student_first_name?: string | null
    student_last_name?: string | null
    points?: number
  }

  export type EditSuggestionUncheckedCreateWithoutComposerInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    birth_year?: number | null
    birth_month?: number | null
    birth_day?: number | null
    death_year?: number | null
    death_month?: number | null
    death_day?: number | null
    bio?: string | null
    notable_works?: string | null
    period?: string | null
    references?: string | null
    youtube_link?: string | null
    mainRole?: EditSuggestionCreatemainRoleInput | $Enums.RoleType[]
    reason: string
    status?: string
    suggester_email: string
    suggester_ip?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_student_contribution?: boolean | null
    student_first_name?: string | null
    student_last_name?: string | null
    points?: number
  }

  export type EditSuggestionCreateOrConnectWithoutComposerInput = {
    where: EditSuggestionWhereUniqueInput
    create: XOR<EditSuggestionCreateWithoutComposerInput, EditSuggestionUncheckedCreateWithoutComposerInput>
  }

  export type EditSuggestionCreateManyComposerInputEnvelope = {
    data: EditSuggestionCreateManyComposerInput | EditSuggestionCreateManyComposerInput[]
    skipDuplicates?: boolean
  }

  export type RatingCreateWithoutComposerInput = {
    rating_value: number
    ip_address?: string | null
    created_at?: Date | string
  }

  export type RatingUncheckedCreateWithoutComposerInput = {
    id?: number
    rating_value: number
    ip_address?: string | null
    created_at?: Date | string
  }

  export type RatingCreateOrConnectWithoutComposerInput = {
    where: RatingWhereUniqueInput
    create: XOR<RatingCreateWithoutComposerInput, RatingUncheckedCreateWithoutComposerInput>
  }

  export type RatingCreateManyComposerInputEnvelope = {
    data: RatingCreateManyComposerInput | RatingCreateManyComposerInput[]
    skipDuplicates?: boolean
  }

  export type CatedraAlumnoUpsertWithWhereUniqueWithoutComposerInput = {
    where: CatedraAlumnoWhereUniqueInput
    update: XOR<CatedraAlumnoUpdateWithoutComposerInput, CatedraAlumnoUncheckedUpdateWithoutComposerInput>
    create: XOR<CatedraAlumnoCreateWithoutComposerInput, CatedraAlumnoUncheckedCreateWithoutComposerInput>
  }

  export type CatedraAlumnoUpdateWithWhereUniqueWithoutComposerInput = {
    where: CatedraAlumnoWhereUniqueInput
    data: XOR<CatedraAlumnoUpdateWithoutComposerInput, CatedraAlumnoUncheckedUpdateWithoutComposerInput>
  }

  export type CatedraAlumnoUpdateManyWithWhereWithoutComposerInput = {
    where: CatedraAlumnoScalarWhereInput
    data: XOR<CatedraAlumnoUpdateManyMutationInput, CatedraAlumnoUncheckedUpdateManyWithoutComposerInput>
  }

  export type CatedraAlumnoScalarWhereInput = {
    AND?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
    OR?: CatedraAlumnoScalarWhereInput[]
    NOT?: CatedraAlumnoScalarWhereInput | CatedraAlumnoScalarWhereInput[]
    catedraId?: IntFilter<"CatedraAlumno"> | number
    alumnoId?: IntNullableFilter<"CatedraAlumno"> | number | null
    assignedAt?: DateTimeFilter<"CatedraAlumno"> | Date | string
    assignedBy?: StringFilter<"CatedraAlumno"> | string
    composerId?: IntNullableFilter<"CatedraAlumno"> | number | null
    id?: IntFilter<"CatedraAlumno"> | number
    dia_cobro?: IntNullableFilter<"CatedraAlumno"> | number | null
    fecha_inscripcion?: DateTimeFilter<"CatedraAlumno"> | Date | string
  }

  export type CommentUpsertWithWhereUniqueWithoutComposerInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutComposerInput, CommentUncheckedUpdateWithoutComposerInput>
    create: XOR<CommentCreateWithoutComposerInput, CommentUncheckedCreateWithoutComposerInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutComposerInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutComposerInput, CommentUncheckedUpdateWithoutComposerInput>
  }

  export type CommentUpdateManyWithWhereWithoutComposerInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutComposerInput>
  }

  export type CommentScalarWhereInput = {
    AND?: CommentScalarWhereInput | CommentScalarWhereInput[]
    OR?: CommentScalarWhereInput[]
    NOT?: CommentScalarWhereInput | CommentScalarWhereInput[]
    id?: IntFilter<"Comment"> | number
    text?: StringFilter<"Comment"> | string
    composerId?: IntFilter<"Comment"> | number
    created_at?: DateTimeFilter<"Comment"> | Date | string
    ip_address?: StringNullableFilter<"Comment"> | string | null
    name?: StringFilter<"Comment"> | string
  }

  export type EditSuggestionUpsertWithWhereUniqueWithoutComposerInput = {
    where: EditSuggestionWhereUniqueInput
    update: XOR<EditSuggestionUpdateWithoutComposerInput, EditSuggestionUncheckedUpdateWithoutComposerInput>
    create: XOR<EditSuggestionCreateWithoutComposerInput, EditSuggestionUncheckedCreateWithoutComposerInput>
  }

  export type EditSuggestionUpdateWithWhereUniqueWithoutComposerInput = {
    where: EditSuggestionWhereUniqueInput
    data: XOR<EditSuggestionUpdateWithoutComposerInput, EditSuggestionUncheckedUpdateWithoutComposerInput>
  }

  export type EditSuggestionUpdateManyWithWhereWithoutComposerInput = {
    where: EditSuggestionScalarWhereInput
    data: XOR<EditSuggestionUpdateManyMutationInput, EditSuggestionUncheckedUpdateManyWithoutComposerInput>
  }

  export type EditSuggestionScalarWhereInput = {
    AND?: EditSuggestionScalarWhereInput | EditSuggestionScalarWhereInput[]
    OR?: EditSuggestionScalarWhereInput[]
    NOT?: EditSuggestionScalarWhereInput | EditSuggestionScalarWhereInput[]
    id?: IntFilter<"EditSuggestion"> | number
    first_name?: StringNullableFilter<"EditSuggestion"> | string | null
    last_name?: StringNullableFilter<"EditSuggestion"> | string | null
    birth_year?: IntNullableFilter<"EditSuggestion"> | number | null
    birth_month?: IntNullableFilter<"EditSuggestion"> | number | null
    birth_day?: IntNullableFilter<"EditSuggestion"> | number | null
    death_year?: IntNullableFilter<"EditSuggestion"> | number | null
    death_month?: IntNullableFilter<"EditSuggestion"> | number | null
    death_day?: IntNullableFilter<"EditSuggestion"> | number | null
    bio?: StringNullableFilter<"EditSuggestion"> | string | null
    notable_works?: StringNullableFilter<"EditSuggestion"> | string | null
    period?: StringNullableFilter<"EditSuggestion"> | string | null
    references?: StringNullableFilter<"EditSuggestion"> | string | null
    youtube_link?: StringNullableFilter<"EditSuggestion"> | string | null
    mainRole?: EnumRoleTypeNullableListFilter<"EditSuggestion">
    reason?: StringFilter<"EditSuggestion"> | string
    status?: StringFilter<"EditSuggestion"> | string
    suggester_email?: StringFilter<"EditSuggestion"> | string
    suggester_ip?: StringNullableFilter<"EditSuggestion"> | string | null
    created_at?: DateTimeFilter<"EditSuggestion"> | Date | string
    updated_at?: DateTimeFilter<"EditSuggestion"> | Date | string
    composerId?: IntFilter<"EditSuggestion"> | number
    is_student_contribution?: BoolNullableFilter<"EditSuggestion"> | boolean | null
    student_first_name?: StringNullableFilter<"EditSuggestion"> | string | null
    student_last_name?: StringNullableFilter<"EditSuggestion"> | string | null
    points?: IntFilter<"EditSuggestion"> | number
  }

  export type RatingUpsertWithWhereUniqueWithoutComposerInput = {
    where: RatingWhereUniqueInput
    update: XOR<RatingUpdateWithoutComposerInput, RatingUncheckedUpdateWithoutComposerInput>
    create: XOR<RatingCreateWithoutComposerInput, RatingUncheckedCreateWithoutComposerInput>
  }

  export type RatingUpdateWithWhereUniqueWithoutComposerInput = {
    where: RatingWhereUniqueInput
    data: XOR<RatingUpdateWithoutComposerInput, RatingUncheckedUpdateWithoutComposerInput>
  }

  export type RatingUpdateManyWithWhereWithoutComposerInput = {
    where: RatingScalarWhereInput
    data: XOR<RatingUpdateManyMutationInput, RatingUncheckedUpdateManyWithoutComposerInput>
  }

  export type RatingScalarWhereInput = {
    AND?: RatingScalarWhereInput | RatingScalarWhereInput[]
    OR?: RatingScalarWhereInput[]
    NOT?: RatingScalarWhereInput | RatingScalarWhereInput[]
    id?: IntFilter<"Rating"> | number
    rating_value?: IntFilter<"Rating"> | number
    ip_address?: StringNullableFilter<"Rating"> | string | null
    created_at?: DateTimeFilter<"Rating"> | Date | string
    composerId?: IntFilter<"Rating"> | number
  }

  export type ComposerCreateWithoutCommentsInput = {
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionCreateNestedManyWithoutComposerInput
    ratings?: RatingCreateNestedManyWithoutComposerInput
  }

  export type ComposerUncheckedCreateWithoutCommentsInput = {
    id?: number
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionUncheckedCreateNestedManyWithoutComposerInput
    ratings?: RatingUncheckedCreateNestedManyWithoutComposerInput
  }

  export type ComposerCreateOrConnectWithoutCommentsInput = {
    where: ComposerWhereUniqueInput
    create: XOR<ComposerCreateWithoutCommentsInput, ComposerUncheckedCreateWithoutCommentsInput>
  }

  export type ComposerUpsertWithoutCommentsInput = {
    update: XOR<ComposerUpdateWithoutCommentsInput, ComposerUncheckedUpdateWithoutCommentsInput>
    create: XOR<ComposerCreateWithoutCommentsInput, ComposerUncheckedCreateWithoutCommentsInput>
    where?: ComposerWhereInput
  }

  export type ComposerUpdateToOneWithWhereWithoutCommentsInput = {
    where?: ComposerWhereInput
    data: XOR<ComposerUpdateWithoutCommentsInput, ComposerUncheckedUpdateWithoutCommentsInput>
  }

  export type ComposerUpdateWithoutCommentsInput = {
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUpdateManyWithoutComposerNestedInput
    ratings?: RatingUpdateManyWithoutComposerNestedInput
  }

  export type ComposerUncheckedUpdateWithoutCommentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUncheckedUpdateManyWithoutComposerNestedInput
    ratings?: RatingUncheckedUpdateManyWithoutComposerNestedInput
  }

  export type ComposerCreateWithoutRatingsInput = {
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutComposerInput
    comments?: CommentCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionCreateNestedManyWithoutComposerInput
  }

  export type ComposerUncheckedCreateWithoutRatingsInput = {
    id?: number
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutComposerInput
    comments?: CommentUncheckedCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionUncheckedCreateNestedManyWithoutComposerInput
  }

  export type ComposerCreateOrConnectWithoutRatingsInput = {
    where: ComposerWhereUniqueInput
    create: XOR<ComposerCreateWithoutRatingsInput, ComposerUncheckedCreateWithoutRatingsInput>
  }

  export type ComposerUpsertWithoutRatingsInput = {
    update: XOR<ComposerUpdateWithoutRatingsInput, ComposerUncheckedUpdateWithoutRatingsInput>
    create: XOR<ComposerCreateWithoutRatingsInput, ComposerUncheckedCreateWithoutRatingsInput>
    where?: ComposerWhereInput
  }

  export type ComposerUpdateToOneWithWhereWithoutRatingsInput = {
    where?: ComposerWhereInput
    data: XOR<ComposerUpdateWithoutRatingsInput, ComposerUncheckedUpdateWithoutRatingsInput>
  }

  export type ComposerUpdateWithoutRatingsInput = {
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutComposerNestedInput
    comments?: CommentUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUpdateManyWithoutComposerNestedInput
  }

  export type ComposerUncheckedUpdateWithoutRatingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutComposerNestedInput
    comments?: CommentUncheckedUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUncheckedUpdateManyWithoutComposerNestedInput
  }

  export type AsistenciaCreateWithoutAlumnoInput = {
    presente: boolean
    created_at?: Date | string
    DiaClase: DiaClaseCreateNestedOneWithoutAsistenciaInput
  }

  export type AsistenciaUncheckedCreateWithoutAlumnoInput = {
    id?: number
    presente: boolean
    created_at?: Date | string
    diaClaseId: number
  }

  export type AsistenciaCreateOrConnectWithoutAlumnoInput = {
    where: AsistenciaWhereUniqueInput
    create: XOR<AsistenciaCreateWithoutAlumnoInput, AsistenciaUncheckedCreateWithoutAlumnoInput>
  }

  export type AsistenciaCreateManyAlumnoInputEnvelope = {
    data: AsistenciaCreateManyAlumnoInput | AsistenciaCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionEvaluacionCreateWithoutAlumnoInput = {
    puntos: number
    created_at?: Date | string
    EvaluacionAsignacion: EvaluacionAsignacionCreateNestedOneWithoutCalificacionEvaluacionInput
  }

  export type CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput = {
    id?: number
    puntos: number
    created_at?: Date | string
    evaluacionAsignacionId: number
  }

  export type CalificacionEvaluacionCreateOrConnectWithoutAlumnoInput = {
    where: CalificacionEvaluacionWhereUniqueInput
    create: XOR<CalificacionEvaluacionCreateWithoutAlumnoInput, CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput>
  }

  export type CalificacionEvaluacionCreateManyAlumnoInputEnvelope = {
    data: CalificacionEvaluacionCreateManyAlumnoInput | CalificacionEvaluacionCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type CatedraAlumnoCreateWithoutAlumnoInput = {
    assignedAt?: Date | string
    assignedBy: string
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Catedra: CatedraCreateNestedOneWithoutCatedraAlumnoInput
    Composer?: ComposerCreateNestedOneWithoutCatedraAlumnoInput
    Pago?: PagoCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoUncheckedCreateWithoutAlumnoInput = {
    catedraId: number
    assignedAt?: Date | string
    assignedBy: string
    composerId?: number | null
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Pago?: PagoUncheckedCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoCreateOrConnectWithoutAlumnoInput = {
    where: CatedraAlumnoWhereUniqueInput
    create: XOR<CatedraAlumnoCreateWithoutAlumnoInput, CatedraAlumnoUncheckedCreateWithoutAlumnoInput>
  }

  export type CatedraAlumnoCreateManyAlumnoInputEnvelope = {
    data: CatedraAlumnoCreateManyAlumnoInput | CatedraAlumnoCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type ComentarioPublicacionCreateWithoutAlumnoInput = {
    texto: string
    created_at?: Date | string
    updated_at?: Date | string
    Docente?: DocenteCreateNestedOneWithoutComentarioPublicacionInput
    Publicacion: PublicacionCreateNestedOneWithoutComentarioPublicacionInput
  }

  export type ComentarioPublicacionUncheckedCreateWithoutAlumnoInput = {
    id?: number
    texto: string
    publicacionId: number
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ComentarioPublicacionCreateOrConnectWithoutAlumnoInput = {
    where: ComentarioPublicacionWhereUniqueInput
    create: XOR<ComentarioPublicacionCreateWithoutAlumnoInput, ComentarioPublicacionUncheckedCreateWithoutAlumnoInput>
  }

  export type ComentarioPublicacionCreateManyAlumnoInputEnvelope = {
    data: ComentarioPublicacionCreateManyAlumnoInput | ComentarioPublicacionCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type EvaluacionAsignacionCreateWithoutAlumnoInput = {
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
    Evaluacion: EvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    evaluacionId: number
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionCreateOrConnectWithoutAlumnoInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    create: XOR<EvaluacionAsignacionCreateWithoutAlumnoInput, EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput>
  }

  export type EvaluacionAsignacionCreateManyAlumnoInputEnvelope = {
    data: EvaluacionAsignacionCreateManyAlumnoInput | EvaluacionAsignacionCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionCreateWithoutAlumnoInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutAlumnoInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutAlumnoInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutAlumnoInput, PublicacionUncheckedCreateWithoutAlumnoInput>
  }

  export type PublicacionCreateManyAlumnoInputEnvelope = {
    data: PublicacionCreateManyAlumnoInput | PublicacionCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionInteraccionCreateWithoutAlumnoInput = {
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
    Docente?: DocenteCreateNestedOneWithoutPublicacionInteraccionInput
    Publicacion: PublicacionCreateNestedOneWithoutPublicacionInteraccionInput
  }

  export type PublicacionInteraccionUncheckedCreateWithoutAlumnoInput = {
    id?: number
    publicacionId: number
    docenteId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type PublicacionInteraccionCreateOrConnectWithoutAlumnoInput = {
    where: PublicacionInteraccionWhereUniqueInput
    create: XOR<PublicacionInteraccionCreateWithoutAlumnoInput, PublicacionInteraccionUncheckedCreateWithoutAlumnoInput>
  }

  export type PublicacionInteraccionCreateManyAlumnoInputEnvelope = {
    data: PublicacionInteraccionCreateManyAlumnoInput | PublicacionInteraccionCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type PuntuacionCreateWithoutAlumnoInput = {
    puntos: number
    motivo: string
    created_at?: Date | string
    tipo: $Enums.TipoPuntuacion
    Catedra?: CatedraCreateNestedOneWithoutPuntuacionInput
  }

  export type PuntuacionUncheckedCreateWithoutAlumnoInput = {
    id?: number
    puntos: number
    motivo: string
    created_at?: Date | string
    catedraId?: number | null
    tipo: $Enums.TipoPuntuacion
  }

  export type PuntuacionCreateOrConnectWithoutAlumnoInput = {
    where: PuntuacionWhereUniqueInput
    create: XOR<PuntuacionCreateWithoutAlumnoInput, PuntuacionUncheckedCreateWithoutAlumnoInput>
  }

  export type PuntuacionCreateManyAlumnoInputEnvelope = {
    data: PuntuacionCreateManyAlumnoInput | PuntuacionCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type RespuestaAlumnoCreateWithoutAlumnoInput = {
    created_at?: Date | string
    Opcion: OpcionCreateNestedOneWithoutRespuestaAlumnoInput
    Pregunta: PreguntaCreateNestedOneWithoutRespuestaAlumnoInput
  }

  export type RespuestaAlumnoUncheckedCreateWithoutAlumnoInput = {
    id?: number
    created_at?: Date | string
    preguntaId: number
    opcionElegidaId: number
  }

  export type RespuestaAlumnoCreateOrConnectWithoutAlumnoInput = {
    where: RespuestaAlumnoWhereUniqueInput
    create: XOR<RespuestaAlumnoCreateWithoutAlumnoInput, RespuestaAlumnoUncheckedCreateWithoutAlumnoInput>
  }

  export type RespuestaAlumnoCreateManyAlumnoInputEnvelope = {
    data: RespuestaAlumnoCreateManyAlumnoInput | RespuestaAlumnoCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type TareaAsignacionCreateWithoutAlumnoInput = {
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    TareaMaestra: TareaMaestraCreateNestedOneWithoutTareaAsignacionInput
  }

  export type TareaAsignacionUncheckedCreateWithoutAlumnoInput = {
    id?: number
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId: number
  }

  export type TareaAsignacionCreateOrConnectWithoutAlumnoInput = {
    where: TareaAsignacionWhereUniqueInput
    create: XOR<TareaAsignacionCreateWithoutAlumnoInput, TareaAsignacionUncheckedCreateWithoutAlumnoInput>
  }

  export type TareaAsignacionCreateManyAlumnoInputEnvelope = {
    data: TareaAsignacionCreateManyAlumnoInput | TareaAsignacionCreateManyAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type AsistenciaUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: AsistenciaWhereUniqueInput
    update: XOR<AsistenciaUpdateWithoutAlumnoInput, AsistenciaUncheckedUpdateWithoutAlumnoInput>
    create: XOR<AsistenciaCreateWithoutAlumnoInput, AsistenciaUncheckedCreateWithoutAlumnoInput>
  }

  export type AsistenciaUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: AsistenciaWhereUniqueInput
    data: XOR<AsistenciaUpdateWithoutAlumnoInput, AsistenciaUncheckedUpdateWithoutAlumnoInput>
  }

  export type AsistenciaUpdateManyWithWhereWithoutAlumnoInput = {
    where: AsistenciaScalarWhereInput
    data: XOR<AsistenciaUpdateManyMutationInput, AsistenciaUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type AsistenciaScalarWhereInput = {
    AND?: AsistenciaScalarWhereInput | AsistenciaScalarWhereInput[]
    OR?: AsistenciaScalarWhereInput[]
    NOT?: AsistenciaScalarWhereInput | AsistenciaScalarWhereInput[]
    id?: IntFilter<"Asistencia"> | number
    presente?: BoolFilter<"Asistencia"> | boolean
    created_at?: DateTimeFilter<"Asistencia"> | Date | string
    alumnoId?: IntFilter<"Asistencia"> | number
    diaClaseId?: IntFilter<"Asistencia"> | number
  }

  export type CalificacionEvaluacionUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: CalificacionEvaluacionWhereUniqueInput
    update: XOR<CalificacionEvaluacionUpdateWithoutAlumnoInput, CalificacionEvaluacionUncheckedUpdateWithoutAlumnoInput>
    create: XOR<CalificacionEvaluacionCreateWithoutAlumnoInput, CalificacionEvaluacionUncheckedCreateWithoutAlumnoInput>
  }

  export type CalificacionEvaluacionUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: CalificacionEvaluacionWhereUniqueInput
    data: XOR<CalificacionEvaluacionUpdateWithoutAlumnoInput, CalificacionEvaluacionUncheckedUpdateWithoutAlumnoInput>
  }

  export type CalificacionEvaluacionUpdateManyWithWhereWithoutAlumnoInput = {
    where: CalificacionEvaluacionScalarWhereInput
    data: XOR<CalificacionEvaluacionUpdateManyMutationInput, CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type CalificacionEvaluacionScalarWhereInput = {
    AND?: CalificacionEvaluacionScalarWhereInput | CalificacionEvaluacionScalarWhereInput[]
    OR?: CalificacionEvaluacionScalarWhereInput[]
    NOT?: CalificacionEvaluacionScalarWhereInput | CalificacionEvaluacionScalarWhereInput[]
    id?: IntFilter<"CalificacionEvaluacion"> | number
    puntos?: IntFilter<"CalificacionEvaluacion"> | number
    created_at?: DateTimeFilter<"CalificacionEvaluacion"> | Date | string
    alumnoId?: IntFilter<"CalificacionEvaluacion"> | number
    evaluacionAsignacionId?: IntFilter<"CalificacionEvaluacion"> | number
  }

  export type CatedraAlumnoUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: CatedraAlumnoWhereUniqueInput
    update: XOR<CatedraAlumnoUpdateWithoutAlumnoInput, CatedraAlumnoUncheckedUpdateWithoutAlumnoInput>
    create: XOR<CatedraAlumnoCreateWithoutAlumnoInput, CatedraAlumnoUncheckedCreateWithoutAlumnoInput>
  }

  export type CatedraAlumnoUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: CatedraAlumnoWhereUniqueInput
    data: XOR<CatedraAlumnoUpdateWithoutAlumnoInput, CatedraAlumnoUncheckedUpdateWithoutAlumnoInput>
  }

  export type CatedraAlumnoUpdateManyWithWhereWithoutAlumnoInput = {
    where: CatedraAlumnoScalarWhereInput
    data: XOR<CatedraAlumnoUpdateManyMutationInput, CatedraAlumnoUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type ComentarioPublicacionUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: ComentarioPublicacionWhereUniqueInput
    update: XOR<ComentarioPublicacionUpdateWithoutAlumnoInput, ComentarioPublicacionUncheckedUpdateWithoutAlumnoInput>
    create: XOR<ComentarioPublicacionCreateWithoutAlumnoInput, ComentarioPublicacionUncheckedCreateWithoutAlumnoInput>
  }

  export type ComentarioPublicacionUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: ComentarioPublicacionWhereUniqueInput
    data: XOR<ComentarioPublicacionUpdateWithoutAlumnoInput, ComentarioPublicacionUncheckedUpdateWithoutAlumnoInput>
  }

  export type ComentarioPublicacionUpdateManyWithWhereWithoutAlumnoInput = {
    where: ComentarioPublicacionScalarWhereInput
    data: XOR<ComentarioPublicacionUpdateManyMutationInput, ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type ComentarioPublicacionScalarWhereInput = {
    AND?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
    OR?: ComentarioPublicacionScalarWhereInput[]
    NOT?: ComentarioPublicacionScalarWhereInput | ComentarioPublicacionScalarWhereInput[]
    id?: IntFilter<"ComentarioPublicacion"> | number
    texto?: StringFilter<"ComentarioPublicacion"> | string
    publicacionId?: IntFilter<"ComentarioPublicacion"> | number
    autorAlumnoId?: IntNullableFilter<"ComentarioPublicacion"> | number | null
    autorDocenteId?: IntNullableFilter<"ComentarioPublicacion"> | number | null
    created_at?: DateTimeFilter<"ComentarioPublicacion"> | Date | string
    updated_at?: DateTimeFilter<"ComentarioPublicacion"> | Date | string
  }

  export type EvaluacionAsignacionUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    update: XOR<EvaluacionAsignacionUpdateWithoutAlumnoInput, EvaluacionAsignacionUncheckedUpdateWithoutAlumnoInput>
    create: XOR<EvaluacionAsignacionCreateWithoutAlumnoInput, EvaluacionAsignacionUncheckedCreateWithoutAlumnoInput>
  }

  export type EvaluacionAsignacionUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    data: XOR<EvaluacionAsignacionUpdateWithoutAlumnoInput, EvaluacionAsignacionUncheckedUpdateWithoutAlumnoInput>
  }

  export type EvaluacionAsignacionUpdateManyWithWhereWithoutAlumnoInput = {
    where: EvaluacionAsignacionScalarWhereInput
    data: XOR<EvaluacionAsignacionUpdateManyMutationInput, EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type EvaluacionAsignacionScalarWhereInput = {
    AND?: EvaluacionAsignacionScalarWhereInput | EvaluacionAsignacionScalarWhereInput[]
    OR?: EvaluacionAsignacionScalarWhereInput[]
    NOT?: EvaluacionAsignacionScalarWhereInput | EvaluacionAsignacionScalarWhereInput[]
    id?: IntFilter<"EvaluacionAsignacion"> | number
    estado?: EnumEstadoEvaluacionAsignacionFilter<"EvaluacionAsignacion"> | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: DateTimeNullableFilter<"EvaluacionAsignacion"> | Date | string | null
    created_at?: DateTimeFilter<"EvaluacionAsignacion"> | Date | string
    updated_at?: DateTimeFilter<"EvaluacionAsignacion"> | Date | string
    alumnoId?: IntFilter<"EvaluacionAsignacion"> | number
    evaluacionId?: IntFilter<"EvaluacionAsignacion"> | number
    publicacionId?: IntNullableFilter<"EvaluacionAsignacion"> | number | null
  }

  export type PublicacionUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: PublicacionWhereUniqueInput
    update: XOR<PublicacionUpdateWithoutAlumnoInput, PublicacionUncheckedUpdateWithoutAlumnoInput>
    create: XOR<PublicacionCreateWithoutAlumnoInput, PublicacionUncheckedCreateWithoutAlumnoInput>
  }

  export type PublicacionUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: PublicacionWhereUniqueInput
    data: XOR<PublicacionUpdateWithoutAlumnoInput, PublicacionUncheckedUpdateWithoutAlumnoInput>
  }

  export type PublicacionUpdateManyWithWhereWithoutAlumnoInput = {
    where: PublicacionScalarWhereInput
    data: XOR<PublicacionUpdateManyMutationInput, PublicacionUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type PublicacionScalarWhereInput = {
    AND?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
    OR?: PublicacionScalarWhereInput[]
    NOT?: PublicacionScalarWhereInput | PublicacionScalarWhereInput[]
    id?: IntFilter<"Publicacion"> | number
    titulo?: StringFilter<"Publicacion"> | string
    contenido?: StringFilter<"Publicacion"> | string
    tipo?: EnumTipoPublicacionFilter<"Publicacion"> | $Enums.TipoPublicacion
    catedraId?: IntFilter<"Publicacion"> | number
    autorAlumnoId?: IntNullableFilter<"Publicacion"> | number | null
    autorDocenteId?: IntNullableFilter<"Publicacion"> | number | null
    created_at?: DateTimeFilter<"Publicacion"> | Date | string
    updated_at?: DateTimeFilter<"Publicacion"> | Date | string
    tareaMaestraId?: IntNullableFilter<"Publicacion"> | number | null
    visibleToStudents?: BoolFilter<"Publicacion"> | boolean
    evaluacionAsignacionId?: IntNullableFilter<"Publicacion"> | number | null
    evaluacionMaestraId?: IntNullableFilter<"Publicacion"> | number | null
  }

  export type PublicacionInteraccionUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: PublicacionInteraccionWhereUniqueInput
    update: XOR<PublicacionInteraccionUpdateWithoutAlumnoInput, PublicacionInteraccionUncheckedUpdateWithoutAlumnoInput>
    create: XOR<PublicacionInteraccionCreateWithoutAlumnoInput, PublicacionInteraccionUncheckedCreateWithoutAlumnoInput>
  }

  export type PublicacionInteraccionUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: PublicacionInteraccionWhereUniqueInput
    data: XOR<PublicacionInteraccionUpdateWithoutAlumnoInput, PublicacionInteraccionUncheckedUpdateWithoutAlumnoInput>
  }

  export type PublicacionInteraccionUpdateManyWithWhereWithoutAlumnoInput = {
    where: PublicacionInteraccionScalarWhereInput
    data: XOR<PublicacionInteraccionUpdateManyMutationInput, PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type PublicacionInteraccionScalarWhereInput = {
    AND?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
    OR?: PublicacionInteraccionScalarWhereInput[]
    NOT?: PublicacionInteraccionScalarWhereInput | PublicacionInteraccionScalarWhereInput[]
    id?: IntFilter<"PublicacionInteraccion"> | number
    publicacionId?: IntFilter<"PublicacionInteraccion"> | number
    alumnoId?: IntNullableFilter<"PublicacionInteraccion"> | number | null
    docenteId?: IntNullableFilter<"PublicacionInteraccion"> | number | null
    tipo?: EnumTipoInteraccionPublicacionFilter<"PublicacionInteraccion"> | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFilter<"PublicacionInteraccion"> | Date | string
  }

  export type PuntuacionUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: PuntuacionWhereUniqueInput
    update: XOR<PuntuacionUpdateWithoutAlumnoInput, PuntuacionUncheckedUpdateWithoutAlumnoInput>
    create: XOR<PuntuacionCreateWithoutAlumnoInput, PuntuacionUncheckedCreateWithoutAlumnoInput>
  }

  export type PuntuacionUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: PuntuacionWhereUniqueInput
    data: XOR<PuntuacionUpdateWithoutAlumnoInput, PuntuacionUncheckedUpdateWithoutAlumnoInput>
  }

  export type PuntuacionUpdateManyWithWhereWithoutAlumnoInput = {
    where: PuntuacionScalarWhereInput
    data: XOR<PuntuacionUpdateManyMutationInput, PuntuacionUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type PuntuacionScalarWhereInput = {
    AND?: PuntuacionScalarWhereInput | PuntuacionScalarWhereInput[]
    OR?: PuntuacionScalarWhereInput[]
    NOT?: PuntuacionScalarWhereInput | PuntuacionScalarWhereInput[]
    id?: IntFilter<"Puntuacion"> | number
    puntos?: IntFilter<"Puntuacion"> | number
    motivo?: StringFilter<"Puntuacion"> | string
    created_at?: DateTimeFilter<"Puntuacion"> | Date | string
    alumnoId?: IntFilter<"Puntuacion"> | number
    catedraId?: IntNullableFilter<"Puntuacion"> | number | null
    tipo?: EnumTipoPuntuacionFilter<"Puntuacion"> | $Enums.TipoPuntuacion
  }

  export type RespuestaAlumnoUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: RespuestaAlumnoWhereUniqueInput
    update: XOR<RespuestaAlumnoUpdateWithoutAlumnoInput, RespuestaAlumnoUncheckedUpdateWithoutAlumnoInput>
    create: XOR<RespuestaAlumnoCreateWithoutAlumnoInput, RespuestaAlumnoUncheckedCreateWithoutAlumnoInput>
  }

  export type RespuestaAlumnoUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: RespuestaAlumnoWhereUniqueInput
    data: XOR<RespuestaAlumnoUpdateWithoutAlumnoInput, RespuestaAlumnoUncheckedUpdateWithoutAlumnoInput>
  }

  export type RespuestaAlumnoUpdateManyWithWhereWithoutAlumnoInput = {
    where: RespuestaAlumnoScalarWhereInput
    data: XOR<RespuestaAlumnoUpdateManyMutationInput, RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type RespuestaAlumnoScalarWhereInput = {
    AND?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
    OR?: RespuestaAlumnoScalarWhereInput[]
    NOT?: RespuestaAlumnoScalarWhereInput | RespuestaAlumnoScalarWhereInput[]
    id?: IntFilter<"RespuestaAlumno"> | number
    created_at?: DateTimeFilter<"RespuestaAlumno"> | Date | string
    alumnoId?: IntFilter<"RespuestaAlumno"> | number
    preguntaId?: IntFilter<"RespuestaAlumno"> | number
    opcionElegidaId?: IntFilter<"RespuestaAlumno"> | number
  }

  export type TareaAsignacionUpsertWithWhereUniqueWithoutAlumnoInput = {
    where: TareaAsignacionWhereUniqueInput
    update: XOR<TareaAsignacionUpdateWithoutAlumnoInput, TareaAsignacionUncheckedUpdateWithoutAlumnoInput>
    create: XOR<TareaAsignacionCreateWithoutAlumnoInput, TareaAsignacionUncheckedCreateWithoutAlumnoInput>
  }

  export type TareaAsignacionUpdateWithWhereUniqueWithoutAlumnoInput = {
    where: TareaAsignacionWhereUniqueInput
    data: XOR<TareaAsignacionUpdateWithoutAlumnoInput, TareaAsignacionUncheckedUpdateWithoutAlumnoInput>
  }

  export type TareaAsignacionUpdateManyWithWhereWithoutAlumnoInput = {
    where: TareaAsignacionScalarWhereInput
    data: XOR<TareaAsignacionUpdateManyMutationInput, TareaAsignacionUncheckedUpdateManyWithoutAlumnoInput>
  }

  export type TareaAsignacionScalarWhereInput = {
    AND?: TareaAsignacionScalarWhereInput | TareaAsignacionScalarWhereInput[]
    OR?: TareaAsignacionScalarWhereInput[]
    NOT?: TareaAsignacionScalarWhereInput | TareaAsignacionScalarWhereInput[]
    id?: IntFilter<"TareaAsignacion"> | number
    estado?: EnumEstadoTareaFilter<"TareaAsignacion"> | $Enums.EstadoTarea
    submission_path?: StringNullableFilter<"TareaAsignacion"> | string | null
    submission_date?: DateTimeNullableFilter<"TareaAsignacion"> | Date | string | null
    puntos_obtenidos?: IntNullableFilter<"TareaAsignacion"> | number | null
    created_at?: DateTimeFilter<"TareaAsignacion"> | Date | string
    updated_at?: DateTimeFilter<"TareaAsignacion"> | Date | string
    alumnoId?: IntFilter<"TareaAsignacion"> | number
    tareaMaestraId?: IntFilter<"TareaAsignacion"> | number
  }

  export type AlumnoCreateWithoutAsistenciaInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutAsistenciaInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutAsistenciaInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutAsistenciaInput, AlumnoUncheckedCreateWithoutAsistenciaInput>
  }

  export type DiaClaseCreateWithoutAsistenciaInput = {
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
    Catedra: CatedraCreateNestedOneWithoutDiaClaseInput
  }

  export type DiaClaseUncheckedCreateWithoutAsistenciaInput = {
    id?: number
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
    catedraId: number
  }

  export type DiaClaseCreateOrConnectWithoutAsistenciaInput = {
    where: DiaClaseWhereUniqueInput
    create: XOR<DiaClaseCreateWithoutAsistenciaInput, DiaClaseUncheckedCreateWithoutAsistenciaInput>
  }

  export type AlumnoUpsertWithoutAsistenciaInput = {
    update: XOR<AlumnoUpdateWithoutAsistenciaInput, AlumnoUncheckedUpdateWithoutAsistenciaInput>
    create: XOR<AlumnoCreateWithoutAsistenciaInput, AlumnoUncheckedCreateWithoutAsistenciaInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutAsistenciaInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutAsistenciaInput, AlumnoUncheckedUpdateWithoutAsistenciaInput>
  }

  export type AlumnoUpdateWithoutAsistenciaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutAsistenciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type DiaClaseUpsertWithoutAsistenciaInput = {
    update: XOR<DiaClaseUpdateWithoutAsistenciaInput, DiaClaseUncheckedUpdateWithoutAsistenciaInput>
    create: XOR<DiaClaseCreateWithoutAsistenciaInput, DiaClaseUncheckedCreateWithoutAsistenciaInput>
    where?: DiaClaseWhereInput
  }

  export type DiaClaseUpdateToOneWithWhereWithoutAsistenciaInput = {
    where?: DiaClaseWhereInput
    data: XOR<DiaClaseUpdateWithoutAsistenciaInput, DiaClaseUncheckedUpdateWithoutAsistenciaInput>
  }

  export type DiaClaseUpdateWithoutAsistenciaInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Catedra?: CatedraUpdateOneRequiredWithoutDiaClaseNestedInput
  }

  export type DiaClaseUncheckedUpdateWithoutAsistenciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
  }

  export type AlumnoCreateWithoutCalificacionEvaluacionInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutCalificacionEvaluacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutCalificacionEvaluacionInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutCalificacionEvaluacionInput, AlumnoUncheckedCreateWithoutCalificacionEvaluacionInput>
  }

  export type EvaluacionAsignacionCreateWithoutCalificacionEvaluacionInput = {
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    Alumno: AlumnoCreateNestedOneWithoutEvaluacionAsignacionInput
    Evaluacion: EvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionUncheckedCreateWithoutCalificacionEvaluacionInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    evaluacionId: number
    publicacionId?: number | null
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionCreateOrConnectWithoutCalificacionEvaluacionInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    create: XOR<EvaluacionAsignacionCreateWithoutCalificacionEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutCalificacionEvaluacionInput>
  }

  export type AlumnoUpsertWithoutCalificacionEvaluacionInput = {
    update: XOR<AlumnoUpdateWithoutCalificacionEvaluacionInput, AlumnoUncheckedUpdateWithoutCalificacionEvaluacionInput>
    create: XOR<AlumnoCreateWithoutCalificacionEvaluacionInput, AlumnoUncheckedCreateWithoutCalificacionEvaluacionInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutCalificacionEvaluacionInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutCalificacionEvaluacionInput, AlumnoUncheckedUpdateWithoutCalificacionEvaluacionInput>
  }

  export type AlumnoUpdateWithoutCalificacionEvaluacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutCalificacionEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type EvaluacionAsignacionUpsertWithoutCalificacionEvaluacionInput = {
    update: XOR<EvaluacionAsignacionUpdateWithoutCalificacionEvaluacionInput, EvaluacionAsignacionUncheckedUpdateWithoutCalificacionEvaluacionInput>
    create: XOR<EvaluacionAsignacionCreateWithoutCalificacionEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutCalificacionEvaluacionInput>
    where?: EvaluacionAsignacionWhereInput
  }

  export type EvaluacionAsignacionUpdateToOneWithWhereWithoutCalificacionEvaluacionInput = {
    where?: EvaluacionAsignacionWhereInput
    data: XOR<EvaluacionAsignacionUpdateWithoutCalificacionEvaluacionInput, EvaluacionAsignacionUncheckedUpdateWithoutCalificacionEvaluacionInput>
  }

  export type EvaluacionAsignacionUpdateWithoutCalificacionEvaluacionInput = {
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Alumno?: AlumnoUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
    Evaluacion?: EvaluacionUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionUncheckedUpdateWithoutCalificacionEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    evaluacionId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type DocenteCreateWithoutCatedraInput = {
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutDocenteInput
    Pago?: PagoCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUncheckedCreateWithoutCatedraInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutDocenteInput
    Pago?: PagoUncheckedCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type DocenteCreateOrConnectWithoutCatedraInput = {
    where: DocenteWhereUniqueInput
    create: XOR<DocenteCreateWithoutCatedraInput, DocenteUncheckedCreateWithoutCatedraInput>
  }

  export type CatedraAlumnoCreateWithoutCatedraInput = {
    assignedAt?: Date | string
    assignedBy: string
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutCatedraAlumnoInput
    Composer?: ComposerCreateNestedOneWithoutCatedraAlumnoInput
    Pago?: PagoCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoUncheckedCreateWithoutCatedraInput = {
    alumnoId?: number | null
    assignedAt?: Date | string
    assignedBy: string
    composerId?: number | null
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Pago?: PagoUncheckedCreateNestedManyWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoCreateOrConnectWithoutCatedraInput = {
    where: CatedraAlumnoWhereUniqueInput
    create: XOR<CatedraAlumnoCreateWithoutCatedraInput, CatedraAlumnoUncheckedCreateWithoutCatedraInput>
  }

  export type CatedraAlumnoCreateManyCatedraInputEnvelope = {
    data: CatedraAlumnoCreateManyCatedraInput | CatedraAlumnoCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type CatedraDiaHorarioCreateWithoutCatedraInput = {
    dia_semana: string
    hora_inicio: string
    hora_fin: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CatedraDiaHorarioUncheckedCreateWithoutCatedraInput = {
    id?: number
    dia_semana: string
    hora_inicio: string
    hora_fin: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CatedraDiaHorarioCreateOrConnectWithoutCatedraInput = {
    where: CatedraDiaHorarioWhereUniqueInput
    create: XOR<CatedraDiaHorarioCreateWithoutCatedraInput, CatedraDiaHorarioUncheckedCreateWithoutCatedraInput>
  }

  export type CatedraDiaHorarioCreateManyCatedraInputEnvelope = {
    data: CatedraDiaHorarioCreateManyCatedraInput | CatedraDiaHorarioCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type CostoCatedraCreateWithoutCatedraInput = {
    monto_matricula?: number | null
    monto_cuota?: number | null
    es_gratuita?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CostoCatedraUncheckedCreateWithoutCatedraInput = {
    id?: number
    monto_matricula?: number | null
    monto_cuota?: number | null
    es_gratuita?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CostoCatedraCreateOrConnectWithoutCatedraInput = {
    where: CostoCatedraWhereUniqueInput
    create: XOR<CostoCatedraCreateWithoutCatedraInput, CostoCatedraUncheckedCreateWithoutCatedraInput>
  }

  export type DiaClaseCreateWithoutCatedraInput = {
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
    Asistencia?: AsistenciaCreateNestedManyWithoutDiaClaseInput
  }

  export type DiaClaseUncheckedCreateWithoutCatedraInput = {
    id?: number
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutDiaClaseInput
  }

  export type DiaClaseCreateOrConnectWithoutCatedraInput = {
    where: DiaClaseWhereUniqueInput
    create: XOR<DiaClaseCreateWithoutCatedraInput, DiaClaseUncheckedCreateWithoutCatedraInput>
  }

  export type DiaClaseCreateManyCatedraInputEnvelope = {
    data: DiaClaseCreateManyCatedraInput | DiaClaseCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type EvaluacionCreateWithoutCatedraInput = {
    titulo: string
    created_at?: Date | string
    fecha_limite?: Date | string | null
    isMaster?: boolean
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutEvaluacionInput
    Pregunta?: PreguntaCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutCatedraInput = {
    id?: number
    titulo: string
    created_at?: Date | string
    fecha_limite?: Date | string | null
    isMaster?: boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutEvaluacionInput
    Pregunta?: PreguntaUncheckedCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutCatedraInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutCatedraInput, EvaluacionUncheckedCreateWithoutCatedraInput>
  }

  export type EvaluacionCreateManyCatedraInputEnvelope = {
    data: EvaluacionCreateManyCatedraInput | EvaluacionCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type PlanDeClasesCreateWithoutCatedraInput = {
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    created_at?: Date | string
    updated_at?: Date | string
    Docente: DocenteCreateNestedOneWithoutPlanDeClasesInput
    UnidadPlan?: UnidadPlanCreateNestedManyWithoutPlanDeClasesInput
  }

  export type PlanDeClasesUncheckedCreateWithoutCatedraInput = {
    id?: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    docenteId: number
    created_at?: Date | string
    updated_at?: Date | string
    UnidadPlan?: UnidadPlanUncheckedCreateNestedManyWithoutPlanDeClasesInput
  }

  export type PlanDeClasesCreateOrConnectWithoutCatedraInput = {
    where: PlanDeClasesWhereUniqueInput
    create: XOR<PlanDeClasesCreateWithoutCatedraInput, PlanDeClasesUncheckedCreateWithoutCatedraInput>
  }

  export type PlanDeClasesCreateManyCatedraInputEnvelope = {
    data: PlanDeClasesCreateManyCatedraInput | PlanDeClasesCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionCreateWithoutCatedraInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutCatedraInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutCatedraInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutCatedraInput, PublicacionUncheckedCreateWithoutCatedraInput>
  }

  export type PublicacionCreateManyCatedraInputEnvelope = {
    data: PublicacionCreateManyCatedraInput | PublicacionCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type PuntuacionCreateWithoutCatedraInput = {
    puntos: number
    motivo: string
    created_at?: Date | string
    tipo: $Enums.TipoPuntuacion
    Alumno: AlumnoCreateNestedOneWithoutPuntuacionInput
  }

  export type PuntuacionUncheckedCreateWithoutCatedraInput = {
    id?: number
    puntos: number
    motivo: string
    created_at?: Date | string
    alumnoId: number
    tipo: $Enums.TipoPuntuacion
  }

  export type PuntuacionCreateOrConnectWithoutCatedraInput = {
    where: PuntuacionWhereUniqueInput
    create: XOR<PuntuacionCreateWithoutCatedraInput, PuntuacionUncheckedCreateWithoutCatedraInput>
  }

  export type PuntuacionCreateManyCatedraInputEnvelope = {
    data: PuntuacionCreateManyCatedraInput | PuntuacionCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type TareaMaestraCreateWithoutCatedraInput = {
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    Publicacion?: PublicacionCreateNestedOneWithoutTareaMaestraInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutTareaMaestraInput
  }

  export type TareaMaestraUncheckedCreateWithoutCatedraInput = {
    id?: number
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutTareaMaestraInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutTareaMaestraInput
  }

  export type TareaMaestraCreateOrConnectWithoutCatedraInput = {
    where: TareaMaestraWhereUniqueInput
    create: XOR<TareaMaestraCreateWithoutCatedraInput, TareaMaestraUncheckedCreateWithoutCatedraInput>
  }

  export type TareaMaestraCreateManyCatedraInputEnvelope = {
    data: TareaMaestraCreateManyCatedraInput | TareaMaestraCreateManyCatedraInput[]
    skipDuplicates?: boolean
  }

  export type DocenteUpsertWithoutCatedraInput = {
    update: XOR<DocenteUpdateWithoutCatedraInput, DocenteUncheckedUpdateWithoutCatedraInput>
    create: XOR<DocenteCreateWithoutCatedraInput, DocenteUncheckedCreateWithoutCatedraInput>
    where?: DocenteWhereInput
  }

  export type DocenteUpdateToOneWithWhereWithoutCatedraInput = {
    where?: DocenteWhereInput
    data: XOR<DocenteUpdateWithoutCatedraInput, DocenteUncheckedUpdateWithoutCatedraInput>
  }

  export type DocenteUpdateWithoutCatedraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUncheckedUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type CatedraAlumnoUpsertWithWhereUniqueWithoutCatedraInput = {
    where: CatedraAlumnoWhereUniqueInput
    update: XOR<CatedraAlumnoUpdateWithoutCatedraInput, CatedraAlumnoUncheckedUpdateWithoutCatedraInput>
    create: XOR<CatedraAlumnoCreateWithoutCatedraInput, CatedraAlumnoUncheckedCreateWithoutCatedraInput>
  }

  export type CatedraAlumnoUpdateWithWhereUniqueWithoutCatedraInput = {
    where: CatedraAlumnoWhereUniqueInput
    data: XOR<CatedraAlumnoUpdateWithoutCatedraInput, CatedraAlumnoUncheckedUpdateWithoutCatedraInput>
  }

  export type CatedraAlumnoUpdateManyWithWhereWithoutCatedraInput = {
    where: CatedraAlumnoScalarWhereInput
    data: XOR<CatedraAlumnoUpdateManyMutationInput, CatedraAlumnoUncheckedUpdateManyWithoutCatedraInput>
  }

  export type CatedraDiaHorarioUpsertWithWhereUniqueWithoutCatedraInput = {
    where: CatedraDiaHorarioWhereUniqueInput
    update: XOR<CatedraDiaHorarioUpdateWithoutCatedraInput, CatedraDiaHorarioUncheckedUpdateWithoutCatedraInput>
    create: XOR<CatedraDiaHorarioCreateWithoutCatedraInput, CatedraDiaHorarioUncheckedCreateWithoutCatedraInput>
  }

  export type CatedraDiaHorarioUpdateWithWhereUniqueWithoutCatedraInput = {
    where: CatedraDiaHorarioWhereUniqueInput
    data: XOR<CatedraDiaHorarioUpdateWithoutCatedraInput, CatedraDiaHorarioUncheckedUpdateWithoutCatedraInput>
  }

  export type CatedraDiaHorarioUpdateManyWithWhereWithoutCatedraInput = {
    where: CatedraDiaHorarioScalarWhereInput
    data: XOR<CatedraDiaHorarioUpdateManyMutationInput, CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraInput>
  }

  export type CatedraDiaHorarioScalarWhereInput = {
    AND?: CatedraDiaHorarioScalarWhereInput | CatedraDiaHorarioScalarWhereInput[]
    OR?: CatedraDiaHorarioScalarWhereInput[]
    NOT?: CatedraDiaHorarioScalarWhereInput | CatedraDiaHorarioScalarWhereInput[]
    id?: IntFilter<"CatedraDiaHorario"> | number
    dia_semana?: StringFilter<"CatedraDiaHorario"> | string
    hora_inicio?: StringFilter<"CatedraDiaHorario"> | string
    hora_fin?: StringFilter<"CatedraDiaHorario"> | string
    catedraId?: IntFilter<"CatedraDiaHorario"> | number
    created_at?: DateTimeFilter<"CatedraDiaHorario"> | Date | string
    updated_at?: DateTimeFilter<"CatedraDiaHorario"> | Date | string
  }

  export type CostoCatedraUpsertWithoutCatedraInput = {
    update: XOR<CostoCatedraUpdateWithoutCatedraInput, CostoCatedraUncheckedUpdateWithoutCatedraInput>
    create: XOR<CostoCatedraCreateWithoutCatedraInput, CostoCatedraUncheckedCreateWithoutCatedraInput>
    where?: CostoCatedraWhereInput
  }

  export type CostoCatedraUpdateToOneWithWhereWithoutCatedraInput = {
    where?: CostoCatedraWhereInput
    data: XOR<CostoCatedraUpdateWithoutCatedraInput, CostoCatedraUncheckedUpdateWithoutCatedraInput>
  }

  export type CostoCatedraUpdateWithoutCatedraInput = {
    monto_matricula?: NullableFloatFieldUpdateOperationsInput | number | null
    monto_cuota?: NullableFloatFieldUpdateOperationsInput | number | null
    es_gratuita?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CostoCatedraUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    monto_matricula?: NullableFloatFieldUpdateOperationsInput | number | null
    monto_cuota?: NullableFloatFieldUpdateOperationsInput | number | null
    es_gratuita?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiaClaseUpsertWithWhereUniqueWithoutCatedraInput = {
    where: DiaClaseWhereUniqueInput
    update: XOR<DiaClaseUpdateWithoutCatedraInput, DiaClaseUncheckedUpdateWithoutCatedraInput>
    create: XOR<DiaClaseCreateWithoutCatedraInput, DiaClaseUncheckedCreateWithoutCatedraInput>
  }

  export type DiaClaseUpdateWithWhereUniqueWithoutCatedraInput = {
    where: DiaClaseWhereUniqueInput
    data: XOR<DiaClaseUpdateWithoutCatedraInput, DiaClaseUncheckedUpdateWithoutCatedraInput>
  }

  export type DiaClaseUpdateManyWithWhereWithoutCatedraInput = {
    where: DiaClaseScalarWhereInput
    data: XOR<DiaClaseUpdateManyMutationInput, DiaClaseUncheckedUpdateManyWithoutCatedraInput>
  }

  export type DiaClaseScalarWhereInput = {
    AND?: DiaClaseScalarWhereInput | DiaClaseScalarWhereInput[]
    OR?: DiaClaseScalarWhereInput[]
    NOT?: DiaClaseScalarWhereInput | DiaClaseScalarWhereInput[]
    id?: IntFilter<"DiaClase"> | number
    fecha?: DateTimeFilter<"DiaClase"> | Date | string
    dia_semana?: StringFilter<"DiaClase"> | string
    created_at?: DateTimeFilter<"DiaClase"> | Date | string
    updated_at?: DateTimeFilter<"DiaClase"> | Date | string
    catedraId?: IntFilter<"DiaClase"> | number
  }

  export type EvaluacionUpsertWithWhereUniqueWithoutCatedraInput = {
    where: EvaluacionWhereUniqueInput
    update: XOR<EvaluacionUpdateWithoutCatedraInput, EvaluacionUncheckedUpdateWithoutCatedraInput>
    create: XOR<EvaluacionCreateWithoutCatedraInput, EvaluacionUncheckedCreateWithoutCatedraInput>
  }

  export type EvaluacionUpdateWithWhereUniqueWithoutCatedraInput = {
    where: EvaluacionWhereUniqueInput
    data: XOR<EvaluacionUpdateWithoutCatedraInput, EvaluacionUncheckedUpdateWithoutCatedraInput>
  }

  export type EvaluacionUpdateManyWithWhereWithoutCatedraInput = {
    where: EvaluacionScalarWhereInput
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyWithoutCatedraInput>
  }

  export type EvaluacionScalarWhereInput = {
    AND?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
    OR?: EvaluacionScalarWhereInput[]
    NOT?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
    id?: IntFilter<"Evaluacion"> | number
    titulo?: StringFilter<"Evaluacion"> | string
    created_at?: DateTimeFilter<"Evaluacion"> | Date | string
    catedraId?: IntFilter<"Evaluacion"> | number
    fecha_limite?: DateTimeNullableFilter<"Evaluacion"> | Date | string | null
    isMaster?: BoolFilter<"Evaluacion"> | boolean
  }

  export type PlanDeClasesUpsertWithWhereUniqueWithoutCatedraInput = {
    where: PlanDeClasesWhereUniqueInput
    update: XOR<PlanDeClasesUpdateWithoutCatedraInput, PlanDeClasesUncheckedUpdateWithoutCatedraInput>
    create: XOR<PlanDeClasesCreateWithoutCatedraInput, PlanDeClasesUncheckedCreateWithoutCatedraInput>
  }

  export type PlanDeClasesUpdateWithWhereUniqueWithoutCatedraInput = {
    where: PlanDeClasesWhereUniqueInput
    data: XOR<PlanDeClasesUpdateWithoutCatedraInput, PlanDeClasesUncheckedUpdateWithoutCatedraInput>
  }

  export type PlanDeClasesUpdateManyWithWhereWithoutCatedraInput = {
    where: PlanDeClasesScalarWhereInput
    data: XOR<PlanDeClasesUpdateManyMutationInput, PlanDeClasesUncheckedUpdateManyWithoutCatedraInput>
  }

  export type PlanDeClasesScalarWhereInput = {
    AND?: PlanDeClasesScalarWhereInput | PlanDeClasesScalarWhereInput[]
    OR?: PlanDeClasesScalarWhereInput[]
    NOT?: PlanDeClasesScalarWhereInput | PlanDeClasesScalarWhereInput[]
    id?: IntFilter<"PlanDeClases"> | number
    titulo?: StringFilter<"PlanDeClases"> | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFilter<"PlanDeClases"> | $Enums.TipoOrganizacionPlan
    docenteId?: IntFilter<"PlanDeClases"> | number
    catedraId?: IntFilter<"PlanDeClases"> | number
    created_at?: DateTimeFilter<"PlanDeClases"> | Date | string
    updated_at?: DateTimeFilter<"PlanDeClases"> | Date | string
  }

  export type PublicacionUpsertWithWhereUniqueWithoutCatedraInput = {
    where: PublicacionWhereUniqueInput
    update: XOR<PublicacionUpdateWithoutCatedraInput, PublicacionUncheckedUpdateWithoutCatedraInput>
    create: XOR<PublicacionCreateWithoutCatedraInput, PublicacionUncheckedCreateWithoutCatedraInput>
  }

  export type PublicacionUpdateWithWhereUniqueWithoutCatedraInput = {
    where: PublicacionWhereUniqueInput
    data: XOR<PublicacionUpdateWithoutCatedraInput, PublicacionUncheckedUpdateWithoutCatedraInput>
  }

  export type PublicacionUpdateManyWithWhereWithoutCatedraInput = {
    where: PublicacionScalarWhereInput
    data: XOR<PublicacionUpdateManyMutationInput, PublicacionUncheckedUpdateManyWithoutCatedraInput>
  }

  export type PuntuacionUpsertWithWhereUniqueWithoutCatedraInput = {
    where: PuntuacionWhereUniqueInput
    update: XOR<PuntuacionUpdateWithoutCatedraInput, PuntuacionUncheckedUpdateWithoutCatedraInput>
    create: XOR<PuntuacionCreateWithoutCatedraInput, PuntuacionUncheckedCreateWithoutCatedraInput>
  }

  export type PuntuacionUpdateWithWhereUniqueWithoutCatedraInput = {
    where: PuntuacionWhereUniqueInput
    data: XOR<PuntuacionUpdateWithoutCatedraInput, PuntuacionUncheckedUpdateWithoutCatedraInput>
  }

  export type PuntuacionUpdateManyWithWhereWithoutCatedraInput = {
    where: PuntuacionScalarWhereInput
    data: XOR<PuntuacionUpdateManyMutationInput, PuntuacionUncheckedUpdateManyWithoutCatedraInput>
  }

  export type TareaMaestraUpsertWithWhereUniqueWithoutCatedraInput = {
    where: TareaMaestraWhereUniqueInput
    update: XOR<TareaMaestraUpdateWithoutCatedraInput, TareaMaestraUncheckedUpdateWithoutCatedraInput>
    create: XOR<TareaMaestraCreateWithoutCatedraInput, TareaMaestraUncheckedCreateWithoutCatedraInput>
  }

  export type TareaMaestraUpdateWithWhereUniqueWithoutCatedraInput = {
    where: TareaMaestraWhereUniqueInput
    data: XOR<TareaMaestraUpdateWithoutCatedraInput, TareaMaestraUncheckedUpdateWithoutCatedraInput>
  }

  export type TareaMaestraUpdateManyWithWhereWithoutCatedraInput = {
    where: TareaMaestraScalarWhereInput
    data: XOR<TareaMaestraUpdateManyMutationInput, TareaMaestraUncheckedUpdateManyWithoutCatedraInput>
  }

  export type TareaMaestraScalarWhereInput = {
    AND?: TareaMaestraScalarWhereInput | TareaMaestraScalarWhereInput[]
    OR?: TareaMaestraScalarWhereInput[]
    NOT?: TareaMaestraScalarWhereInput | TareaMaestraScalarWhereInput[]
    id?: IntFilter<"TareaMaestra"> | number
    titulo?: StringFilter<"TareaMaestra"> | string
    descripcion?: StringFilter<"TareaMaestra"> | string
    fecha_entrega?: DateTimeNullableFilter<"TareaMaestra"> | Date | string | null
    puntos_posibles?: IntFilter<"TareaMaestra"> | number
    recursos?: StringNullableListFilter<"TareaMaestra">
    multimedia_path?: StringNullableFilter<"TareaMaestra"> | string | null
    created_at?: DateTimeFilter<"TareaMaestra"> | Date | string
    updated_at?: DateTimeFilter<"TareaMaestra"> | Date | string
    catedraId?: IntFilter<"TareaMaestra"> | number
    publicacionId?: IntNullableFilter<"TareaMaestra"> | number | null
  }

  export type AlumnoCreateWithoutCatedraAlumnoInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutCatedraAlumnoInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutCatedraAlumnoInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutCatedraAlumnoInput, AlumnoUncheckedCreateWithoutCatedraAlumnoInput>
  }

  export type CatedraCreateWithoutCatedraAlumnoInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutCatedraAlumnoInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutCatedraAlumnoInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutCatedraAlumnoInput, CatedraUncheckedCreateWithoutCatedraAlumnoInput>
  }

  export type ComposerCreateWithoutCatedraAlumnoInput = {
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    comments?: CommentCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionCreateNestedManyWithoutComposerInput
    ratings?: RatingCreateNestedManyWithoutComposerInput
  }

  export type ComposerUncheckedCreateWithoutCatedraAlumnoInput = {
    id?: number
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    comments?: CommentUncheckedCreateNestedManyWithoutComposerInput
    EditSuggestion?: EditSuggestionUncheckedCreateNestedManyWithoutComposerInput
    ratings?: RatingUncheckedCreateNestedManyWithoutComposerInput
  }

  export type ComposerCreateOrConnectWithoutCatedraAlumnoInput = {
    where: ComposerWhereUniqueInput
    create: XOR<ComposerCreateWithoutCatedraAlumnoInput, ComposerUncheckedCreateWithoutCatedraAlumnoInput>
  }

  export type PagoCreateWithoutCatedraAlumnoInput = {
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    created_at?: Date | string
    Docente?: DocenteCreateNestedOneWithoutPagoInput
  }

  export type PagoUncheckedCreateWithoutCatedraAlumnoInput = {
    id?: number
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    confirmadoPorId?: number | null
    created_at?: Date | string
  }

  export type PagoCreateOrConnectWithoutCatedraAlumnoInput = {
    where: PagoWhereUniqueInput
    create: XOR<PagoCreateWithoutCatedraAlumnoInput, PagoUncheckedCreateWithoutCatedraAlumnoInput>
  }

  export type PagoCreateManyCatedraAlumnoInputEnvelope = {
    data: PagoCreateManyCatedraAlumnoInput | PagoCreateManyCatedraAlumnoInput[]
    skipDuplicates?: boolean
  }

  export type AlumnoUpsertWithoutCatedraAlumnoInput = {
    update: XOR<AlumnoUpdateWithoutCatedraAlumnoInput, AlumnoUncheckedUpdateWithoutCatedraAlumnoInput>
    create: XOR<AlumnoCreateWithoutCatedraAlumnoInput, AlumnoUncheckedCreateWithoutCatedraAlumnoInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutCatedraAlumnoInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutCatedraAlumnoInput, AlumnoUncheckedUpdateWithoutCatedraAlumnoInput>
  }

  export type AlumnoUpdateWithoutCatedraAlumnoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutCatedraAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type CatedraUpsertWithoutCatedraAlumnoInput = {
    update: XOR<CatedraUpdateWithoutCatedraAlumnoInput, CatedraUncheckedUpdateWithoutCatedraAlumnoInput>
    create: XOR<CatedraCreateWithoutCatedraAlumnoInput, CatedraUncheckedCreateWithoutCatedraAlumnoInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutCatedraAlumnoInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutCatedraAlumnoInput, CatedraUncheckedUpdateWithoutCatedraAlumnoInput>
  }

  export type CatedraUpdateWithoutCatedraAlumnoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutCatedraAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type ComposerUpsertWithoutCatedraAlumnoInput = {
    update: XOR<ComposerUpdateWithoutCatedraAlumnoInput, ComposerUncheckedUpdateWithoutCatedraAlumnoInput>
    create: XOR<ComposerCreateWithoutCatedraAlumnoInput, ComposerUncheckedCreateWithoutCatedraAlumnoInput>
    where?: ComposerWhereInput
  }

  export type ComposerUpdateToOneWithWhereWithoutCatedraAlumnoInput = {
    where?: ComposerWhereInput
    data: XOR<ComposerUpdateWithoutCatedraAlumnoInput, ComposerUncheckedUpdateWithoutCatedraAlumnoInput>
  }

  export type ComposerUpdateWithoutCatedraAlumnoInput = {
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUpdateManyWithoutComposerNestedInput
    ratings?: RatingUpdateManyWithoutComposerNestedInput
  }

  export type ComposerUncheckedUpdateWithoutCatedraAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    comments?: CommentUncheckedUpdateManyWithoutComposerNestedInput
    EditSuggestion?: EditSuggestionUncheckedUpdateManyWithoutComposerNestedInput
    ratings?: RatingUncheckedUpdateManyWithoutComposerNestedInput
  }

  export type PagoUpsertWithWhereUniqueWithoutCatedraAlumnoInput = {
    where: PagoWhereUniqueInput
    update: XOR<PagoUpdateWithoutCatedraAlumnoInput, PagoUncheckedUpdateWithoutCatedraAlumnoInput>
    create: XOR<PagoCreateWithoutCatedraAlumnoInput, PagoUncheckedCreateWithoutCatedraAlumnoInput>
  }

  export type PagoUpdateWithWhereUniqueWithoutCatedraAlumnoInput = {
    where: PagoWhereUniqueInput
    data: XOR<PagoUpdateWithoutCatedraAlumnoInput, PagoUncheckedUpdateWithoutCatedraAlumnoInput>
  }

  export type PagoUpdateManyWithWhereWithoutCatedraAlumnoInput = {
    where: PagoScalarWhereInput
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyWithoutCatedraAlumnoInput>
  }

  export type PagoScalarWhereInput = {
    AND?: PagoScalarWhereInput | PagoScalarWhereInput[]
    OR?: PagoScalarWhereInput[]
    NOT?: PagoScalarWhereInput | PagoScalarWhereInput[]
    id?: IntFilter<"Pago"> | number
    catedraAlumnoId?: IntFilter<"Pago"> | number
    fecha_pago?: DateTimeFilter<"Pago"> | Date | string
    monto_pagado?: FloatFilter<"Pago"> | number
    tipo_pago?: EnumTipoPagoFilter<"Pago"> | $Enums.TipoPago
    periodo_cubierto?: StringNullableFilter<"Pago"> | string | null
    confirmadoPorId?: IntNullableFilter<"Pago"> | number | null
    created_at?: DateTimeFilter<"Pago"> | Date | string
  }

  export type CatedraCreateWithoutCatedraDiaHorarioInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutCatedraDiaHorarioInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutCatedraDiaHorarioInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutCatedraDiaHorarioInput, CatedraUncheckedCreateWithoutCatedraDiaHorarioInput>
  }

  export type CatedraUpsertWithoutCatedraDiaHorarioInput = {
    update: XOR<CatedraUpdateWithoutCatedraDiaHorarioInput, CatedraUncheckedUpdateWithoutCatedraDiaHorarioInput>
    create: XOR<CatedraCreateWithoutCatedraDiaHorarioInput, CatedraUncheckedCreateWithoutCatedraDiaHorarioInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutCatedraDiaHorarioInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutCatedraDiaHorarioInput, CatedraUncheckedUpdateWithoutCatedraDiaHorarioInput>
  }

  export type CatedraUpdateWithoutCatedraDiaHorarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutCatedraDiaHorarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type AlumnoCreateWithoutComentarioPublicacionInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutComentarioPublicacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutComentarioPublicacionInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutComentarioPublicacionInput, AlumnoUncheckedCreateWithoutComentarioPublicacionInput>
  }

  export type DocenteCreateWithoutComentarioPublicacionInput = {
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraCreateNestedManyWithoutDocenteInput
    Pago?: PagoCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUncheckedCreateWithoutComentarioPublicacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraUncheckedCreateNestedManyWithoutDocenteInput
    Pago?: PagoUncheckedCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type DocenteCreateOrConnectWithoutComentarioPublicacionInput = {
    where: DocenteWhereUniqueInput
    create: XOR<DocenteCreateWithoutComentarioPublicacionInput, DocenteUncheckedCreateWithoutComentarioPublicacionInput>
  }

  export type PublicacionCreateWithoutComentarioPublicacionInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutComentarioPublicacionInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutComentarioPublicacionInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutComentarioPublicacionInput, PublicacionUncheckedCreateWithoutComentarioPublicacionInput>
  }

  export type AlumnoUpsertWithoutComentarioPublicacionInput = {
    update: XOR<AlumnoUpdateWithoutComentarioPublicacionInput, AlumnoUncheckedUpdateWithoutComentarioPublicacionInput>
    create: XOR<AlumnoCreateWithoutComentarioPublicacionInput, AlumnoUncheckedCreateWithoutComentarioPublicacionInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutComentarioPublicacionInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutComentarioPublicacionInput, AlumnoUncheckedUpdateWithoutComentarioPublicacionInput>
  }

  export type AlumnoUpdateWithoutComentarioPublicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutComentarioPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type DocenteUpsertWithoutComentarioPublicacionInput = {
    update: XOR<DocenteUpdateWithoutComentarioPublicacionInput, DocenteUncheckedUpdateWithoutComentarioPublicacionInput>
    create: XOR<DocenteCreateWithoutComentarioPublicacionInput, DocenteUncheckedCreateWithoutComentarioPublicacionInput>
    where?: DocenteWhereInput
  }

  export type DocenteUpdateToOneWithWhereWithoutComentarioPublicacionInput = {
    where?: DocenteWhereInput
    data: XOR<DocenteUpdateWithoutComentarioPublicacionInput, DocenteUncheckedUpdateWithoutComentarioPublicacionInput>
  }

  export type DocenteUpdateWithoutComentarioPublicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteUncheckedUpdateWithoutComentarioPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUncheckedUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUncheckedUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type PublicacionUpsertWithoutComentarioPublicacionInput = {
    update: XOR<PublicacionUpdateWithoutComentarioPublicacionInput, PublicacionUncheckedUpdateWithoutComentarioPublicacionInput>
    create: XOR<PublicacionCreateWithoutComentarioPublicacionInput, PublicacionUncheckedCreateWithoutComentarioPublicacionInput>
    where?: PublicacionWhereInput
  }

  export type PublicacionUpdateToOneWithWhereWithoutComentarioPublicacionInput = {
    where?: PublicacionWhereInput
    data: XOR<PublicacionUpdateWithoutComentarioPublicacionInput, PublicacionUncheckedUpdateWithoutComentarioPublicacionInput>
  }

  export type PublicacionUpdateWithoutComentarioPublicacionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutComentarioPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type CatedraCreateWithoutCostoCatedraInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutCostoCatedraInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutCostoCatedraInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutCostoCatedraInput, CatedraUncheckedCreateWithoutCostoCatedraInput>
  }

  export type CatedraUpsertWithoutCostoCatedraInput = {
    update: XOR<CatedraUpdateWithoutCostoCatedraInput, CatedraUncheckedUpdateWithoutCostoCatedraInput>
    create: XOR<CatedraCreateWithoutCostoCatedraInput, CatedraUncheckedCreateWithoutCostoCatedraInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutCostoCatedraInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutCostoCatedraInput, CatedraUncheckedUpdateWithoutCostoCatedraInput>
  }

  export type CatedraUpdateWithoutCostoCatedraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutCostoCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type AsistenciaCreateWithoutDiaClaseInput = {
    presente: boolean
    created_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutAsistenciaInput
  }

  export type AsistenciaUncheckedCreateWithoutDiaClaseInput = {
    id?: number
    presente: boolean
    created_at?: Date | string
    alumnoId: number
  }

  export type AsistenciaCreateOrConnectWithoutDiaClaseInput = {
    where: AsistenciaWhereUniqueInput
    create: XOR<AsistenciaCreateWithoutDiaClaseInput, AsistenciaUncheckedCreateWithoutDiaClaseInput>
  }

  export type AsistenciaCreateManyDiaClaseInputEnvelope = {
    data: AsistenciaCreateManyDiaClaseInput | AsistenciaCreateManyDiaClaseInput[]
    skipDuplicates?: boolean
  }

  export type CatedraCreateWithoutDiaClaseInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutDiaClaseInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutDiaClaseInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutDiaClaseInput, CatedraUncheckedCreateWithoutDiaClaseInput>
  }

  export type AsistenciaUpsertWithWhereUniqueWithoutDiaClaseInput = {
    where: AsistenciaWhereUniqueInput
    update: XOR<AsistenciaUpdateWithoutDiaClaseInput, AsistenciaUncheckedUpdateWithoutDiaClaseInput>
    create: XOR<AsistenciaCreateWithoutDiaClaseInput, AsistenciaUncheckedCreateWithoutDiaClaseInput>
  }

  export type AsistenciaUpdateWithWhereUniqueWithoutDiaClaseInput = {
    where: AsistenciaWhereUniqueInput
    data: XOR<AsistenciaUpdateWithoutDiaClaseInput, AsistenciaUncheckedUpdateWithoutDiaClaseInput>
  }

  export type AsistenciaUpdateManyWithWhereWithoutDiaClaseInput = {
    where: AsistenciaScalarWhereInput
    data: XOR<AsistenciaUpdateManyMutationInput, AsistenciaUncheckedUpdateManyWithoutDiaClaseInput>
  }

  export type CatedraUpsertWithoutDiaClaseInput = {
    update: XOR<CatedraUpdateWithoutDiaClaseInput, CatedraUncheckedUpdateWithoutDiaClaseInput>
    create: XOR<CatedraCreateWithoutDiaClaseInput, CatedraUncheckedCreateWithoutDiaClaseInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutDiaClaseInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutDiaClaseInput, CatedraUncheckedUpdateWithoutDiaClaseInput>
  }

  export type CatedraUpdateWithoutDiaClaseInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutDiaClaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraCreateWithoutDocenteInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutDocenteInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutDocenteInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutDocenteInput, CatedraUncheckedCreateWithoutDocenteInput>
  }

  export type CatedraCreateManyDocenteInputEnvelope = {
    data: CatedraCreateManyDocenteInput | CatedraCreateManyDocenteInput[]
    skipDuplicates?: boolean
  }

  export type ComentarioPublicacionCreateWithoutDocenteInput = {
    texto: string
    created_at?: Date | string
    updated_at?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutComentarioPublicacionInput
    Publicacion: PublicacionCreateNestedOneWithoutComentarioPublicacionInput
  }

  export type ComentarioPublicacionUncheckedCreateWithoutDocenteInput = {
    id?: number
    texto: string
    publicacionId: number
    autorAlumnoId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ComentarioPublicacionCreateOrConnectWithoutDocenteInput = {
    where: ComentarioPublicacionWhereUniqueInput
    create: XOR<ComentarioPublicacionCreateWithoutDocenteInput, ComentarioPublicacionUncheckedCreateWithoutDocenteInput>
  }

  export type ComentarioPublicacionCreateManyDocenteInputEnvelope = {
    data: ComentarioPublicacionCreateManyDocenteInput | ComentarioPublicacionCreateManyDocenteInput[]
    skipDuplicates?: boolean
  }

  export type PagoCreateWithoutDocenteInput = {
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    created_at?: Date | string
    CatedraAlumno: CatedraAlumnoCreateNestedOneWithoutPagoInput
  }

  export type PagoUncheckedCreateWithoutDocenteInput = {
    id?: number
    catedraAlumnoId: number
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    created_at?: Date | string
  }

  export type PagoCreateOrConnectWithoutDocenteInput = {
    where: PagoWhereUniqueInput
    create: XOR<PagoCreateWithoutDocenteInput, PagoUncheckedCreateWithoutDocenteInput>
  }

  export type PagoCreateManyDocenteInputEnvelope = {
    data: PagoCreateManyDocenteInput | PagoCreateManyDocenteInput[]
    skipDuplicates?: boolean
  }

  export type PlanDeClasesCreateWithoutDocenteInput = {
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    created_at?: Date | string
    updated_at?: Date | string
    Catedra: CatedraCreateNestedOneWithoutPlanDeClasesInput
    UnidadPlan?: UnidadPlanCreateNestedManyWithoutPlanDeClasesInput
  }

  export type PlanDeClasesUncheckedCreateWithoutDocenteInput = {
    id?: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    catedraId: number
    created_at?: Date | string
    updated_at?: Date | string
    UnidadPlan?: UnidadPlanUncheckedCreateNestedManyWithoutPlanDeClasesInput
  }

  export type PlanDeClasesCreateOrConnectWithoutDocenteInput = {
    where: PlanDeClasesWhereUniqueInput
    create: XOR<PlanDeClasesCreateWithoutDocenteInput, PlanDeClasesUncheckedCreateWithoutDocenteInput>
  }

  export type PlanDeClasesCreateManyDocenteInputEnvelope = {
    data: PlanDeClasesCreateManyDocenteInput | PlanDeClasesCreateManyDocenteInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionCreateWithoutDocenteInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutDocenteInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutDocenteInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutDocenteInput, PublicacionUncheckedCreateWithoutDocenteInput>
  }

  export type PublicacionCreateManyDocenteInputEnvelope = {
    data: PublicacionCreateManyDocenteInput | PublicacionCreateManyDocenteInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionInteraccionCreateWithoutDocenteInput = {
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInteraccionInput
    Publicacion: PublicacionCreateNestedOneWithoutPublicacionInteraccionInput
  }

  export type PublicacionInteraccionUncheckedCreateWithoutDocenteInput = {
    id?: number
    publicacionId: number
    alumnoId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type PublicacionInteraccionCreateOrConnectWithoutDocenteInput = {
    where: PublicacionInteraccionWhereUniqueInput
    create: XOR<PublicacionInteraccionCreateWithoutDocenteInput, PublicacionInteraccionUncheckedCreateWithoutDocenteInput>
  }

  export type PublicacionInteraccionCreateManyDocenteInputEnvelope = {
    data: PublicacionInteraccionCreateManyDocenteInput | PublicacionInteraccionCreateManyDocenteInput[]
    skipDuplicates?: boolean
  }

  export type CatedraUpsertWithWhereUniqueWithoutDocenteInput = {
    where: CatedraWhereUniqueInput
    update: XOR<CatedraUpdateWithoutDocenteInput, CatedraUncheckedUpdateWithoutDocenteInput>
    create: XOR<CatedraCreateWithoutDocenteInput, CatedraUncheckedCreateWithoutDocenteInput>
  }

  export type CatedraUpdateWithWhereUniqueWithoutDocenteInput = {
    where: CatedraWhereUniqueInput
    data: XOR<CatedraUpdateWithoutDocenteInput, CatedraUncheckedUpdateWithoutDocenteInput>
  }

  export type CatedraUpdateManyWithWhereWithoutDocenteInput = {
    where: CatedraScalarWhereInput
    data: XOR<CatedraUpdateManyMutationInput, CatedraUncheckedUpdateManyWithoutDocenteInput>
  }

  export type CatedraScalarWhereInput = {
    AND?: CatedraScalarWhereInput | CatedraScalarWhereInput[]
    OR?: CatedraScalarWhereInput[]
    NOT?: CatedraScalarWhereInput | CatedraScalarWhereInput[]
    id?: IntFilter<"Catedra"> | number
    nombre?: StringFilter<"Catedra"> | string
    anio?: IntFilter<"Catedra"> | number
    institucion?: StringFilter<"Catedra"> | string
    turno?: StringFilter<"Catedra"> | string
    aula?: StringFilter<"Catedra"> | string
    dias?: StringFilter<"Catedra"> | string
    created_at?: DateTimeFilter<"Catedra"> | Date | string
    updated_at?: DateTimeFilter<"Catedra"> | Date | string
    docenteId?: IntNullableFilter<"Catedra"> | number | null
    modalidad_pago?: EnumModalidadPagoFilter<"Catedra"> | $Enums.ModalidadPago
  }

  export type ComentarioPublicacionUpsertWithWhereUniqueWithoutDocenteInput = {
    where: ComentarioPublicacionWhereUniqueInput
    update: XOR<ComentarioPublicacionUpdateWithoutDocenteInput, ComentarioPublicacionUncheckedUpdateWithoutDocenteInput>
    create: XOR<ComentarioPublicacionCreateWithoutDocenteInput, ComentarioPublicacionUncheckedCreateWithoutDocenteInput>
  }

  export type ComentarioPublicacionUpdateWithWhereUniqueWithoutDocenteInput = {
    where: ComentarioPublicacionWhereUniqueInput
    data: XOR<ComentarioPublicacionUpdateWithoutDocenteInput, ComentarioPublicacionUncheckedUpdateWithoutDocenteInput>
  }

  export type ComentarioPublicacionUpdateManyWithWhereWithoutDocenteInput = {
    where: ComentarioPublicacionScalarWhereInput
    data: XOR<ComentarioPublicacionUpdateManyMutationInput, ComentarioPublicacionUncheckedUpdateManyWithoutDocenteInput>
  }

  export type PagoUpsertWithWhereUniqueWithoutDocenteInput = {
    where: PagoWhereUniqueInput
    update: XOR<PagoUpdateWithoutDocenteInput, PagoUncheckedUpdateWithoutDocenteInput>
    create: XOR<PagoCreateWithoutDocenteInput, PagoUncheckedCreateWithoutDocenteInput>
  }

  export type PagoUpdateWithWhereUniqueWithoutDocenteInput = {
    where: PagoWhereUniqueInput
    data: XOR<PagoUpdateWithoutDocenteInput, PagoUncheckedUpdateWithoutDocenteInput>
  }

  export type PagoUpdateManyWithWhereWithoutDocenteInput = {
    where: PagoScalarWhereInput
    data: XOR<PagoUpdateManyMutationInput, PagoUncheckedUpdateManyWithoutDocenteInput>
  }

  export type PlanDeClasesUpsertWithWhereUniqueWithoutDocenteInput = {
    where: PlanDeClasesWhereUniqueInput
    update: XOR<PlanDeClasesUpdateWithoutDocenteInput, PlanDeClasesUncheckedUpdateWithoutDocenteInput>
    create: XOR<PlanDeClasesCreateWithoutDocenteInput, PlanDeClasesUncheckedCreateWithoutDocenteInput>
  }

  export type PlanDeClasesUpdateWithWhereUniqueWithoutDocenteInput = {
    where: PlanDeClasesWhereUniqueInput
    data: XOR<PlanDeClasesUpdateWithoutDocenteInput, PlanDeClasesUncheckedUpdateWithoutDocenteInput>
  }

  export type PlanDeClasesUpdateManyWithWhereWithoutDocenteInput = {
    where: PlanDeClasesScalarWhereInput
    data: XOR<PlanDeClasesUpdateManyMutationInput, PlanDeClasesUncheckedUpdateManyWithoutDocenteInput>
  }

  export type PublicacionUpsertWithWhereUniqueWithoutDocenteInput = {
    where: PublicacionWhereUniqueInput
    update: XOR<PublicacionUpdateWithoutDocenteInput, PublicacionUncheckedUpdateWithoutDocenteInput>
    create: XOR<PublicacionCreateWithoutDocenteInput, PublicacionUncheckedCreateWithoutDocenteInput>
  }

  export type PublicacionUpdateWithWhereUniqueWithoutDocenteInput = {
    where: PublicacionWhereUniqueInput
    data: XOR<PublicacionUpdateWithoutDocenteInput, PublicacionUncheckedUpdateWithoutDocenteInput>
  }

  export type PublicacionUpdateManyWithWhereWithoutDocenteInput = {
    where: PublicacionScalarWhereInput
    data: XOR<PublicacionUpdateManyMutationInput, PublicacionUncheckedUpdateManyWithoutDocenteInput>
  }

  export type PublicacionInteraccionUpsertWithWhereUniqueWithoutDocenteInput = {
    where: PublicacionInteraccionWhereUniqueInput
    update: XOR<PublicacionInteraccionUpdateWithoutDocenteInput, PublicacionInteraccionUncheckedUpdateWithoutDocenteInput>
    create: XOR<PublicacionInteraccionCreateWithoutDocenteInput, PublicacionInteraccionUncheckedCreateWithoutDocenteInput>
  }

  export type PublicacionInteraccionUpdateWithWhereUniqueWithoutDocenteInput = {
    where: PublicacionInteraccionWhereUniqueInput
    data: XOR<PublicacionInteraccionUpdateWithoutDocenteInput, PublicacionInteraccionUncheckedUpdateWithoutDocenteInput>
  }

  export type PublicacionInteraccionUpdateManyWithWhereWithoutDocenteInput = {
    where: PublicacionInteraccionScalarWhereInput
    data: XOR<PublicacionInteraccionUpdateManyMutationInput, PublicacionInteraccionUncheckedUpdateManyWithoutDocenteInput>
  }

  export type ComposerCreateWithoutEditSuggestionInput = {
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutComposerInput
    comments?: CommentCreateNestedManyWithoutComposerInput
    ratings?: RatingCreateNestedManyWithoutComposerInput
  }

  export type ComposerUncheckedCreateWithoutEditSuggestionInput = {
    id?: number
    bio: string
    birth_day?: number | null
    birth_month?: number | null
    birth_year: number
    created_at?: Date | string
    death_day?: number | null
    death_month?: number | null
    death_year?: number | null
    email: string
    first_name: string
    ip_address?: string | null
    last_name: string
    notable_works: string
    photo_url?: string | null
    quality?: string | null
    references?: string | null
    status?: string
    updated_at?: Date | string
    youtube_link?: string | null
    period: string
    mainRole?: ComposerCreatemainRoleInput | $Enums.RoleType[]
    completeness_score?: number | null
    rejection_reason?: string | null
    is_student_contribution?: boolean
    student_first_name?: string | null
    student_last_name?: string | null
    suggestion_reason?: string | null
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutComposerInput
    comments?: CommentUncheckedCreateNestedManyWithoutComposerInput
    ratings?: RatingUncheckedCreateNestedManyWithoutComposerInput
  }

  export type ComposerCreateOrConnectWithoutEditSuggestionInput = {
    where: ComposerWhereUniqueInput
    create: XOR<ComposerCreateWithoutEditSuggestionInput, ComposerUncheckedCreateWithoutEditSuggestionInput>
  }

  export type ComposerUpsertWithoutEditSuggestionInput = {
    update: XOR<ComposerUpdateWithoutEditSuggestionInput, ComposerUncheckedUpdateWithoutEditSuggestionInput>
    create: XOR<ComposerCreateWithoutEditSuggestionInput, ComposerUncheckedCreateWithoutEditSuggestionInput>
    where?: ComposerWhereInput
  }

  export type ComposerUpdateToOneWithWhereWithoutEditSuggestionInput = {
    where?: ComposerWhereInput
    data: XOR<ComposerUpdateWithoutEditSuggestionInput, ComposerUncheckedUpdateWithoutEditSuggestionInput>
  }

  export type ComposerUpdateWithoutEditSuggestionInput = {
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutComposerNestedInput
    comments?: CommentUpdateManyWithoutComposerNestedInput
    ratings?: RatingUpdateManyWithoutComposerNestedInput
  }

  export type ComposerUncheckedUpdateWithoutEditSuggestionInput = {
    id?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_year?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    email?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    notable_works?: StringFieldUpdateOperationsInput | string
    photo_url?: NullableStringFieldUpdateOperationsInput | string | null
    quality?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    period?: StringFieldUpdateOperationsInput | string
    mainRole?: ComposerUpdatemainRoleInput | $Enums.RoleType[]
    completeness_score?: NullableIntFieldUpdateOperationsInput | number | null
    rejection_reason?: NullableStringFieldUpdateOperationsInput | string | null
    is_student_contribution?: BoolFieldUpdateOperationsInput | boolean
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    suggestion_reason?: NullableStringFieldUpdateOperationsInput | string | null
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutComposerNestedInput
    comments?: CommentUncheckedUpdateManyWithoutComposerNestedInput
    ratings?: RatingUncheckedUpdateManyWithoutComposerNestedInput
  }

  export type CatedraCreateWithoutEvaluacionInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutEvaluacionInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutEvaluacionInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutEvaluacionInput, CatedraUncheckedCreateWithoutEvaluacionInput>
  }

  export type EvaluacionAsignacionCreateWithoutEvaluacionInput = {
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
    Alumno: AlumnoCreateNestedOneWithoutEvaluacionAsignacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionCreateOrConnectWithoutEvaluacionInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    create: XOR<EvaluacionAsignacionCreateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput>
  }

  export type EvaluacionAsignacionCreateManyEvaluacionInputEnvelope = {
    data: EvaluacionAsignacionCreateManyEvaluacionInput | EvaluacionAsignacionCreateManyEvaluacionInput[]
    skipDuplicates?: boolean
  }

  export type PreguntaCreateWithoutEvaluacionInput = {
    texto: string
    Opcion?: OpcionCreateNestedManyWithoutPreguntaInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutPreguntaInput
  }

  export type PreguntaUncheckedCreateWithoutEvaluacionInput = {
    id?: number
    texto: string
    Opcion?: OpcionUncheckedCreateNestedManyWithoutPreguntaInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutPreguntaInput
  }

  export type PreguntaCreateOrConnectWithoutEvaluacionInput = {
    where: PreguntaWhereUniqueInput
    create: XOR<PreguntaCreateWithoutEvaluacionInput, PreguntaUncheckedCreateWithoutEvaluacionInput>
  }

  export type PreguntaCreateManyEvaluacionInputEnvelope = {
    data: PreguntaCreateManyEvaluacionInput | PreguntaCreateManyEvaluacionInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionCreateWithoutEvaluacionInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutEvaluacionInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutEvaluacionInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutEvaluacionInput, PublicacionUncheckedCreateWithoutEvaluacionInput>
  }

  export type CatedraUpsertWithoutEvaluacionInput = {
    update: XOR<CatedraUpdateWithoutEvaluacionInput, CatedraUncheckedUpdateWithoutEvaluacionInput>
    create: XOR<CatedraCreateWithoutEvaluacionInput, CatedraUncheckedCreateWithoutEvaluacionInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutEvaluacionInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutEvaluacionInput, CatedraUncheckedUpdateWithoutEvaluacionInput>
  }

  export type CatedraUpdateWithoutEvaluacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type EvaluacionAsignacionUpsertWithWhereUniqueWithoutEvaluacionInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    update: XOR<EvaluacionAsignacionUpdateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedUpdateWithoutEvaluacionInput>
    create: XOR<EvaluacionAsignacionCreateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedCreateWithoutEvaluacionInput>
  }

  export type EvaluacionAsignacionUpdateWithWhereUniqueWithoutEvaluacionInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    data: XOR<EvaluacionAsignacionUpdateWithoutEvaluacionInput, EvaluacionAsignacionUncheckedUpdateWithoutEvaluacionInput>
  }

  export type EvaluacionAsignacionUpdateManyWithWhereWithoutEvaluacionInput = {
    where: EvaluacionAsignacionScalarWhereInput
    data: XOR<EvaluacionAsignacionUpdateManyMutationInput, EvaluacionAsignacionUncheckedUpdateManyWithoutEvaluacionInput>
  }

  export type PreguntaUpsertWithWhereUniqueWithoutEvaluacionInput = {
    where: PreguntaWhereUniqueInput
    update: XOR<PreguntaUpdateWithoutEvaluacionInput, PreguntaUncheckedUpdateWithoutEvaluacionInput>
    create: XOR<PreguntaCreateWithoutEvaluacionInput, PreguntaUncheckedCreateWithoutEvaluacionInput>
  }

  export type PreguntaUpdateWithWhereUniqueWithoutEvaluacionInput = {
    where: PreguntaWhereUniqueInput
    data: XOR<PreguntaUpdateWithoutEvaluacionInput, PreguntaUncheckedUpdateWithoutEvaluacionInput>
  }

  export type PreguntaUpdateManyWithWhereWithoutEvaluacionInput = {
    where: PreguntaScalarWhereInput
    data: XOR<PreguntaUpdateManyMutationInput, PreguntaUncheckedUpdateManyWithoutEvaluacionInput>
  }

  export type PreguntaScalarWhereInput = {
    AND?: PreguntaScalarWhereInput | PreguntaScalarWhereInput[]
    OR?: PreguntaScalarWhereInput[]
    NOT?: PreguntaScalarWhereInput | PreguntaScalarWhereInput[]
    id?: IntFilter<"Pregunta"> | number
    texto?: StringFilter<"Pregunta"> | string
    evaluacionId?: IntFilter<"Pregunta"> | number
  }

  export type PublicacionUpsertWithoutEvaluacionInput = {
    update: XOR<PublicacionUpdateWithoutEvaluacionInput, PublicacionUncheckedUpdateWithoutEvaluacionInput>
    create: XOR<PublicacionCreateWithoutEvaluacionInput, PublicacionUncheckedCreateWithoutEvaluacionInput>
    where?: PublicacionWhereInput
  }

  export type PublicacionUpdateToOneWithWhereWithoutEvaluacionInput = {
    where?: PublicacionWhereInput
    data: XOR<PublicacionUpdateWithoutEvaluacionInput, PublicacionUncheckedUpdateWithoutEvaluacionInput>
  }

  export type PublicacionUpdateWithoutEvaluacionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type CalificacionEvaluacionCreateWithoutEvaluacionAsignacionInput = {
    puntos: number
    created_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutCalificacionEvaluacionInput
  }

  export type CalificacionEvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput = {
    id?: number
    puntos: number
    created_at?: Date | string
    alumnoId: number
  }

  export type CalificacionEvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput = {
    where: CalificacionEvaluacionWhereUniqueInput
    create: XOR<CalificacionEvaluacionCreateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
  }

  export type AlumnoCreateWithoutEvaluacionAsignacionInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutEvaluacionAsignacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutEvaluacionAsignacionInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutEvaluacionAsignacionInput, AlumnoUncheckedCreateWithoutEvaluacionAsignacionInput>
  }

  export type EvaluacionCreateWithoutEvaluacionAsignacionInput = {
    titulo: string
    created_at?: Date | string
    fecha_limite?: Date | string | null
    isMaster?: boolean
    Catedra: CatedraCreateNestedOneWithoutEvaluacionInput
    Pregunta?: PreguntaCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput = {
    id?: number
    titulo: string
    created_at?: Date | string
    catedraId: number
    fecha_limite?: Date | string | null
    isMaster?: boolean
    Pregunta?: PreguntaUncheckedCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutEvaluacionAsignacionInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutEvaluacionAsignacionInput, EvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
  }

  export type PublicacionCreateWithoutEvaluacionAsignacionInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutEvaluacionAsignacionInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionMaestraId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutEvaluacionAsignacionInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutEvaluacionAsignacionInput, PublicacionUncheckedCreateWithoutEvaluacionAsignacionInput>
  }

  export type CalificacionEvaluacionUpsertWithoutEvaluacionAsignacionInput = {
    update: XOR<CalificacionEvaluacionUpdateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
    create: XOR<CalificacionEvaluacionCreateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    where?: CalificacionEvaluacionWhereInput
  }

  export type CalificacionEvaluacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput = {
    where?: CalificacionEvaluacionWhereInput
    data: XOR<CalificacionEvaluacionUpdateWithoutEvaluacionAsignacionInput, CalificacionEvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type CalificacionEvaluacionUpdateWithoutEvaluacionAsignacionInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutCalificacionEvaluacionNestedInput
  }

  export type CalificacionEvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
  }

  export type AlumnoUpsertWithoutEvaluacionAsignacionInput = {
    update: XOR<AlumnoUpdateWithoutEvaluacionAsignacionInput, AlumnoUncheckedUpdateWithoutEvaluacionAsignacionInput>
    create: XOR<AlumnoCreateWithoutEvaluacionAsignacionInput, AlumnoUncheckedCreateWithoutEvaluacionAsignacionInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutEvaluacionAsignacionInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutEvaluacionAsignacionInput, AlumnoUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type AlumnoUpdateWithoutEvaluacionAsignacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutEvaluacionAsignacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type EvaluacionUpsertWithoutEvaluacionAsignacionInput = {
    update: XOR<EvaluacionUpdateWithoutEvaluacionAsignacionInput, EvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
    create: XOR<EvaluacionCreateWithoutEvaluacionAsignacionInput, EvaluacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    where?: EvaluacionWhereInput
  }

  export type EvaluacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput = {
    where?: EvaluacionWhereInput
    data: XOR<EvaluacionUpdateWithoutEvaluacionAsignacionInput, EvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type EvaluacionUpdateWithoutEvaluacionAsignacionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    Catedra?: CatedraUpdateOneRequiredWithoutEvaluacionNestedInput
    Pregunta?: PreguntaUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutEvaluacionAsignacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    Pregunta?: PreguntaUncheckedUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type PublicacionUpsertWithoutEvaluacionAsignacionInput = {
    update: XOR<PublicacionUpdateWithoutEvaluacionAsignacionInput, PublicacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
    create: XOR<PublicacionCreateWithoutEvaluacionAsignacionInput, PublicacionUncheckedCreateWithoutEvaluacionAsignacionInput>
    where?: PublicacionWhereInput
  }

  export type PublicacionUpdateToOneWithWhereWithoutEvaluacionAsignacionInput = {
    where?: PublicacionWhereInput
    data: XOR<PublicacionUpdateWithoutEvaluacionAsignacionInput, PublicacionUncheckedUpdateWithoutEvaluacionAsignacionInput>
  }

  export type PublicacionUpdateWithoutEvaluacionAsignacionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutEvaluacionAsignacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PreguntaCreateWithoutOpcionInput = {
    texto: string
    Evaluacion: EvaluacionCreateNestedOneWithoutPreguntaInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutPreguntaInput
  }

  export type PreguntaUncheckedCreateWithoutOpcionInput = {
    id?: number
    texto: string
    evaluacionId: number
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutPreguntaInput
  }

  export type PreguntaCreateOrConnectWithoutOpcionInput = {
    where: PreguntaWhereUniqueInput
    create: XOR<PreguntaCreateWithoutOpcionInput, PreguntaUncheckedCreateWithoutOpcionInput>
  }

  export type RespuestaAlumnoCreateWithoutOpcionInput = {
    created_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutRespuestaAlumnoInput
    Pregunta: PreguntaCreateNestedOneWithoutRespuestaAlumnoInput
  }

  export type RespuestaAlumnoUncheckedCreateWithoutOpcionInput = {
    id?: number
    created_at?: Date | string
    alumnoId: number
    preguntaId: number
  }

  export type RespuestaAlumnoCreateOrConnectWithoutOpcionInput = {
    where: RespuestaAlumnoWhereUniqueInput
    create: XOR<RespuestaAlumnoCreateWithoutOpcionInput, RespuestaAlumnoUncheckedCreateWithoutOpcionInput>
  }

  export type RespuestaAlumnoCreateManyOpcionInputEnvelope = {
    data: RespuestaAlumnoCreateManyOpcionInput | RespuestaAlumnoCreateManyOpcionInput[]
    skipDuplicates?: boolean
  }

  export type PreguntaUpsertWithoutOpcionInput = {
    update: XOR<PreguntaUpdateWithoutOpcionInput, PreguntaUncheckedUpdateWithoutOpcionInput>
    create: XOR<PreguntaCreateWithoutOpcionInput, PreguntaUncheckedCreateWithoutOpcionInput>
    where?: PreguntaWhereInput
  }

  export type PreguntaUpdateToOneWithWhereWithoutOpcionInput = {
    where?: PreguntaWhereInput
    data: XOR<PreguntaUpdateWithoutOpcionInput, PreguntaUncheckedUpdateWithoutOpcionInput>
  }

  export type PreguntaUpdateWithoutOpcionInput = {
    texto?: StringFieldUpdateOperationsInput | string
    Evaluacion?: EvaluacionUpdateOneRequiredWithoutPreguntaNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutPreguntaNestedInput
  }

  export type PreguntaUncheckedUpdateWithoutOpcionInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    evaluacionId?: IntFieldUpdateOperationsInput | number
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutPreguntaNestedInput
  }

  export type RespuestaAlumnoUpsertWithWhereUniqueWithoutOpcionInput = {
    where: RespuestaAlumnoWhereUniqueInput
    update: XOR<RespuestaAlumnoUpdateWithoutOpcionInput, RespuestaAlumnoUncheckedUpdateWithoutOpcionInput>
    create: XOR<RespuestaAlumnoCreateWithoutOpcionInput, RespuestaAlumnoUncheckedCreateWithoutOpcionInput>
  }

  export type RespuestaAlumnoUpdateWithWhereUniqueWithoutOpcionInput = {
    where: RespuestaAlumnoWhereUniqueInput
    data: XOR<RespuestaAlumnoUpdateWithoutOpcionInput, RespuestaAlumnoUncheckedUpdateWithoutOpcionInput>
  }

  export type RespuestaAlumnoUpdateManyWithWhereWithoutOpcionInput = {
    where: RespuestaAlumnoScalarWhereInput
    data: XOR<RespuestaAlumnoUpdateManyMutationInput, RespuestaAlumnoUncheckedUpdateManyWithoutOpcionInput>
  }

  export type CatedraAlumnoCreateWithoutPagoInput = {
    assignedAt?: Date | string
    assignedBy: string
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutCatedraAlumnoInput
    Catedra: CatedraCreateNestedOneWithoutCatedraAlumnoInput
    Composer?: ComposerCreateNestedOneWithoutCatedraAlumnoInput
  }

  export type CatedraAlumnoUncheckedCreateWithoutPagoInput = {
    catedraId: number
    alumnoId?: number | null
    assignedAt?: Date | string
    assignedBy: string
    composerId?: number | null
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
  }

  export type CatedraAlumnoCreateOrConnectWithoutPagoInput = {
    where: CatedraAlumnoWhereUniqueInput
    create: XOR<CatedraAlumnoCreateWithoutPagoInput, CatedraAlumnoUncheckedCreateWithoutPagoInput>
  }

  export type DocenteCreateWithoutPagoInput = {
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUncheckedCreateWithoutPagoInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraUncheckedCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type DocenteCreateOrConnectWithoutPagoInput = {
    where: DocenteWhereUniqueInput
    create: XOR<DocenteCreateWithoutPagoInput, DocenteUncheckedCreateWithoutPagoInput>
  }

  export type CatedraAlumnoUpsertWithoutPagoInput = {
    update: XOR<CatedraAlumnoUpdateWithoutPagoInput, CatedraAlumnoUncheckedUpdateWithoutPagoInput>
    create: XOR<CatedraAlumnoCreateWithoutPagoInput, CatedraAlumnoUncheckedCreateWithoutPagoInput>
    where?: CatedraAlumnoWhereInput
  }

  export type CatedraAlumnoUpdateToOneWithWhereWithoutPagoInput = {
    where?: CatedraAlumnoWhereInput
    data: XOR<CatedraAlumnoUpdateWithoutPagoInput, CatedraAlumnoUncheckedUpdateWithoutPagoInput>
  }

  export type CatedraAlumnoUpdateWithoutPagoInput = {
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutCatedraAlumnoNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutCatedraAlumnoNestedInput
    Composer?: ComposerUpdateOneWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateWithoutPagoInput = {
    catedraId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    composerId?: NullableIntFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DocenteUpsertWithoutPagoInput = {
    update: XOR<DocenteUpdateWithoutPagoInput, DocenteUncheckedUpdateWithoutPagoInput>
    create: XOR<DocenteCreateWithoutPagoInput, DocenteUncheckedCreateWithoutPagoInput>
    where?: DocenteWhereInput
  }

  export type DocenteUpdateToOneWithWhereWithoutPagoInput = {
    where?: DocenteWhereInput
    data: XOR<DocenteUpdateWithoutPagoInput, DocenteUncheckedUpdateWithoutPagoInput>
  }

  export type DocenteUpdateWithoutPagoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteUncheckedUpdateWithoutPagoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUncheckedUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type CatedraCreateWithoutPlanDeClasesInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutPlanDeClasesInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutPlanDeClasesInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutPlanDeClasesInput, CatedraUncheckedCreateWithoutPlanDeClasesInput>
  }

  export type DocenteCreateWithoutPlanDeClasesInput = {
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutDocenteInput
    Pago?: PagoCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUncheckedCreateWithoutPlanDeClasesInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraUncheckedCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutDocenteInput
    Pago?: PagoUncheckedCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type DocenteCreateOrConnectWithoutPlanDeClasesInput = {
    where: DocenteWhereUniqueInput
    create: XOR<DocenteCreateWithoutPlanDeClasesInput, DocenteUncheckedCreateWithoutPlanDeClasesInput>
  }

  export type UnidadPlanCreateWithoutPlanDeClasesInput = {
    periodo: string
    contenido: string
    capacidades: string
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: string
    mediosVerificacionEvaluacion: string
    recursos?: UnidadPlanCreaterecursosInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UnidadPlanUncheckedCreateWithoutPlanDeClasesInput = {
    id?: number
    periodo: string
    contenido: string
    capacidades: string
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: string
    mediosVerificacionEvaluacion: string
    recursos?: UnidadPlanCreaterecursosInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UnidadPlanCreateOrConnectWithoutPlanDeClasesInput = {
    where: UnidadPlanWhereUniqueInput
    create: XOR<UnidadPlanCreateWithoutPlanDeClasesInput, UnidadPlanUncheckedCreateWithoutPlanDeClasesInput>
  }

  export type UnidadPlanCreateManyPlanDeClasesInputEnvelope = {
    data: UnidadPlanCreateManyPlanDeClasesInput | UnidadPlanCreateManyPlanDeClasesInput[]
    skipDuplicates?: boolean
  }

  export type CatedraUpsertWithoutPlanDeClasesInput = {
    update: XOR<CatedraUpdateWithoutPlanDeClasesInput, CatedraUncheckedUpdateWithoutPlanDeClasesInput>
    create: XOR<CatedraCreateWithoutPlanDeClasesInput, CatedraUncheckedCreateWithoutPlanDeClasesInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutPlanDeClasesInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutPlanDeClasesInput, CatedraUncheckedUpdateWithoutPlanDeClasesInput>
  }

  export type CatedraUpdateWithoutPlanDeClasesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutPlanDeClasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type DocenteUpsertWithoutPlanDeClasesInput = {
    update: XOR<DocenteUpdateWithoutPlanDeClasesInput, DocenteUncheckedUpdateWithoutPlanDeClasesInput>
    create: XOR<DocenteCreateWithoutPlanDeClasesInput, DocenteUncheckedCreateWithoutPlanDeClasesInput>
    where?: DocenteWhereInput
  }

  export type DocenteUpdateToOneWithWhereWithoutPlanDeClasesInput = {
    where?: DocenteWhereInput
    data: XOR<DocenteUpdateWithoutPlanDeClasesInput, DocenteUncheckedUpdateWithoutPlanDeClasesInput>
  }

  export type DocenteUpdateWithoutPlanDeClasesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteUncheckedUpdateWithoutPlanDeClasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUncheckedUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUncheckedUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type UnidadPlanUpsertWithWhereUniqueWithoutPlanDeClasesInput = {
    where: UnidadPlanWhereUniqueInput
    update: XOR<UnidadPlanUpdateWithoutPlanDeClasesInput, UnidadPlanUncheckedUpdateWithoutPlanDeClasesInput>
    create: XOR<UnidadPlanCreateWithoutPlanDeClasesInput, UnidadPlanUncheckedCreateWithoutPlanDeClasesInput>
  }

  export type UnidadPlanUpdateWithWhereUniqueWithoutPlanDeClasesInput = {
    where: UnidadPlanWhereUniqueInput
    data: XOR<UnidadPlanUpdateWithoutPlanDeClasesInput, UnidadPlanUncheckedUpdateWithoutPlanDeClasesInput>
  }

  export type UnidadPlanUpdateManyWithWhereWithoutPlanDeClasesInput = {
    where: UnidadPlanScalarWhereInput
    data: XOR<UnidadPlanUpdateManyMutationInput, UnidadPlanUncheckedUpdateManyWithoutPlanDeClasesInput>
  }

  export type UnidadPlanScalarWhereInput = {
    AND?: UnidadPlanScalarWhereInput | UnidadPlanScalarWhereInput[]
    OR?: UnidadPlanScalarWhereInput[]
    NOT?: UnidadPlanScalarWhereInput | UnidadPlanScalarWhereInput[]
    id?: IntFilter<"UnidadPlan"> | number
    planDeClasesId?: IntFilter<"UnidadPlan"> | number
    periodo?: StringFilter<"UnidadPlan"> | string
    contenido?: StringFilter<"UnidadPlan"> | string
    capacidades?: StringFilter<"UnidadPlan"> | string
    horasTeoricas?: IntFilter<"UnidadPlan"> | number
    horasPracticas?: IntFilter<"UnidadPlan"> | number
    estrategiasMetodologicas?: StringFilter<"UnidadPlan"> | string
    mediosVerificacionEvaluacion?: StringFilter<"UnidadPlan"> | string
    recursos?: StringNullableListFilter<"UnidadPlan">
    created_at?: DateTimeFilter<"UnidadPlan"> | Date | string
    updated_at?: DateTimeFilter<"UnidadPlan"> | Date | string
  }

  export type OpcionCreateWithoutPreguntaInput = {
    texto: string
    es_correcta?: boolean
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutOpcionInput
  }

  export type OpcionUncheckedCreateWithoutPreguntaInput = {
    id?: number
    texto: string
    es_correcta?: boolean
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutOpcionInput
  }

  export type OpcionCreateOrConnectWithoutPreguntaInput = {
    where: OpcionWhereUniqueInput
    create: XOR<OpcionCreateWithoutPreguntaInput, OpcionUncheckedCreateWithoutPreguntaInput>
  }

  export type OpcionCreateManyPreguntaInputEnvelope = {
    data: OpcionCreateManyPreguntaInput | OpcionCreateManyPreguntaInput[]
    skipDuplicates?: boolean
  }

  export type EvaluacionCreateWithoutPreguntaInput = {
    titulo: string
    created_at?: Date | string
    fecha_limite?: Date | string | null
    isMaster?: boolean
    Catedra: CatedraCreateNestedOneWithoutEvaluacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutPreguntaInput = {
    id?: number
    titulo: string
    created_at?: Date | string
    catedraId: number
    fecha_limite?: Date | string | null
    isMaster?: boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutEvaluacionInput
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutPreguntaInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutPreguntaInput, EvaluacionUncheckedCreateWithoutPreguntaInput>
  }

  export type RespuestaAlumnoCreateWithoutPreguntaInput = {
    created_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutRespuestaAlumnoInput
    Opcion: OpcionCreateNestedOneWithoutRespuestaAlumnoInput
  }

  export type RespuestaAlumnoUncheckedCreateWithoutPreguntaInput = {
    id?: number
    created_at?: Date | string
    alumnoId: number
    opcionElegidaId: number
  }

  export type RespuestaAlumnoCreateOrConnectWithoutPreguntaInput = {
    where: RespuestaAlumnoWhereUniqueInput
    create: XOR<RespuestaAlumnoCreateWithoutPreguntaInput, RespuestaAlumnoUncheckedCreateWithoutPreguntaInput>
  }

  export type RespuestaAlumnoCreateManyPreguntaInputEnvelope = {
    data: RespuestaAlumnoCreateManyPreguntaInput | RespuestaAlumnoCreateManyPreguntaInput[]
    skipDuplicates?: boolean
  }

  export type OpcionUpsertWithWhereUniqueWithoutPreguntaInput = {
    where: OpcionWhereUniqueInput
    update: XOR<OpcionUpdateWithoutPreguntaInput, OpcionUncheckedUpdateWithoutPreguntaInput>
    create: XOR<OpcionCreateWithoutPreguntaInput, OpcionUncheckedCreateWithoutPreguntaInput>
  }

  export type OpcionUpdateWithWhereUniqueWithoutPreguntaInput = {
    where: OpcionWhereUniqueInput
    data: XOR<OpcionUpdateWithoutPreguntaInput, OpcionUncheckedUpdateWithoutPreguntaInput>
  }

  export type OpcionUpdateManyWithWhereWithoutPreguntaInput = {
    where: OpcionScalarWhereInput
    data: XOR<OpcionUpdateManyMutationInput, OpcionUncheckedUpdateManyWithoutPreguntaInput>
  }

  export type OpcionScalarWhereInput = {
    AND?: OpcionScalarWhereInput | OpcionScalarWhereInput[]
    OR?: OpcionScalarWhereInput[]
    NOT?: OpcionScalarWhereInput | OpcionScalarWhereInput[]
    id?: IntFilter<"Opcion"> | number
    texto?: StringFilter<"Opcion"> | string
    es_correcta?: BoolFilter<"Opcion"> | boolean
    preguntaId?: IntFilter<"Opcion"> | number
  }

  export type EvaluacionUpsertWithoutPreguntaInput = {
    update: XOR<EvaluacionUpdateWithoutPreguntaInput, EvaluacionUncheckedUpdateWithoutPreguntaInput>
    create: XOR<EvaluacionCreateWithoutPreguntaInput, EvaluacionUncheckedCreateWithoutPreguntaInput>
    where?: EvaluacionWhereInput
  }

  export type EvaluacionUpdateToOneWithWhereWithoutPreguntaInput = {
    where?: EvaluacionWhereInput
    data: XOR<EvaluacionUpdateWithoutPreguntaInput, EvaluacionUncheckedUpdateWithoutPreguntaInput>
  }

  export type EvaluacionUpdateWithoutPreguntaInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    Catedra?: CatedraUpdateOneRequiredWithoutEvaluacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutPreguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type RespuestaAlumnoUpsertWithWhereUniqueWithoutPreguntaInput = {
    where: RespuestaAlumnoWhereUniqueInput
    update: XOR<RespuestaAlumnoUpdateWithoutPreguntaInput, RespuestaAlumnoUncheckedUpdateWithoutPreguntaInput>
    create: XOR<RespuestaAlumnoCreateWithoutPreguntaInput, RespuestaAlumnoUncheckedCreateWithoutPreguntaInput>
  }

  export type RespuestaAlumnoUpdateWithWhereUniqueWithoutPreguntaInput = {
    where: RespuestaAlumnoWhereUniqueInput
    data: XOR<RespuestaAlumnoUpdateWithoutPreguntaInput, RespuestaAlumnoUncheckedUpdateWithoutPreguntaInput>
  }

  export type RespuestaAlumnoUpdateManyWithWhereWithoutPreguntaInput = {
    where: RespuestaAlumnoScalarWhereInput
    data: XOR<RespuestaAlumnoUpdateManyMutationInput, RespuestaAlumnoUncheckedUpdateManyWithoutPreguntaInput>
  }

  export type ComentarioPublicacionCreateWithoutPublicacionInput = {
    texto: string
    created_at?: Date | string
    updated_at?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutComentarioPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutComentarioPublicacionInput
  }

  export type ComentarioPublicacionUncheckedCreateWithoutPublicacionInput = {
    id?: number
    texto: string
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ComentarioPublicacionCreateOrConnectWithoutPublicacionInput = {
    where: ComentarioPublicacionWhereUniqueInput
    create: XOR<ComentarioPublicacionCreateWithoutPublicacionInput, ComentarioPublicacionUncheckedCreateWithoutPublicacionInput>
  }

  export type ComentarioPublicacionCreateManyPublicacionInputEnvelope = {
    data: ComentarioPublicacionCreateManyPublicacionInput | ComentarioPublicacionCreateManyPublicacionInput[]
    skipDuplicates?: boolean
  }

  export type AlumnoCreateWithoutPublicacionInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutPublicacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutPublicacionInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutPublicacionInput, AlumnoUncheckedCreateWithoutPublicacionInput>
  }

  export type DocenteCreateWithoutPublicacionInput = {
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutDocenteInput
    Pago?: PagoCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUncheckedCreateWithoutPublicacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraUncheckedCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutDocenteInput
    Pago?: PagoUncheckedCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutDocenteInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type DocenteCreateOrConnectWithoutPublicacionInput = {
    where: DocenteWhereUniqueInput
    create: XOR<DocenteCreateWithoutPublicacionInput, DocenteUncheckedCreateWithoutPublicacionInput>
  }

  export type CatedraCreateWithoutPublicacionInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutPublicacionInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutPublicacionInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutPublicacionInput, CatedraUncheckedCreateWithoutPublicacionInput>
  }

  export type EvaluacionAsignacionCreateWithoutPublicacionInput = {
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
    Alumno: AlumnoCreateNestedOneWithoutEvaluacionAsignacionInput
    Evaluacion: EvaluacionCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionUncheckedCreateWithoutPublicacionInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    evaluacionId: number
    publicacionId?: number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedOneWithoutEvaluacionAsignacionInput
  }

  export type EvaluacionAsignacionCreateOrConnectWithoutPublicacionInput = {
    where: EvaluacionAsignacionWhereUniqueInput
    create: XOR<EvaluacionAsignacionCreateWithoutPublicacionInput, EvaluacionAsignacionUncheckedCreateWithoutPublicacionInput>
  }

  export type EvaluacionCreateWithoutPublicacionInput = {
    titulo: string
    created_at?: Date | string
    fecha_limite?: Date | string | null
    isMaster?: boolean
    Catedra: CatedraCreateNestedOneWithoutEvaluacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutEvaluacionInput
    Pregunta?: PreguntaCreateNestedManyWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutPublicacionInput = {
    id?: number
    titulo: string
    created_at?: Date | string
    catedraId: number
    fecha_limite?: Date | string | null
    isMaster?: boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutEvaluacionInput
    Pregunta?: PreguntaUncheckedCreateNestedManyWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutPublicacionInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutPublicacionInput, EvaluacionUncheckedCreateWithoutPublicacionInput>
  }

  export type TareaMaestraCreateWithoutPublicacionInput = {
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutTareaMaestraInput
    Catedra: CatedraCreateNestedOneWithoutTareaMaestraInput
  }

  export type TareaMaestraUncheckedCreateWithoutPublicacionInput = {
    id?: number
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    catedraId: number
    publicacionId?: number | null
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutTareaMaestraInput
  }

  export type TareaMaestraCreateOrConnectWithoutPublicacionInput = {
    where: TareaMaestraWhereUniqueInput
    create: XOR<TareaMaestraCreateWithoutPublicacionInput, TareaMaestraUncheckedCreateWithoutPublicacionInput>
  }

  export type PublicacionInteraccionCreateWithoutPublicacionInput = {
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInteraccionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInteraccionInput
  }

  export type PublicacionInteraccionUncheckedCreateWithoutPublicacionInput = {
    id?: number
    alumnoId?: number | null
    docenteId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type PublicacionInteraccionCreateOrConnectWithoutPublicacionInput = {
    where: PublicacionInteraccionWhereUniqueInput
    create: XOR<PublicacionInteraccionCreateWithoutPublicacionInput, PublicacionInteraccionUncheckedCreateWithoutPublicacionInput>
  }

  export type PublicacionInteraccionCreateManyPublicacionInputEnvelope = {
    data: PublicacionInteraccionCreateManyPublicacionInput | PublicacionInteraccionCreateManyPublicacionInput[]
    skipDuplicates?: boolean
  }

  export type ComentarioPublicacionUpsertWithWhereUniqueWithoutPublicacionInput = {
    where: ComentarioPublicacionWhereUniqueInput
    update: XOR<ComentarioPublicacionUpdateWithoutPublicacionInput, ComentarioPublicacionUncheckedUpdateWithoutPublicacionInput>
    create: XOR<ComentarioPublicacionCreateWithoutPublicacionInput, ComentarioPublicacionUncheckedCreateWithoutPublicacionInput>
  }

  export type ComentarioPublicacionUpdateWithWhereUniqueWithoutPublicacionInput = {
    where: ComentarioPublicacionWhereUniqueInput
    data: XOR<ComentarioPublicacionUpdateWithoutPublicacionInput, ComentarioPublicacionUncheckedUpdateWithoutPublicacionInput>
  }

  export type ComentarioPublicacionUpdateManyWithWhereWithoutPublicacionInput = {
    where: ComentarioPublicacionScalarWhereInput
    data: XOR<ComentarioPublicacionUpdateManyMutationInput, ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionInput>
  }

  export type AlumnoUpsertWithoutPublicacionInput = {
    update: XOR<AlumnoUpdateWithoutPublicacionInput, AlumnoUncheckedUpdateWithoutPublicacionInput>
    create: XOR<AlumnoCreateWithoutPublicacionInput, AlumnoUncheckedCreateWithoutPublicacionInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutPublicacionInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutPublicacionInput, AlumnoUncheckedUpdateWithoutPublicacionInput>
  }

  export type AlumnoUpdateWithoutPublicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type DocenteUpsertWithoutPublicacionInput = {
    update: XOR<DocenteUpdateWithoutPublicacionInput, DocenteUncheckedUpdateWithoutPublicacionInput>
    create: XOR<DocenteCreateWithoutPublicacionInput, DocenteUncheckedCreateWithoutPublicacionInput>
    where?: DocenteWhereInput
  }

  export type DocenteUpdateToOneWithWhereWithoutPublicacionInput = {
    where?: DocenteWhereInput
    data: XOR<DocenteUpdateWithoutPublicacionInput, DocenteUncheckedUpdateWithoutPublicacionInput>
  }

  export type DocenteUpdateWithoutPublicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUncheckedUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUncheckedUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutDocenteNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type CatedraUpsertWithoutPublicacionInput = {
    update: XOR<CatedraUpdateWithoutPublicacionInput, CatedraUncheckedUpdateWithoutPublicacionInput>
    create: XOR<CatedraCreateWithoutPublicacionInput, CatedraUncheckedCreateWithoutPublicacionInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutPublicacionInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutPublicacionInput, CatedraUncheckedUpdateWithoutPublicacionInput>
  }

  export type CatedraUpdateWithoutPublicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type EvaluacionAsignacionUpsertWithoutPublicacionInput = {
    update: XOR<EvaluacionAsignacionUpdateWithoutPublicacionInput, EvaluacionAsignacionUncheckedUpdateWithoutPublicacionInput>
    create: XOR<EvaluacionAsignacionCreateWithoutPublicacionInput, EvaluacionAsignacionUncheckedCreateWithoutPublicacionInput>
    where?: EvaluacionAsignacionWhereInput
  }

  export type EvaluacionAsignacionUpdateToOneWithWhereWithoutPublicacionInput = {
    where?: EvaluacionAsignacionWhereInput
    data: XOR<EvaluacionAsignacionUpdateWithoutPublicacionInput, EvaluacionAsignacionUncheckedUpdateWithoutPublicacionInput>
  }

  export type EvaluacionAsignacionUpdateWithoutPublicacionInput = {
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateOneWithoutEvaluacionAsignacionNestedInput
    Alumno?: AlumnoUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
    Evaluacion?: EvaluacionUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    evaluacionId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionUpsertWithoutPublicacionInput = {
    update: XOR<EvaluacionUpdateWithoutPublicacionInput, EvaluacionUncheckedUpdateWithoutPublicacionInput>
    create: XOR<EvaluacionCreateWithoutPublicacionInput, EvaluacionUncheckedCreateWithoutPublicacionInput>
    where?: EvaluacionWhereInput
  }

  export type EvaluacionUpdateToOneWithWhereWithoutPublicacionInput = {
    where?: EvaluacionWhereInput
    data: XOR<EvaluacionUpdateWithoutPublicacionInput, EvaluacionUncheckedUpdateWithoutPublicacionInput>
  }

  export type EvaluacionUpdateWithoutPublicacionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    Catedra?: CatedraUpdateOneRequiredWithoutEvaluacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutEvaluacionNestedInput
    Pregunta?: PreguntaUpdateManyWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    Pregunta?: PreguntaUncheckedUpdateManyWithoutEvaluacionNestedInput
  }

  export type TareaMaestraUpsertWithoutPublicacionInput = {
    update: XOR<TareaMaestraUpdateWithoutPublicacionInput, TareaMaestraUncheckedUpdateWithoutPublicacionInput>
    create: XOR<TareaMaestraCreateWithoutPublicacionInput, TareaMaestraUncheckedCreateWithoutPublicacionInput>
    where?: TareaMaestraWhereInput
  }

  export type TareaMaestraUpdateToOneWithWhereWithoutPublicacionInput = {
    where?: TareaMaestraWhereInput
    data: XOR<TareaMaestraUpdateWithoutPublicacionInput, TareaMaestraUncheckedUpdateWithoutPublicacionInput>
  }

  export type TareaMaestraUpdateWithoutPublicacionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutTareaMaestraNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutTareaMaestraNestedInput
  }

  export type TareaMaestraUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutTareaMaestraNestedInput
  }

  export type PublicacionInteraccionUpsertWithWhereUniqueWithoutPublicacionInput = {
    where: PublicacionInteraccionWhereUniqueInput
    update: XOR<PublicacionInteraccionUpdateWithoutPublicacionInput, PublicacionInteraccionUncheckedUpdateWithoutPublicacionInput>
    create: XOR<PublicacionInteraccionCreateWithoutPublicacionInput, PublicacionInteraccionUncheckedCreateWithoutPublicacionInput>
  }

  export type PublicacionInteraccionUpdateWithWhereUniqueWithoutPublicacionInput = {
    where: PublicacionInteraccionWhereUniqueInput
    data: XOR<PublicacionInteraccionUpdateWithoutPublicacionInput, PublicacionInteraccionUncheckedUpdateWithoutPublicacionInput>
  }

  export type PublicacionInteraccionUpdateManyWithWhereWithoutPublicacionInput = {
    where: PublicacionInteraccionScalarWhereInput
    data: XOR<PublicacionInteraccionUpdateManyMutationInput, PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionInput>
  }

  export type AlumnoCreateWithoutPublicacionInteraccionInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutPublicacionInteraccionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutPublicacionInteraccionInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutPublicacionInteraccionInput, AlumnoUncheckedCreateWithoutPublicacionInteraccionInput>
  }

  export type DocenteCreateWithoutPublicacionInteraccionInput = {
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutDocenteInput
    Pago?: PagoCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionCreateNestedManyWithoutDocenteInput
  }

  export type DocenteUncheckedCreateWithoutPublicacionInteraccionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    otpSecret?: string | null
    otpEnabled?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    direccion?: string | null
    telefono?: string | null
    Catedra?: CatedraUncheckedCreateNestedManyWithoutDocenteInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutDocenteInput
    Pago?: PagoUncheckedCreateNestedManyWithoutDocenteInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutDocenteInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type DocenteCreateOrConnectWithoutPublicacionInteraccionInput = {
    where: DocenteWhereUniqueInput
    create: XOR<DocenteCreateWithoutPublicacionInteraccionInput, DocenteUncheckedCreateWithoutPublicacionInteraccionInput>
  }

  export type PublicacionCreateWithoutPublicacionInteraccionInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    TareaMaestra?: TareaMaestraCreateNestedOneWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutPublicacionInteraccionInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutPublicacionInteraccionInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutPublicacionInteraccionInput, PublicacionUncheckedCreateWithoutPublicacionInteraccionInput>
  }

  export type AlumnoUpsertWithoutPublicacionInteraccionInput = {
    update: XOR<AlumnoUpdateWithoutPublicacionInteraccionInput, AlumnoUncheckedUpdateWithoutPublicacionInteraccionInput>
    create: XOR<AlumnoCreateWithoutPublicacionInteraccionInput, AlumnoUncheckedCreateWithoutPublicacionInteraccionInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutPublicacionInteraccionInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutPublicacionInteraccionInput, AlumnoUncheckedUpdateWithoutPublicacionInteraccionInput>
  }

  export type AlumnoUpdateWithoutPublicacionInteraccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutPublicacionInteraccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type DocenteUpsertWithoutPublicacionInteraccionInput = {
    update: XOR<DocenteUpdateWithoutPublicacionInteraccionInput, DocenteUncheckedUpdateWithoutPublicacionInteraccionInput>
    create: XOR<DocenteCreateWithoutPublicacionInteraccionInput, DocenteUncheckedCreateWithoutPublicacionInteraccionInput>
    where?: DocenteWhereInput
  }

  export type DocenteUpdateToOneWithWhereWithoutPublicacionInteraccionInput = {
    where?: DocenteWhereInput
    data: XOR<DocenteUpdateWithoutPublicacionInteraccionInput, DocenteUncheckedUpdateWithoutPublicacionInteraccionInput>
  }

  export type DocenteUpdateWithoutPublicacionInteraccionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUpdateManyWithoutDocenteNestedInput
  }

  export type DocenteUncheckedUpdateWithoutPublicacionInteraccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    otpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    otpEnabled?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    Catedra?: CatedraUncheckedUpdateManyWithoutDocenteNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutDocenteNestedInput
    Pago?: PagoUncheckedUpdateManyWithoutDocenteNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutDocenteNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type PublicacionUpsertWithoutPublicacionInteraccionInput = {
    update: XOR<PublicacionUpdateWithoutPublicacionInteraccionInput, PublicacionUncheckedUpdateWithoutPublicacionInteraccionInput>
    create: XOR<PublicacionCreateWithoutPublicacionInteraccionInput, PublicacionUncheckedCreateWithoutPublicacionInteraccionInput>
    where?: PublicacionWhereInput
  }

  export type PublicacionUpdateToOneWithWhereWithoutPublicacionInteraccionInput = {
    where?: PublicacionWhereInput
    data: XOR<PublicacionUpdateWithoutPublicacionInteraccionInput, PublicacionUncheckedUpdateWithoutPublicacionInteraccionInput>
  }

  export type PublicacionUpdateWithoutPublicacionInteraccionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutPublicacionInteraccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type AlumnoCreateWithoutPuntuacionInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutPuntuacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutPuntuacionInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutPuntuacionInput, AlumnoUncheckedCreateWithoutPuntuacionInput>
  }

  export type CatedraCreateWithoutPuntuacionInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutPuntuacionInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    TareaMaestra?: TareaMaestraUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutPuntuacionInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutPuntuacionInput, CatedraUncheckedCreateWithoutPuntuacionInput>
  }

  export type AlumnoUpsertWithoutPuntuacionInput = {
    update: XOR<AlumnoUpdateWithoutPuntuacionInput, AlumnoUncheckedUpdateWithoutPuntuacionInput>
    create: XOR<AlumnoCreateWithoutPuntuacionInput, AlumnoUncheckedCreateWithoutPuntuacionInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutPuntuacionInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutPuntuacionInput, AlumnoUncheckedUpdateWithoutPuntuacionInput>
  }

  export type AlumnoUpdateWithoutPuntuacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutPuntuacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type CatedraUpsertWithoutPuntuacionInput = {
    update: XOR<CatedraUpdateWithoutPuntuacionInput, CatedraUncheckedUpdateWithoutPuntuacionInput>
    create: XOR<CatedraCreateWithoutPuntuacionInput, CatedraUncheckedCreateWithoutPuntuacionInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutPuntuacionInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutPuntuacionInput, CatedraUncheckedUpdateWithoutPuntuacionInput>
  }

  export type CatedraUpdateWithoutPuntuacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutPuntuacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type AlumnoCreateWithoutRespuestaAlumnoInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutRespuestaAlumnoInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    TareaAsignacion?: TareaAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutRespuestaAlumnoInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutRespuestaAlumnoInput, AlumnoUncheckedCreateWithoutRespuestaAlumnoInput>
  }

  export type OpcionCreateWithoutRespuestaAlumnoInput = {
    texto: string
    es_correcta?: boolean
    Pregunta: PreguntaCreateNestedOneWithoutOpcionInput
  }

  export type OpcionUncheckedCreateWithoutRespuestaAlumnoInput = {
    id?: number
    texto: string
    es_correcta?: boolean
    preguntaId: number
  }

  export type OpcionCreateOrConnectWithoutRespuestaAlumnoInput = {
    where: OpcionWhereUniqueInput
    create: XOR<OpcionCreateWithoutRespuestaAlumnoInput, OpcionUncheckedCreateWithoutRespuestaAlumnoInput>
  }

  export type PreguntaCreateWithoutRespuestaAlumnoInput = {
    texto: string
    Opcion?: OpcionCreateNestedManyWithoutPreguntaInput
    Evaluacion: EvaluacionCreateNestedOneWithoutPreguntaInput
  }

  export type PreguntaUncheckedCreateWithoutRespuestaAlumnoInput = {
    id?: number
    texto: string
    evaluacionId: number
    Opcion?: OpcionUncheckedCreateNestedManyWithoutPreguntaInput
  }

  export type PreguntaCreateOrConnectWithoutRespuestaAlumnoInput = {
    where: PreguntaWhereUniqueInput
    create: XOR<PreguntaCreateWithoutRespuestaAlumnoInput, PreguntaUncheckedCreateWithoutRespuestaAlumnoInput>
  }

  export type AlumnoUpsertWithoutRespuestaAlumnoInput = {
    update: XOR<AlumnoUpdateWithoutRespuestaAlumnoInput, AlumnoUncheckedUpdateWithoutRespuestaAlumnoInput>
    create: XOR<AlumnoCreateWithoutRespuestaAlumnoInput, AlumnoUncheckedCreateWithoutRespuestaAlumnoInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutRespuestaAlumnoInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutRespuestaAlumnoInput, AlumnoUncheckedUpdateWithoutRespuestaAlumnoInput>
  }

  export type AlumnoUpdateWithoutRespuestaAlumnoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutRespuestaAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type OpcionUpsertWithoutRespuestaAlumnoInput = {
    update: XOR<OpcionUpdateWithoutRespuestaAlumnoInput, OpcionUncheckedUpdateWithoutRespuestaAlumnoInput>
    create: XOR<OpcionCreateWithoutRespuestaAlumnoInput, OpcionUncheckedCreateWithoutRespuestaAlumnoInput>
    where?: OpcionWhereInput
  }

  export type OpcionUpdateToOneWithWhereWithoutRespuestaAlumnoInput = {
    where?: OpcionWhereInput
    data: XOR<OpcionUpdateWithoutRespuestaAlumnoInput, OpcionUncheckedUpdateWithoutRespuestaAlumnoInput>
  }

  export type OpcionUpdateWithoutRespuestaAlumnoInput = {
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    Pregunta?: PreguntaUpdateOneRequiredWithoutOpcionNestedInput
  }

  export type OpcionUncheckedUpdateWithoutRespuestaAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    preguntaId?: IntFieldUpdateOperationsInput | number
  }

  export type PreguntaUpsertWithoutRespuestaAlumnoInput = {
    update: XOR<PreguntaUpdateWithoutRespuestaAlumnoInput, PreguntaUncheckedUpdateWithoutRespuestaAlumnoInput>
    create: XOR<PreguntaCreateWithoutRespuestaAlumnoInput, PreguntaUncheckedCreateWithoutRespuestaAlumnoInput>
    where?: PreguntaWhereInput
  }

  export type PreguntaUpdateToOneWithWhereWithoutRespuestaAlumnoInput = {
    where?: PreguntaWhereInput
    data: XOR<PreguntaUpdateWithoutRespuestaAlumnoInput, PreguntaUncheckedUpdateWithoutRespuestaAlumnoInput>
  }

  export type PreguntaUpdateWithoutRespuestaAlumnoInput = {
    texto?: StringFieldUpdateOperationsInput | string
    Opcion?: OpcionUpdateManyWithoutPreguntaNestedInput
    Evaluacion?: EvaluacionUpdateOneRequiredWithoutPreguntaNestedInput
  }

  export type PreguntaUncheckedUpdateWithoutRespuestaAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    evaluacionId?: IntFieldUpdateOperationsInput | number
    Opcion?: OpcionUncheckedUpdateManyWithoutPreguntaNestedInput
  }

  export type AlumnoCreateWithoutTareaAsignacionInput = {
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoUncheckedCreateWithoutTareaAsignacionInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    telefono?: string | null
    direccion?: string | null
    instrumento?: string | null
    detalles_adicionales?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    nombre_tutor?: string | null
    telefono_tutor?: string | null
    vive_con_padres?: boolean | null
    Asistencia?: AsistenciaUncheckedCreateNestedManyWithoutAlumnoInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedCreateNestedManyWithoutAlumnoInput
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedCreateNestedManyWithoutAlumnoInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutAlumnoInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutAlumnoInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutAlumnoInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedCreateNestedManyWithoutAlumnoInput
  }

  export type AlumnoCreateOrConnectWithoutTareaAsignacionInput = {
    where: AlumnoWhereUniqueInput
    create: XOR<AlumnoCreateWithoutTareaAsignacionInput, AlumnoUncheckedCreateWithoutTareaAsignacionInput>
  }

  export type TareaMaestraCreateWithoutTareaAsignacionInput = {
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
    Publicacion?: PublicacionCreateNestedOneWithoutTareaMaestraInput
    Catedra: CatedraCreateNestedOneWithoutTareaMaestraInput
  }

  export type TareaMaestraUncheckedCreateWithoutTareaAsignacionInput = {
    id?: number
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    catedraId: number
    publicacionId?: number | null
    Publicacion?: PublicacionUncheckedCreateNestedOneWithoutTareaMaestraInput
  }

  export type TareaMaestraCreateOrConnectWithoutTareaAsignacionInput = {
    where: TareaMaestraWhereUniqueInput
    create: XOR<TareaMaestraCreateWithoutTareaAsignacionInput, TareaMaestraUncheckedCreateWithoutTareaAsignacionInput>
  }

  export type AlumnoUpsertWithoutTareaAsignacionInput = {
    update: XOR<AlumnoUpdateWithoutTareaAsignacionInput, AlumnoUncheckedUpdateWithoutTareaAsignacionInput>
    create: XOR<AlumnoCreateWithoutTareaAsignacionInput, AlumnoUncheckedCreateWithoutTareaAsignacionInput>
    where?: AlumnoWhereInput
  }

  export type AlumnoUpdateToOneWithWhereWithoutTareaAsignacionInput = {
    where?: AlumnoWhereInput
    data: XOR<AlumnoUpdateWithoutTareaAsignacionInput, AlumnoUncheckedUpdateWithoutTareaAsignacionInput>
  }

  export type AlumnoUpdateWithoutTareaAsignacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutAlumnoNestedInput
  }

  export type AlumnoUncheckedUpdateWithoutTareaAsignacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instrumento?: NullableStringFieldUpdateOperationsInput | string | null
    detalles_adicionales?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    nombre_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    telefono_tutor?: NullableStringFieldUpdateOperationsInput | string | null
    vive_con_padres?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutAlumnoNestedInput
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoNestedInput
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutAlumnoNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutAlumnoNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoNestedInput
  }

  export type TareaMaestraUpsertWithoutTareaAsignacionInput = {
    update: XOR<TareaMaestraUpdateWithoutTareaAsignacionInput, TareaMaestraUncheckedUpdateWithoutTareaAsignacionInput>
    create: XOR<TareaMaestraCreateWithoutTareaAsignacionInput, TareaMaestraUncheckedCreateWithoutTareaAsignacionInput>
    where?: TareaMaestraWhereInput
  }

  export type TareaMaestraUpdateToOneWithWhereWithoutTareaAsignacionInput = {
    where?: TareaMaestraWhereInput
    data: XOR<TareaMaestraUpdateWithoutTareaAsignacionInput, TareaMaestraUncheckedUpdateWithoutTareaAsignacionInput>
  }

  export type TareaMaestraUpdateWithoutTareaAsignacionInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Publicacion?: PublicacionUpdateOneWithoutTareaMaestraNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutTareaMaestraNestedInput
  }

  export type TareaMaestraUncheckedUpdateWithoutTareaAsignacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Publicacion?: PublicacionUncheckedUpdateOneWithoutTareaMaestraNestedInput
  }

  export type PublicacionCreateWithoutTareaMaestraInput = {
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    ComentarioPublicacion?: ComentarioPublicacionCreateNestedManyWithoutPublicacionInput
    Alumno?: AlumnoCreateNestedOneWithoutPublicacionInput
    Docente?: DocenteCreateNestedOneWithoutPublicacionInput
    Catedra: CatedraCreateNestedOneWithoutPublicacionInput
    EvaluacionAsignacion?: EvaluacionAsignacionCreateNestedOneWithoutPublicacionInput
    Evaluacion?: EvaluacionCreateNestedOneWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionUncheckedCreateWithoutTareaMaestraInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionCreateOrConnectWithoutTareaMaestraInput = {
    where: PublicacionWhereUniqueInput
    create: XOR<PublicacionCreateWithoutTareaMaestraInput, PublicacionUncheckedCreateWithoutTareaMaestraInput>
  }

  export type TareaAsignacionCreateWithoutTareaMaestraInput = {
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    Alumno: AlumnoCreateNestedOneWithoutTareaAsignacionInput
  }

  export type TareaAsignacionUncheckedCreateWithoutTareaMaestraInput = {
    id?: number
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
  }

  export type TareaAsignacionCreateOrConnectWithoutTareaMaestraInput = {
    where: TareaAsignacionWhereUniqueInput
    create: XOR<TareaAsignacionCreateWithoutTareaMaestraInput, TareaAsignacionUncheckedCreateWithoutTareaMaestraInput>
  }

  export type TareaAsignacionCreateManyTareaMaestraInputEnvelope = {
    data: TareaAsignacionCreateManyTareaMaestraInput | TareaAsignacionCreateManyTareaMaestraInput[]
    skipDuplicates?: boolean
  }

  export type CatedraCreateWithoutTareaMaestraInput = {
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
    Docente?: DocenteCreateNestedOneWithoutCatedraInput
    CatedraAlumno?: CatedraAlumnoCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionCreateNestedManyWithoutCatedraInput
  }

  export type CatedraUncheckedCreateWithoutTareaMaestraInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    docenteId?: number | null
    modalidad_pago?: $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedCreateNestedManyWithoutCatedraInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedCreateNestedManyWithoutCatedraInput
    CostoCatedra?: CostoCatedraUncheckedCreateNestedOneWithoutCatedraInput
    DiaClase?: DiaClaseUncheckedCreateNestedManyWithoutCatedraInput
    Evaluacion?: EvaluacionUncheckedCreateNestedManyWithoutCatedraInput
    PlanDeClases?: PlanDeClasesUncheckedCreateNestedManyWithoutCatedraInput
    Publicacion?: PublicacionUncheckedCreateNestedManyWithoutCatedraInput
    Puntuacion?: PuntuacionUncheckedCreateNestedManyWithoutCatedraInput
  }

  export type CatedraCreateOrConnectWithoutTareaMaestraInput = {
    where: CatedraWhereUniqueInput
    create: XOR<CatedraCreateWithoutTareaMaestraInput, CatedraUncheckedCreateWithoutTareaMaestraInput>
  }

  export type PublicacionUpsertWithoutTareaMaestraInput = {
    update: XOR<PublicacionUpdateWithoutTareaMaestraInput, PublicacionUncheckedUpdateWithoutTareaMaestraInput>
    create: XOR<PublicacionCreateWithoutTareaMaestraInput, PublicacionUncheckedCreateWithoutTareaMaestraInput>
    where?: PublicacionWhereInput
  }

  export type PublicacionUpdateToOneWithWhereWithoutTareaMaestraInput = {
    where?: PublicacionWhereInput
    data: XOR<PublicacionUpdateWithoutTareaMaestraInput, PublicacionUncheckedUpdateWithoutTareaMaestraInput>
  }

  export type PublicacionUpdateWithoutTareaMaestraInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutTareaMaestraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type TareaAsignacionUpsertWithWhereUniqueWithoutTareaMaestraInput = {
    where: TareaAsignacionWhereUniqueInput
    update: XOR<TareaAsignacionUpdateWithoutTareaMaestraInput, TareaAsignacionUncheckedUpdateWithoutTareaMaestraInput>
    create: XOR<TareaAsignacionCreateWithoutTareaMaestraInput, TareaAsignacionUncheckedCreateWithoutTareaMaestraInput>
  }

  export type TareaAsignacionUpdateWithWhereUniqueWithoutTareaMaestraInput = {
    where: TareaAsignacionWhereUniqueInput
    data: XOR<TareaAsignacionUpdateWithoutTareaMaestraInput, TareaAsignacionUncheckedUpdateWithoutTareaMaestraInput>
  }

  export type TareaAsignacionUpdateManyWithWhereWithoutTareaMaestraInput = {
    where: TareaAsignacionScalarWhereInput
    data: XOR<TareaAsignacionUpdateManyMutationInput, TareaAsignacionUncheckedUpdateManyWithoutTareaMaestraInput>
  }

  export type CatedraUpsertWithoutTareaMaestraInput = {
    update: XOR<CatedraUpdateWithoutTareaMaestraInput, CatedraUncheckedUpdateWithoutTareaMaestraInput>
    create: XOR<CatedraCreateWithoutTareaMaestraInput, CatedraUncheckedCreateWithoutTareaMaestraInput>
    where?: CatedraWhereInput
  }

  export type CatedraUpdateToOneWithWhereWithoutTareaMaestraInput = {
    where?: CatedraWhereInput
    data: XOR<CatedraUpdateWithoutTareaMaestraInput, CatedraUncheckedUpdateWithoutTareaMaestraInput>
  }

  export type CatedraUpdateWithoutTareaMaestraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    Docente?: DocenteUpdateOneWithoutCatedraNestedInput
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutTareaMaestraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type PlanDeClasesCreateWithoutUnidadPlanInput = {
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    created_at?: Date | string
    updated_at?: Date | string
    Catedra: CatedraCreateNestedOneWithoutPlanDeClasesInput
    Docente: DocenteCreateNestedOneWithoutPlanDeClasesInput
  }

  export type PlanDeClasesUncheckedCreateWithoutUnidadPlanInput = {
    id?: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    docenteId: number
    catedraId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PlanDeClasesCreateOrConnectWithoutUnidadPlanInput = {
    where: PlanDeClasesWhereUniqueInput
    create: XOR<PlanDeClasesCreateWithoutUnidadPlanInput, PlanDeClasesUncheckedCreateWithoutUnidadPlanInput>
  }

  export type PlanDeClasesUpsertWithoutUnidadPlanInput = {
    update: XOR<PlanDeClasesUpdateWithoutUnidadPlanInput, PlanDeClasesUncheckedUpdateWithoutUnidadPlanInput>
    create: XOR<PlanDeClasesCreateWithoutUnidadPlanInput, PlanDeClasesUncheckedCreateWithoutUnidadPlanInput>
    where?: PlanDeClasesWhereInput
  }

  export type PlanDeClasesUpdateToOneWithWhereWithoutUnidadPlanInput = {
    where?: PlanDeClasesWhereInput
    data: XOR<PlanDeClasesUpdateWithoutUnidadPlanInput, PlanDeClasesUncheckedUpdateWithoutUnidadPlanInput>
  }

  export type PlanDeClasesUpdateWithoutUnidadPlanInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Catedra?: CatedraUpdateOneRequiredWithoutPlanDeClasesNestedInput
    Docente?: DocenteUpdateOneRequiredWithoutPlanDeClasesNestedInput
  }

  export type PlanDeClasesUncheckedUpdateWithoutUnidadPlanInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    docenteId?: IntFieldUpdateOperationsInput | number
    catedraId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraAlumnoCreateManyComposerInput = {
    catedraId: number
    alumnoId?: number | null
    assignedAt?: Date | string
    assignedBy: string
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
  }

  export type CommentCreateManyComposerInput = {
    id?: number
    text: string
    created_at?: Date | string
    ip_address?: string | null
    name: string
  }

  export type EditSuggestionCreateManyComposerInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    birth_year?: number | null
    birth_month?: number | null
    birth_day?: number | null
    death_year?: number | null
    death_month?: number | null
    death_day?: number | null
    bio?: string | null
    notable_works?: string | null
    period?: string | null
    references?: string | null
    youtube_link?: string | null
    mainRole?: EditSuggestionCreatemainRoleInput | $Enums.RoleType[]
    reason: string
    status?: string
    suggester_email: string
    suggester_ip?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    is_student_contribution?: boolean | null
    student_first_name?: string | null
    student_last_name?: string | null
    points?: number
  }

  export type RatingCreateManyComposerInput = {
    id?: number
    rating_value: number
    ip_address?: string | null
    created_at?: Date | string
  }

  export type CatedraAlumnoUpdateWithoutComposerInput = {
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutCatedraAlumnoNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutCatedraAlumnoNestedInput
    Pago?: PagoUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateWithoutComposerInput = {
    catedraId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Pago?: PagoUncheckedUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateManyWithoutComposerInput = {
    catedraId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentUpdateWithoutComposerInput = {
    text?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CommentUncheckedUpdateWithoutComposerInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CommentUncheckedUpdateManyWithoutComposerInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
  }

  export type EditSuggestionUpdateWithoutComposerInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    birth_year?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    notable_works?: NullableStringFieldUpdateOperationsInput | string | null
    period?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    mainRole?: EditSuggestionUpdatemainRoleInput | $Enums.RoleType[]
    reason?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    suggester_email?: StringFieldUpdateOperationsInput | string
    suggester_ip?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_student_contribution?: NullableBoolFieldUpdateOperationsInput | boolean | null
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
  }

  export type EditSuggestionUncheckedUpdateWithoutComposerInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    birth_year?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    notable_works?: NullableStringFieldUpdateOperationsInput | string | null
    period?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    mainRole?: EditSuggestionUpdatemainRoleInput | $Enums.RoleType[]
    reason?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    suggester_email?: StringFieldUpdateOperationsInput | string
    suggester_ip?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_student_contribution?: NullableBoolFieldUpdateOperationsInput | boolean | null
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
  }

  export type EditSuggestionUncheckedUpdateManyWithoutComposerInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    birth_year?: NullableIntFieldUpdateOperationsInput | number | null
    birth_month?: NullableIntFieldUpdateOperationsInput | number | null
    birth_day?: NullableIntFieldUpdateOperationsInput | number | null
    death_year?: NullableIntFieldUpdateOperationsInput | number | null
    death_month?: NullableIntFieldUpdateOperationsInput | number | null
    death_day?: NullableIntFieldUpdateOperationsInput | number | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    notable_works?: NullableStringFieldUpdateOperationsInput | string | null
    period?: NullableStringFieldUpdateOperationsInput | string | null
    references?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    mainRole?: EditSuggestionUpdatemainRoleInput | $Enums.RoleType[]
    reason?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    suggester_email?: StringFieldUpdateOperationsInput | string
    suggester_ip?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_student_contribution?: NullableBoolFieldUpdateOperationsInput | boolean | null
    student_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    student_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    points?: IntFieldUpdateOperationsInput | number
  }

  export type RatingUpdateWithoutComposerInput = {
    rating_value?: IntFieldUpdateOperationsInput | number
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUncheckedUpdateWithoutComposerInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating_value?: IntFieldUpdateOperationsInput | number
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RatingUncheckedUpdateManyWithoutComposerInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating_value?: IntFieldUpdateOperationsInput | number
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsistenciaCreateManyAlumnoInput = {
    id?: number
    presente: boolean
    created_at?: Date | string
    diaClaseId: number
  }

  export type CalificacionEvaluacionCreateManyAlumnoInput = {
    id?: number
    puntos: number
    created_at?: Date | string
    evaluacionAsignacionId: number
  }

  export type CatedraAlumnoCreateManyAlumnoInput = {
    catedraId: number
    assignedAt?: Date | string
    assignedBy: string
    composerId?: number | null
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
  }

  export type ComentarioPublicacionCreateManyAlumnoInput = {
    id?: number
    texto: string
    publicacionId: number
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type EvaluacionAsignacionCreateManyAlumnoInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    evaluacionId: number
    publicacionId?: number | null
  }

  export type PublicacionCreateManyAlumnoInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
  }

  export type PublicacionInteraccionCreateManyAlumnoInput = {
    id?: number
    publicacionId: number
    docenteId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type PuntuacionCreateManyAlumnoInput = {
    id?: number
    puntos: number
    motivo: string
    created_at?: Date | string
    catedraId?: number | null
    tipo: $Enums.TipoPuntuacion
  }

  export type RespuestaAlumnoCreateManyAlumnoInput = {
    id?: number
    created_at?: Date | string
    preguntaId: number
    opcionElegidaId: number
  }

  export type TareaAsignacionCreateManyAlumnoInput = {
    id?: number
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId: number
  }

  export type AsistenciaUpdateWithoutAlumnoInput = {
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    DiaClase?: DiaClaseUpdateOneRequiredWithoutAsistenciaNestedInput
  }

  export type AsistenciaUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    diaClaseId?: IntFieldUpdateOperationsInput | number
  }

  export type AsistenciaUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    diaClaseId?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionEvaluacionUpdateWithoutAlumnoInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneRequiredWithoutCalificacionEvaluacionNestedInput
  }

  export type CalificacionEvaluacionUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    evaluacionAsignacionId?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionEvaluacionUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    evaluacionAsignacionId?: IntFieldUpdateOperationsInput | number
  }

  export type CatedraAlumnoUpdateWithoutAlumnoInput = {
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Catedra?: CatedraUpdateOneRequiredWithoutCatedraAlumnoNestedInput
    Composer?: ComposerUpdateOneWithoutCatedraAlumnoNestedInput
    Pago?: PagoUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateWithoutAlumnoInput = {
    catedraId?: IntFieldUpdateOperationsInput | number
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    composerId?: NullableIntFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Pago?: PagoUncheckedUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateManyWithoutAlumnoInput = {
    catedraId?: IntFieldUpdateOperationsInput | number
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    composerId?: NullableIntFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioPublicacionUpdateWithoutAlumnoInput = {
    texto?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Docente?: DocenteUpdateOneWithoutComentarioPublicacionNestedInput
    Publicacion?: PublicacionUpdateOneRequiredWithoutComentarioPublicacionNestedInput
  }

  export type ComentarioPublicacionUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioPublicacionUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EvaluacionAsignacionUpdateWithoutAlumnoInput = {
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateOneWithoutEvaluacionAsignacionNestedInput
    Evaluacion?: EvaluacionUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    evaluacionId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    evaluacionId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PublicacionUpdateWithoutAlumnoInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PublicacionInteraccionUpdateWithoutAlumnoInput = {
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Docente?: DocenteUpdateOneWithoutPublicacionInteraccionNestedInput
    Publicacion?: PublicacionUpdateOneRequiredWithoutPublicacionInteraccionNestedInput
  }

  export type PublicacionInteraccionUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionInteraccionUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PuntuacionUpdateWithoutAlumnoInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
    Catedra?: CatedraUpdateOneWithoutPuntuacionNestedInput
  }

  export type PuntuacionUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
  }

  export type PuntuacionUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    catedraId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
  }

  export type RespuestaAlumnoUpdateWithoutAlumnoInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Opcion?: OpcionUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
    Pregunta?: PreguntaUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
  }

  export type RespuestaAlumnoUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preguntaId?: IntFieldUpdateOperationsInput | number
    opcionElegidaId?: IntFieldUpdateOperationsInput | number
  }

  export type RespuestaAlumnoUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preguntaId?: IntFieldUpdateOperationsInput | number
    opcionElegidaId?: IntFieldUpdateOperationsInput | number
  }

  export type TareaAsignacionUpdateWithoutAlumnoInput = {
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    TareaMaestra?: TareaMaestraUpdateOneRequiredWithoutTareaAsignacionNestedInput
  }

  export type TareaAsignacionUncheckedUpdateWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: IntFieldUpdateOperationsInput | number
  }

  export type TareaAsignacionUncheckedUpdateManyWithoutAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: IntFieldUpdateOperationsInput | number
  }

  export type CatedraAlumnoCreateManyCatedraInput = {
    alumnoId?: number | null
    assignedAt?: Date | string
    assignedBy: string
    composerId?: number | null
    id?: number
    dia_cobro?: number | null
    fecha_inscripcion?: Date | string
  }

  export type CatedraDiaHorarioCreateManyCatedraInput = {
    id?: number
    dia_semana: string
    hora_inicio: string
    hora_fin: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type DiaClaseCreateManyCatedraInput = {
    id?: number
    fecha: Date | string
    dia_semana: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type EvaluacionCreateManyCatedraInput = {
    id?: number
    titulo: string
    created_at?: Date | string
    fecha_limite?: Date | string | null
    isMaster?: boolean
  }

  export type PlanDeClasesCreateManyCatedraInput = {
    id?: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    docenteId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PublicacionCreateManyCatedraInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
  }

  export type PuntuacionCreateManyCatedraInput = {
    id?: number
    puntos: number
    motivo: string
    created_at?: Date | string
    alumnoId: number
    tipo: $Enums.TipoPuntuacion
  }

  export type TareaMaestraCreateManyCatedraInput = {
    id?: number
    titulo: string
    descripcion: string
    fecha_entrega?: Date | string | null
    puntos_posibles: number
    recursos?: TareaMaestraCreaterecursosInput | string[]
    multimedia_path?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    publicacionId?: number | null
  }

  export type CatedraAlumnoUpdateWithoutCatedraInput = {
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutCatedraAlumnoNestedInput
    Composer?: ComposerUpdateOneWithoutCatedraAlumnoNestedInput
    Pago?: PagoUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateWithoutCatedraInput = {
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    composerId?: NullableIntFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
    Pago?: PagoUncheckedUpdateManyWithoutCatedraAlumnoNestedInput
  }

  export type CatedraAlumnoUncheckedUpdateManyWithoutCatedraInput = {
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    assignedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedBy?: StringFieldUpdateOperationsInput | string
    composerId?: NullableIntFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
    dia_cobro?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_inscripcion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraDiaHorarioUpdateWithoutCatedraInput = {
    dia_semana?: StringFieldUpdateOperationsInput | string
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraDiaHorarioUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    dia_semana?: StringFieldUpdateOperationsInput | string
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    dia_semana?: StringFieldUpdateOperationsInput | string
    hora_inicio?: StringFieldUpdateOperationsInput | string
    hora_fin?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DiaClaseUpdateWithoutCatedraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Asistencia?: AsistenciaUpdateManyWithoutDiaClaseNestedInput
  }

  export type DiaClaseUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Asistencia?: AsistenciaUncheckedUpdateManyWithoutDiaClaseNestedInput
  }

  export type DiaClaseUncheckedUpdateManyWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    dia_semana?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EvaluacionUpdateWithoutCatedraInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateManyWithoutEvaluacionNestedInput
    Pregunta?: PreguntaUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
    EvaluacionAsignacion?: EvaluacionAsignacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    Pregunta?: PreguntaUncheckedUpdateManyWithoutEvaluacionNestedInput
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateManyWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_limite?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isMaster?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PlanDeClasesUpdateWithoutCatedraInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Docente?: DocenteUpdateOneRequiredWithoutPlanDeClasesNestedInput
    UnidadPlan?: UnidadPlanUpdateManyWithoutPlanDeClasesNestedInput
  }

  export type PlanDeClasesUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    docenteId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    UnidadPlan?: UnidadPlanUncheckedUpdateManyWithoutPlanDeClasesNestedInput
  }

  export type PlanDeClasesUncheckedUpdateManyWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    docenteId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionUpdateWithoutCatedraInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateManyWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PuntuacionUpdateWithoutCatedraInput = {
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
    Alumno?: AlumnoUpdateOneRequiredWithoutPuntuacionNestedInput
  }

  export type PuntuacionUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
  }

  export type PuntuacionUncheckedUpdateManyWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    puntos?: IntFieldUpdateOperationsInput | number
    motivo?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoPuntuacionFieldUpdateOperationsInput | $Enums.TipoPuntuacion
  }

  export type TareaMaestraUpdateWithoutCatedraInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Publicacion?: PublicacionUpdateOneWithoutTareaMaestraNestedInput
    TareaAsignacion?: TareaAsignacionUpdateManyWithoutTareaMaestraNestedInput
  }

  export type TareaMaestraUncheckedUpdateWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    Publicacion?: PublicacionUncheckedUpdateOneWithoutTareaMaestraNestedInput
    TareaAsignacion?: TareaAsignacionUncheckedUpdateManyWithoutTareaMaestraNestedInput
  }

  export type TareaMaestraUncheckedUpdateManyWithoutCatedraInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_posibles?: IntFieldUpdateOperationsInput | number
    recursos?: TareaMaestraUpdaterecursosInput | string[]
    multimedia_path?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PagoCreateManyCatedraAlumnoInput = {
    id?: number
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    confirmadoPorId?: number | null
    created_at?: Date | string
  }

  export type PagoUpdateWithoutCatedraAlumnoInput = {
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Docente?: DocenteUpdateOneWithoutPagoNestedInput
  }

  export type PagoUncheckedUpdateWithoutCatedraAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    confirmadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoUncheckedUpdateManyWithoutCatedraAlumnoInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    confirmadoPorId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AsistenciaCreateManyDiaClaseInput = {
    id?: number
    presente: boolean
    created_at?: Date | string
    alumnoId: number
  }

  export type AsistenciaUpdateWithoutDiaClaseInput = {
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutAsistenciaNestedInput
  }

  export type AsistenciaUncheckedUpdateWithoutDiaClaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
  }

  export type AsistenciaUncheckedUpdateManyWithoutDiaClaseInput = {
    id?: IntFieldUpdateOperationsInput | number
    presente?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
  }

  export type CatedraCreateManyDocenteInput = {
    id?: number
    nombre: string
    anio: number
    institucion: string
    turno: string
    aula: string
    dias: string
    created_at?: Date | string
    updated_at?: Date | string
    modalidad_pago?: $Enums.ModalidadPago
  }

  export type ComentarioPublicacionCreateManyDocenteInput = {
    id?: number
    texto: string
    publicacionId: number
    autorAlumnoId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PagoCreateManyDocenteInput = {
    id?: number
    catedraAlumnoId: number
    fecha_pago?: Date | string
    monto_pagado: number
    tipo_pago: $Enums.TipoPago
    periodo_cubierto?: string | null
    created_at?: Date | string
  }

  export type PlanDeClasesCreateManyDocenteInput = {
    id?: number
    titulo: string
    tipoOrganizacion: $Enums.TipoOrganizacionPlan
    catedraId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PublicacionCreateManyDocenteInput = {
    id?: number
    titulo: string
    contenido: string
    tipo: $Enums.TipoPublicacion
    catedraId: number
    autorAlumnoId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tareaMaestraId?: number | null
    visibleToStudents?: boolean
    evaluacionAsignacionId?: number | null
    evaluacionMaestraId?: number | null
  }

  export type PublicacionInteraccionCreateManyDocenteInput = {
    id?: number
    publicacionId: number
    alumnoId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type CatedraUpdateWithoutDocenteInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
    CatedraAlumno?: CatedraAlumnoUncheckedUpdateManyWithoutCatedraNestedInput
    CatedraDiaHorario?: CatedraDiaHorarioUncheckedUpdateManyWithoutCatedraNestedInput
    CostoCatedra?: CostoCatedraUncheckedUpdateOneWithoutCatedraNestedInput
    DiaClase?: DiaClaseUncheckedUpdateManyWithoutCatedraNestedInput
    Evaluacion?: EvaluacionUncheckedUpdateManyWithoutCatedraNestedInput
    PlanDeClases?: PlanDeClasesUncheckedUpdateManyWithoutCatedraNestedInput
    Publicacion?: PublicacionUncheckedUpdateManyWithoutCatedraNestedInput
    Puntuacion?: PuntuacionUncheckedUpdateManyWithoutCatedraNestedInput
    TareaMaestra?: TareaMaestraUncheckedUpdateManyWithoutCatedraNestedInput
  }

  export type CatedraUncheckedUpdateManyWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    anio?: IntFieldUpdateOperationsInput | number
    institucion?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    aula?: StringFieldUpdateOperationsInput | string
    dias?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    modalidad_pago?: EnumModalidadPagoFieldUpdateOperationsInput | $Enums.ModalidadPago
  }

  export type ComentarioPublicacionUpdateWithoutDocenteInput = {
    texto?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutComentarioPublicacionNestedInput
    Publicacion?: PublicacionUpdateOneRequiredWithoutComentarioPublicacionNestedInput
  }

  export type ComentarioPublicacionUncheckedUpdateWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioPublicacionUncheckedUpdateManyWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoUpdateWithoutDocenteInput = {
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    CatedraAlumno?: CatedraAlumnoUpdateOneRequiredWithoutPagoNestedInput
  }

  export type PagoUncheckedUpdateWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    catedraAlumnoId?: IntFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagoUncheckedUpdateManyWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    catedraAlumnoId?: IntFieldUpdateOperationsInput | number
    fecha_pago?: DateTimeFieldUpdateOperationsInput | Date | string
    monto_pagado?: FloatFieldUpdateOperationsInput | number
    tipo_pago?: EnumTipoPagoFieldUpdateOperationsInput | $Enums.TipoPago
    periodo_cubierto?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlanDeClasesUpdateWithoutDocenteInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Catedra?: CatedraUpdateOneRequiredWithoutPlanDeClasesNestedInput
    UnidadPlan?: UnidadPlanUpdateManyWithoutPlanDeClasesNestedInput
  }

  export type PlanDeClasesUncheckedUpdateWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    catedraId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    UnidadPlan?: UnidadPlanUncheckedUpdateManyWithoutPlanDeClasesNestedInput
  }

  export type PlanDeClasesUncheckedUpdateManyWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    tipoOrganizacion?: EnumTipoOrganizacionPlanFieldUpdateOperationsInput | $Enums.TipoOrganizacionPlan
    catedraId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionUpdateWithoutDocenteInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    ComentarioPublicacion?: ComentarioPublicacionUpdateManyWithoutPublicacionNestedInput
    Alumno?: AlumnoUpdateOneWithoutPublicacionNestedInput
    Catedra?: CatedraUpdateOneRequiredWithoutPublicacionNestedInput
    EvaluacionAsignacion?: EvaluacionAsignacionUpdateOneWithoutPublicacionNestedInput
    Evaluacion?: EvaluacionUpdateOneWithoutPublicacionNestedInput
    TareaMaestra?: TareaMaestraUpdateOneWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    ComentarioPublicacion?: ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
    PublicacionInteraccion?: PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionUncheckedUpdateManyWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    tipo?: EnumTipoPublicacionFieldUpdateOperationsInput | $Enums.TipoPublicacion
    catedraId?: IntFieldUpdateOperationsInput | number
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tareaMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
    visibleToStudents?: BoolFieldUpdateOperationsInput | boolean
    evaluacionAsignacionId?: NullableIntFieldUpdateOperationsInput | number | null
    evaluacionMaestraId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PublicacionInteraccionUpdateWithoutDocenteInput = {
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutPublicacionInteraccionNestedInput
    Publicacion?: PublicacionUpdateOneRequiredWithoutPublicacionInteraccionNestedInput
  }

  export type PublicacionInteraccionUncheckedUpdateWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionInteraccionUncheckedUpdateManyWithoutDocenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EvaluacionAsignacionCreateManyEvaluacionInput = {
    id?: number
    estado?: $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
    publicacionId?: number | null
  }

  export type PreguntaCreateManyEvaluacionInput = {
    id?: number
    texto: string
  }

  export type EvaluacionAsignacionUpdateWithoutEvaluacionInput = {
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUpdateOneWithoutEvaluacionAsignacionNestedInput
    Alumno?: AlumnoUpdateOneRequiredWithoutEvaluacionAsignacionNestedInput
    Publicacion?: PublicacionUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionUncheckedUpdateWithoutEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
    CalificacionEvaluacion?: CalificacionEvaluacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
    Publicacion?: PublicacionUncheckedUpdateOneWithoutEvaluacionAsignacionNestedInput
  }

  export type EvaluacionAsignacionUncheckedUpdateManyWithoutEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoEvaluacionAsignacionFieldUpdateOperationsInput | $Enums.EstadoEvaluacionAsignacion
    fecha_entrega?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    publicacionId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PreguntaUpdateWithoutEvaluacionInput = {
    texto?: StringFieldUpdateOperationsInput | string
    Opcion?: OpcionUpdateManyWithoutPreguntaNestedInput
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutPreguntaNestedInput
  }

  export type PreguntaUncheckedUpdateWithoutEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    Opcion?: OpcionUncheckedUpdateManyWithoutPreguntaNestedInput
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutPreguntaNestedInput
  }

  export type PreguntaUncheckedUpdateManyWithoutEvaluacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
  }

  export type RespuestaAlumnoCreateManyOpcionInput = {
    id?: number
    created_at?: Date | string
    alumnoId: number
    preguntaId: number
  }

  export type RespuestaAlumnoUpdateWithoutOpcionInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
    Pregunta?: PreguntaUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
  }

  export type RespuestaAlumnoUncheckedUpdateWithoutOpcionInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    preguntaId?: IntFieldUpdateOperationsInput | number
  }

  export type RespuestaAlumnoUncheckedUpdateManyWithoutOpcionInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    preguntaId?: IntFieldUpdateOperationsInput | number
  }

  export type UnidadPlanCreateManyPlanDeClasesInput = {
    id?: number
    periodo: string
    contenido: string
    capacidades: string
    horasTeoricas: number
    horasPracticas: number
    estrategiasMetodologicas: string
    mediosVerificacionEvaluacion: string
    recursos?: UnidadPlanCreaterecursosInput | string[]
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UnidadPlanUpdateWithoutPlanDeClasesInput = {
    periodo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    capacidades?: StringFieldUpdateOperationsInput | string
    horasTeoricas?: IntFieldUpdateOperationsInput | number
    horasPracticas?: IntFieldUpdateOperationsInput | number
    estrategiasMetodologicas?: StringFieldUpdateOperationsInput | string
    mediosVerificacionEvaluacion?: StringFieldUpdateOperationsInput | string
    recursos?: UnidadPlanUpdaterecursosInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnidadPlanUncheckedUpdateWithoutPlanDeClasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    periodo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    capacidades?: StringFieldUpdateOperationsInput | string
    horasTeoricas?: IntFieldUpdateOperationsInput | number
    horasPracticas?: IntFieldUpdateOperationsInput | number
    estrategiasMetodologicas?: StringFieldUpdateOperationsInput | string
    mediosVerificacionEvaluacion?: StringFieldUpdateOperationsInput | string
    recursos?: UnidadPlanUpdaterecursosInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnidadPlanUncheckedUpdateManyWithoutPlanDeClasesInput = {
    id?: IntFieldUpdateOperationsInput | number
    periodo?: StringFieldUpdateOperationsInput | string
    contenido?: StringFieldUpdateOperationsInput | string
    capacidades?: StringFieldUpdateOperationsInput | string
    horasTeoricas?: IntFieldUpdateOperationsInput | number
    horasPracticas?: IntFieldUpdateOperationsInput | number
    estrategiasMetodologicas?: StringFieldUpdateOperationsInput | string
    mediosVerificacionEvaluacion?: StringFieldUpdateOperationsInput | string
    recursos?: UnidadPlanUpdaterecursosInput | string[]
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpcionCreateManyPreguntaInput = {
    id?: number
    texto: string
    es_correcta?: boolean
  }

  export type RespuestaAlumnoCreateManyPreguntaInput = {
    id?: number
    created_at?: Date | string
    alumnoId: number
    opcionElegidaId: number
  }

  export type OpcionUpdateWithoutPreguntaInput = {
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    RespuestaAlumno?: RespuestaAlumnoUpdateManyWithoutOpcionNestedInput
  }

  export type OpcionUncheckedUpdateWithoutPreguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
    RespuestaAlumno?: RespuestaAlumnoUncheckedUpdateManyWithoutOpcionNestedInput
  }

  export type OpcionUncheckedUpdateManyWithoutPreguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    es_correcta?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RespuestaAlumnoUpdateWithoutPreguntaInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
    Opcion?: OpcionUpdateOneRequiredWithoutRespuestaAlumnoNestedInput
  }

  export type RespuestaAlumnoUncheckedUpdateWithoutPreguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    opcionElegidaId?: IntFieldUpdateOperationsInput | number
  }

  export type RespuestaAlumnoUncheckedUpdateManyWithoutPreguntaInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
    opcionElegidaId?: IntFieldUpdateOperationsInput | number
  }

  export type ComentarioPublicacionCreateManyPublicacionInput = {
    id?: number
    texto: string
    autorAlumnoId?: number | null
    autorDocenteId?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PublicacionInteraccionCreateManyPublicacionInput = {
    id?: number
    alumnoId?: number | null
    docenteId?: number | null
    tipo?: $Enums.TipoInteraccionPublicacion
    created_at?: Date | string
  }

  export type ComentarioPublicacionUpdateWithoutPublicacionInput = {
    texto?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutComentarioPublicacionNestedInput
    Docente?: DocenteUpdateOneWithoutComentarioPublicacionNestedInput
  }

  export type ComentarioPublicacionUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentarioPublicacionUncheckedUpdateManyWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    texto?: StringFieldUpdateOperationsInput | string
    autorAlumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    autorDocenteId?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionInteraccionUpdateWithoutPublicacionInput = {
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneWithoutPublicacionInteraccionNestedInput
    Docente?: DocenteUpdateOneWithoutPublicacionInteraccionNestedInput
  }

  export type PublicacionInteraccionUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionInteraccionUncheckedUpdateManyWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    alumnoId?: NullableIntFieldUpdateOperationsInput | number | null
    docenteId?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoInteraccionPublicacionFieldUpdateOperationsInput | $Enums.TipoInteraccionPublicacion
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TareaAsignacionCreateManyTareaMaestraInput = {
    id?: number
    estado?: $Enums.EstadoTarea
    submission_path?: string | null
    submission_date?: Date | string | null
    puntos_obtenidos?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    alumnoId: number
  }

  export type TareaAsignacionUpdateWithoutTareaMaestraInput = {
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Alumno?: AlumnoUpdateOneRequiredWithoutTareaAsignacionNestedInput
  }

  export type TareaAsignacionUncheckedUpdateWithoutTareaMaestraInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
  }

  export type TareaAsignacionUncheckedUpdateManyWithoutTareaMaestraInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: EnumEstadoTareaFieldUpdateOperationsInput | $Enums.EstadoTarea
    submission_path?: NullableStringFieldUpdateOperationsInput | string | null
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    puntos_obtenidos?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    alumnoId?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}